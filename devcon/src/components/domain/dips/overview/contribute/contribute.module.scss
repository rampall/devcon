@use 'assets/css/partials/index' as *;

@keyframes auto-scroll {
  100% {
    transform: translateX(var(--track-width));
  }
}

@keyframes auto-scroll-indent {
  100% {
    transform: translateX(calc(var(--track-width) + var(--odd-offset)));
  }
}

@keyframes auto-scroll-reverse {
  100% {
    transform: translateX(0px);
  }
}

.section {
  display: flex;
  flex-direction: column;
  scroll-margin-top: 120px;
  scroll-snap-margin-top: 120px; // safari

  .container {
    --custom-fade-color: #afdfc8de;
    --custom-text-color: rgb(85, 147, 119);
    display: flex;
    flex-direction: row;
    // flex-wrap: wrap;
    // margin-bottom: $gaps-gap-4;

    @media (max-width: $breakpoints-xl) {
      flex-direction: column;
    }

    .header-container {
      flex-basis: 100%;
    }

    .left-section {
      flex-basis: 50%;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      margin-right: 60px;

      @media (max-width: $breakpoints-xl) {
        flex-basis: auto;
        margin-right: 0px;
      }

      .dip-description {
        flex-shrink: 0;

        @media (max-width: $breakpoints-lg) {
          // flex-basis: 100%;
        }
      }

      .links {
        margin-top: $gaps-gap-6;
        > * {
          margin-right: $gaps-gap-12;

          &:last-child {
            margin-right: 0px;
          }
        }
      }
    }

    .contributors {
      position: relative;
      display: flex;
      flex-direction: column;
      justify-content: center;
      flex-basis: 65%;
      // min-height: 500px;

      @media (max-width: $breakpoints-xl) {
        margin-top: $gaps-gap-6;
        flex-basis: auto;
      }

      .info {
        display: flex;
        justify-content: flex-end;
        align-items: center;

        p {
          margin-right: $gaps-gap-2;
          opacity: 0.6;
        }

        svg {
          font-size: $sizes-size-12;
        }
      }
    }
  }
}

.scroll-container {
  position: relative;
  width: 100%;
  overflow: hidden;

  mask-image: linear-gradient(to right, transparent, black 17%, black 83%, transparent);

  .track {
    @media (hover: hover) {
      &:hover {
        -webkit-animation-play-state: paused !important;
        -moz-animation-play-state: paused !important;
        -o-animation-play-state: paused !important;
        animation-play-state: paused !important;
      }
    }

    --thumbnails-per-view: 7;
    --thumbnail-spacing: 20px;
    --track-width: calc(-100% + var(--container-size));
    transform: translateX(0%);
    // yikes
    --odd-offset: calc(
      (
        ((var(--container-size) / var(--thumbnails-per-view) - (var(--thumbnail-spacing) * 2)) / 2) +
          var(--thumbnail-spacing)
      )
    );

    &.odd {
      transform: translateX(var(--odd-offset));
    }

    // TO FIX: When animation resets there's a quick flicker on safari
    &.animate {
      animation: auto-scroll linear 60s infinite;

      &.odd {
        animation: auto-scroll-indent linear 60s infinite;
      }
    }

    display: inline-block;
    white-space: nowrap;

    // &.reverse {
    //   animation: auto-scroll-reverse linear 120s infinite;
    //   transform: translateX(var(--track-width));
    // }

    @media (max-width: 1600px) {
      --thumbnails-per-view: 5;
    }

    @media (max-width: $breakpoints-xl) {
      --thumbnails-per-view: 6;
    }

    @media (max-width: $breakpoints-md) {
      --thumbnails-per-view: 5;
      // --thumbnail-spacing: 40px;
    }

    @media (max-width: $breakpoints-sm) {
      --thumbnails-per-view: 4;
    }

    @media (max-width: $breakpoints-tiny) {
      --thumbnails-per-view: 3;
    }

    .thumbnail {
      display: inline-block;

      // img {
      cursor: pointer;
      width: calc(var(--container-size) / var(--thumbnails-per-view) - (var(--thumbnail-spacing) * 2));
      margin-left: var(--thumbnail-spacing);
      margin-right: var(--thumbnail-spacing);
      margin-bottom: var(--thumbnail-spacing);
      border-radius: 100px;
      max-width: none;

      @media (max-width: $breakpoints-md) {
        &:nth-last-child(-n + 1) {
          display: none;
        }
      }

      @media (max-width: $breakpoints-sm) {
        &:nth-last-child(-n + 2) {
          display: none;
        }
      }

      @media (max-width: $breakpoints-tiny) {
        &:nth-last-child(-n + 3) {
          display: none;
        }
      }
      // }
    }
  }
}
