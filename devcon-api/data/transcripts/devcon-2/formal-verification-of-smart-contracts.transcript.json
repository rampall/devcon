{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:05,000"
			},
			"offsets": {
				"from": 0,
				"to": 5000
			},
			"text": " Now I talk about this character of the form of verification."
		},
		{
			"timestamps": {
				"from": "00:00:05,000",
				"to": "00:00:14,000"
			},
			"offsets": {
				"from": 5000,
				"to": 14000
			},
			"text": " When people say \"former\", people usually talk about form of attire, form of speech, form of ceremony,"
		},
		{
			"timestamps": {
				"from": "00:00:14,000",
				"to": "00:00:25,000"
			},
			"offsets": {
				"from": 14000,
				"to": 25000
			},
			"text": " or \"tari\", but the form of the informal verification comes from \"formarized mathematics\"."
		},
		{
			"timestamps": {
				"from": "00:00:25,000",
				"to": "00:00:33,000"
			},
			"offsets": {
				"from": 25000,
				"to": 33000
			},
			"text": " In usual mathematics, something is written on paper, and the mathematics can be easy,"
		},
		{
			"timestamps": {
				"from": "00:00:33,000",
				"to": "00:00:42,000"
			},
			"offsets": {
				"from": 33000,
				"to": 42000
			},
			"text": " and she gets an idea, some idea, and she can say perhaps the correct about boring,"
		},
		{
			"timestamps": {
				"from": "00:00:42,000",
				"to": "00:00:50,000"
			},
			"offsets": {
				"from": 42000,
				"to": 50000
			},
			"text": " informal mathematics, something is written in a computer of attire, and the machine is easy."
		},
		{
			"timestamps": {
				"from": "00:00:50,000",
				"to": "00:01:00,000"
			},
			"offsets": {
				"from": 50000,
				"to": 60000
			},
			"text": " The machine has no idea, I guess, but it says \"correct\", by just looking at the form of what's written in it."
		},
		{
			"timestamps": {
				"from": "00:01:00,000",
				"to": "00:01:06,000"
			},
			"offsets": {
				"from": 60000,
				"to": 66000
			},
			"text": " And this form means what this formalization of the music is about."
		},
		{
			"timestamps": {
				"from": "00:01:06,000",
				"to": "00:01:15,000"
			},
			"offsets": {
				"from": 66000,
				"to": 75000
			},
			"text": " This is great for smart contact verification, because usually when you try to glue smart contact correct,"
		},
		{
			"timestamps": {
				"from": "00:01:15,000",
				"to": "00:01:24,000"
			},
			"offsets": {
				"from": 75000,
				"to": 84000
			},
			"text": " it's a massive case analysis. If any data is sent from the corner, if any value is sent from the corner,"
		},
		{
			"timestamps": {
				"from": "00:01:24,000",
				"to": "00:01:31,000"
			},
			"offsets": {
				"from": 84000,
				"to": 91000
			},
			"text": " if the sent data matches some signatures or not, what's in the storage, what's not in the storage,"
		},
		{
			"timestamps": {
				"from": "00:01:31,000",
				"to": "00:01:39,000"
			},
			"offsets": {
				"from": 91000,
				"to": 99000
			},
			"text": " so it's a massive case analysis, and usually much time will be enabled to read it,"
		},
		{
			"timestamps": {
				"from": "00:01:39,000",
				"to": "00:01:48,000"
			},
			"offsets": {
				"from": 99000,
				"to": 108000
			},
			"text": " because it's boring for..."
		},
		{
			"timestamps": {
				"from": "00:01:48,000",
				"to": "00:01:56,000"
			},
			"offsets": {
				"from": 108000,
				"to": 116000
			},
			"text": " \"formar groups\" on Twitter. So this formal, formalization thing, you can access this on Twitter."
		},
		{
			"timestamps": {
				"from": "00:01:56,000",
				"to": "00:02:02,000"
			},
			"offsets": {
				"from": 116000,
				"to": 122000
			},
			"text": " You can, so there's a book, it's here, it's an ITC book."
		},
		{
			"timestamps": {
				"from": "00:02:02,000",
				"to": "00:02:12,000"
			},
			"offsets": {
				"from": 122000,
				"to": 132000
			},
			"text": " You can send a message, you can switch to it, you can send a formula, which says \"probable\", I'm not \"probable\","
		},
		{
			"timestamps": {
				"from": "00:02:12,000",
				"to": "00:02:18,000"
			},
			"offsets": {
				"from": 132000,
				"to": 138000
			},
			"text": " and when it's probably shows you some groups in the figure."
		},
		{
			"timestamps": {
				"from": "00:02:18,000",
				"to": "00:02:20,000"
			},
			"offsets": {
				"from": 138000,
				"to": 140000
			},
			"text": " Did you like it? I see both."
		},
		{
			"timestamps": {
				"from": "00:02:20,000",
				"to": "00:02:33,000"
			},
			"offsets": {
				"from": 140000,
				"to": 153000
			},
			"text": " I think of mine. But this, the same figure already there in 1934, this is original year,"
		},
		{
			"timestamps": {
				"from": "00:02:33,000",
				"to": "00:02:43,000"
			},
			"offsets": {
				"from": 153000,
				"to": 163000
			},
			"text": " German technology, by the help of Gen 10, even in much greater positions, of 10 years,"
		},
		{
			"timestamps": {
				"from": "00:02:43,000",
				"to": "00:02:55,000"
			},
			"offsets": {
				"from": 163000,
				"to": 175000
			},
			"text": " and then, yeah, that's it. There was this thing, so there are rules like \"don't I'm curable,"
		},
		{
			"timestamps": {
				"from": "00:02:55,000",
				"to": "00:03:06,000"
			},
			"offsets": {
				"from": 175000,
				"to": 186000
			},
			"text": " don't decide to\" so it's called \"I'm an introduction\" because on the upper side, there's no \"I'm a symbol\"."
		},
		{
			"timestamps": {
				"from": "00:03:06,000",
				"to": "00:03:19,000"
			},
			"offsets": {
				"from": 186000,
				"to": 199000
			},
			"text": " On the upper side, there's an \"I'm an introduction\" and it's saying that if you have a proof of \"r\" and if you have a proof of \"b\" you can construct a proof of \"r\" on \"b\"."
		},
		{
			"timestamps": {
				"from": "00:03:19,000",
				"to": "00:03:30,000"
			},
			"offsets": {
				"from": 199000,
				"to": 210000
			},
			"text": " This is a theorem, you can remove this \"r\" from the hand, this is a design even, so on the upper side you have \"r\" and \"b\""
		},
		{
			"timestamps": {
				"from": "00:03:30,000",
				"to": "00:03:39,000"
			},
			"offsets": {
				"from": 210000,
				"to": 219000
			},
			"text": " On the bottom side, you don't have it and when you have a proof of \"r\" there you can have a proof of \"r\"."
		},
		{
			"timestamps": {
				"from": "00:03:39,000",
				"to": "00:03:44,000"
			},
			"offsets": {
				"from": 219000,
				"to": 224000
			},
			"text": " If you wish, which is why you wish."
		},
		{
			"timestamps": {
				"from": "00:03:44,000",
				"to": "00:03:54,000"
			},
			"offsets": {
				"from": 224000,
				"to": 234000
			},
			"text": " Similarly, there's all the \"i'm an theorem\", when you have a proof of \"r\", you can construct a proof of \"r\" or \"r\" \"b\" from me."
		},
		{
			"timestamps": {
				"from": "00:03:54,000",
				"to": "00:04:10,000"
			},
			"offsets": {
				"from": 234000,
				"to": 250000
			},
			"text": " This is great because the game-sanquering system is still used today, this is the most common proof system used today, this is the basis of a \"pascal\" or a \"r\""
		},
		{
			"timestamps": {
				"from": "00:04:10,000",
				"to": "00:04:33,000"
			},
			"offsets": {
				"from": 250000,
				"to": 273000
			},
			"text": " and almost all modern products are not used today, so they are not good rules, they are not good rules, because they don't allow you to smag your things into your proofs."
		},
		{
			"timestamps": {
				"from": "00:04:33,000",
				"to": "00:04:49,000"
			},
			"offsets": {
				"from": 273000,
				"to": 289000
			},
			"text": " When you have a proof of \"r\", then you have a proof of \"b\", you can get a proof of \"r\" in \"b\", but in this thing you can do with this to introduce \"b\" and you already had it in the beginning, so nothing new has been here."
		},
		{
			"timestamps": {
				"from": "00:04:49,000",
				"to": "00:05:13,000"
			},
			"offsets": {
				"from": 289000,
				"to": 313000
			},
			"text": " On the right hand side, there are bad rules, it's called \"tonk\", \"tonk introduction\" is the same as \"r\" when you have a proof of \"a\", you can have a proof of \"a\", \"tonk-b\", \"tonk\" is the same as \"r\" and when you have \"a\" \"tonk-b\", you can get a proof of \"b\"."
		},
		{
			"timestamps": {
				"from": "00:05:13,000",
				"to": "00:05:25,000"
			},
			"offsets": {
				"from": 313000,
				"to": 325000
			},
			"text": " This rule allows you to smag your new propositions into your proofs and you can prove the proofs from truth and something like that."
		},
		{
			"timestamps": {
				"from": "00:05:25,000",
				"to": "00:05:31,000"
			},
			"offsets": {
				"from": 325000,
				"to": 331000
			},
			"text": " It's all about the harmony of \"introduction\" and the \"determination\"."
		},
		{
			"timestamps": {
				"from": "00:05:31,000",
				"to": "00:05:55,000"
			},
			"offsets": {
				"from": 331000,
				"to": 355000
			},
			"text": " Then what would be the proof rules in terms of proof of \"sobilitative programs\" and here I need a problem because usually \"okay, we call them to get an idea and say this works, this doesn't work, but we don't do that soliti program size executed from top to bottom."
		},
		{
			"timestamps": {
				"from": "00:05:55,000",
				"to": "00:06:00,000"
			},
			"offsets": {
				"from": 355000,
				"to": 360000
			},
			"text": " That soliti documentation does not say it, might be bottom to top."
		},
		{
			"timestamps": {
				"from": "00:06:00,000",
				"to": "00:06:10,000"
			},
			"offsets": {
				"from": 360000,
				"to": 370000
			},
			"text": " Maybe you say from experiences you tested lots of soliti codes and so on, but then you are actually relying on the compiler."
		},
		{
			"timestamps": {
				"from": "00:06:10,000",
				"to": "00:06:24,000"
			},
			"offsets": {
				"from": 370000,
				"to": 384000
			},
			"text": " The problem here is when you read the soliti code you might get a different idea from what happens when you combine the broader code."
		},
		{
			"timestamps": {
				"from": "00:06:24,000",
				"to": "00:06:34,000"
			},
			"offsets": {
				"from": 384000,
				"to": 394000
			},
			"text": " So I chose just to use the soliti compiler as my guidance."
		},
		{
			"timestamps": {
				"from": "00:06:34,000",
				"to": "00:06:39,000"
			},
			"offsets": {
				"from": 394000,
				"to": 399000
			},
			"text": " So the soliti compiler knows the meaning of the soliti code."
		},
		{
			"timestamps": {
				"from": "00:06:39,000",
				"to": "00:06:49,000"
			},
			"offsets": {
				"from": 399000,
				"to": 409000
			},
			"text": " I get an idiom bytecode, then I submit a problem with infinite rules for each known idiom bytecode."
		},
		{
			"timestamps": {
				"from": "00:06:49,000",
				"to": "00:06:56,000"
			},
			"offsets": {
				"from": 409000,
				"to": 416000
			},
			"text": " Then actually I can answer infinite rules to look like this."
		},
		{
			"timestamps": {
				"from": "00:06:56,000",
				"to": "00:07:12,000"
			},
			"offsets": {
				"from": 416000,
				"to": 432000
			},
			"text": " When if you know if your idiom, if the literal logic machine is at the second position, the set statement is 0.660."
		},
		{
			"timestamps": {
				"from": "00:07:12,000",
				"to": "00:07:36,000"
			},
			"offsets": {
				"from": 432000,
				"to": 456000
			},
			"text": " If you know this state does not go wrong, then from this you can infer that an idiom machine at the first position with a stuck empty does not go wrong because the only thing it can do is either go out of gas or go one step to the original"
		},
		{
			"timestamps": {
				"from": "00:07:36,000",
				"to": "00:07:47,000"
			},
			"offsets": {
				"from": 456000,
				"to": 467000
			},
			"text": " So this type of inference rules are good for the Ethereum virtual machine."
		},
		{
			"timestamps": {
				"from": "00:07:47,000",
				"to": "00:08:01,000"
			},
			"offsets": {
				"from": 467000,
				"to": 481000
			},
			"text": " I take the bit long, why did I treat soliti and the Ethereum virtual machine differently?"
		},
		{
			"timestamps": {
				"from": "00:08:01,000",
				"to": "00:08:09,000"
			},
			"offsets": {
				"from": 481000,
				"to": 489000
			},
			"text": " In a more machine with a way it's better. There is one problem in that we could speak."
		},
		{
			"timestamps": {
				"from": "00:08:09,000",
				"to": "00:08:19,000"
			},
			"offsets": {
				"from": 489000,
				"to": 499000
			},
			"text": " Autorative is written for the Ethereum provost, it's called KPML, that's the best language to prove programs on."
		},
		{
			"timestamps": {
				"from": "00:08:19,000",
				"to": "00:08:27,000"
			},
			"offsets": {
				"from": 499000,
				"to": 507000
			},
			"text": " There are some problem in that we discussed, specifications are translated into obstacles, such as Ethereum, there are some problem in that we discussed specifications are translated into obstacles, such as Ethereum,"
		},
		{
			"timestamps": {
				"from": "00:08:27,000",
				"to": "00:08:36,000"
			},
			"offsets": {
				"from": 507000,
				"to": 516000
			},
			"text": " such as your JavaScript, there are some languages with space with nothing much further definitions,"
		},
		{
			"timestamps": {
				"from": "00:08:36,000",
				"to": "00:08:45,000"
			},
			"offsets": {
				"from": 516000,
				"to": 525000
			},
			"text": " maybe they are easier to translate into obstacles, and there are some English or English-only specs and so on."
		},
		{
			"timestamps": {
				"from": "00:08:45,000",
				"to": "00:08:56,000"
			},
			"offsets": {
				"from": 525000,
				"to": 536000
			},
			"text": " I found the EBM a little bit more easier to deal with."
		},
		{
			"timestamps": {
				"from": "00:08:56,000",
				"to": "00:09:06,000"
			},
			"offsets": {
				"from": 536000,
				"to": 546000
			},
			"text": " Of course there are problems in the EBM specification, the e-commerce or IO,"
		},
		{
			"timestamps": {
				"from": "00:09:06,000",
				"to": "00:09:13,000"
			},
			"offsets": {
				"from": 546000,
				"to": 553000
			},
			"text": " I've been opening some requests to the yellow paper repository, but this is manageable."
		},
		{
			"timestamps": {
				"from": "00:09:13,000",
				"to": "00:09:24,000"
			},
			"offsets": {
				"from": 553000,
				"to": 564000
			},
			"text": " I knew that because many Ethereum client implementers already looked at it and found the problems."
		},
		{
			"timestamps": {
				"from": "00:09:24,000",
				"to": "00:09:27,000"
			},
			"offsets": {
				"from": 564000,
				"to": 567000
			},
			"text": " The document is hard."
		},
		{
			"timestamps": {
				"from": "00:09:27,000",
				"to": "00:09:33,000"
			},
			"offsets": {
				"from": 567000,
				"to": 573000
			},
			"text": " So I just had to implement another Ethereum virtual machine in the fail-improveer."
		},
		{
			"timestamps": {
				"from": "00:09:33,000",
				"to": "00:09:44,000"
			},
			"offsets": {
				"from": 573000,
				"to": 584000
			},
			"text": " It took about 50 pages in the type-setting APO papers, but inside of this is the popular name of the stack,"
		},
		{
			"timestamps": {
				"from": "00:09:44,000",
				"to": "00:09:52,000"
			},
			"offsets": {
				"from": 584000,
				"to": 592000
			},
			"text": " and the changes that stack are also established to the failure of the stack on the phone."
		},
		{
			"timestamps": {
				"from": "00:09:52,000",
				"to": "00:09:59,000"
			},
			"offsets": {
				"from": 592000,
				"to": 599000
			},
			"text": " And then when you want to verify a problem, you have to pay for a problem in a proof check card,"
		},
		{
			"timestamps": {
				"from": "00:09:59,000",
				"to": "00:10:05,000"
			},
			"offsets": {
				"from": 599000,
				"to": 605000
			},
			"text": " there is nothing different, it's just huge, you just have to copy and paste it."
		},
		{
			"timestamps": {
				"from": "00:10:05,000",
				"to": "00:10:13,000"
			},
			"offsets": {
				"from": 605000,
				"to": 613000
			},
			"text": " Actually this caused some problems in the proof check card, because"
		},
		{
			"timestamps": {
				"from": "00:10:13,000",
				"to": "00:10:23,000"
			},
			"offsets": {
				"from": 613000,
				"to": 623000
			},
			"text": " we are doing a construction from this disk, so it took too much time, so I had to transform it into a binary tree, but"
		},
		{
			"timestamps": {
				"from": "00:10:23,000",
				"to": "00:10:26,000"
			},
			"offsets": {
				"from": 623000,
				"to": 626000
			},
			"text": " it's just bureaucracy."
		},
		{
			"timestamps": {
				"from": "00:10:26,000",
				"to": "00:10:34,000"
			},
			"offsets": {
				"from": 626000,
				"to": 634000
			},
			"text": " And then this is the most important question when you want to form a verification, again what you want."
		},
		{
			"timestamps": {
				"from": "00:10:34,000",
				"to": "00:10:44,000"
			},
			"offsets": {
				"from": 634000,
				"to": 644000
			},
			"text": " You have to say what you want, and the first option is the account should be expected the same sound for that."
		},
		{
			"timestamps": {
				"from": "00:10:44,000",
				"to": "00:10:51,000"
			},
			"offsets": {
				"from": 644000,
				"to": 651000
			},
			"text": " I have to interview the people who wrote this and what we expect."
		},
		{
			"timestamps": {
				"from": "00:10:51,000",
				"to": "00:10:57,000"
			},
			"offsets": {
				"from": 651000,
				"to": 657000
			},
			"text": " This is not easy because the question is very informal, what do you want?"
		},
		{
			"timestamps": {
				"from": "00:10:57,000",
				"to": "00:11:05,000"
			},
			"offsets": {
				"from": 657000,
				"to": 665000
			},
			"text": " But my requirement for the answer is very detailed, I have to type it into a proof check card, so I ask a very informal question,"
		},
		{
			"timestamps": {
				"from": "00:11:05,000",
				"to": "00:11:12,000"
			},
			"offsets": {
				"from": 665000,
				"to": 672000
			},
			"text": " and I expect a very detailed answer, that's not easy to conduct."
		},
		{
			"timestamps": {
				"from": "00:11:12,000",
				"to": "00:11:17,000"
			},
			"offsets": {
				"from": 672000,
				"to": 677000
			},
			"text": " At least I have to show something working before I do something."
		},
		{
			"timestamps": {
				"from": "00:11:17,000",
				"to": "00:11:27,000"
			},
			"offsets": {
				"from": 677000,
				"to": 687000
			},
			"text": " The same address is the account shouldn't do, since one, and usually for HTML contracts,"
		},
		{
			"timestamps": {
				"from": "00:11:27,000",
				"to": "00:11:35,000"
			},
			"offsets": {
				"from": 687000,
				"to": 695000
			},
			"text": " the balance shouldn't decrease and this, an all-traves account is sold."
		},
		{
			"timestamps": {
				"from": "00:11:35,000",
				"to": "00:11:45,000"
			},
			"offsets": {
				"from": 695000,
				"to": 705000
			},
			"text": " And with this, an all-traves account cannot make it self-authorized, or I make any other anybody else authorized,"
		},
		{
			"timestamps": {
				"from": "00:11:45,000",
				"to": "00:11:51,000"
			},
			"offsets": {
				"from": 705000,
				"to": 711000
			},
			"text": " because that kind of makes the first point, meaning this."
		},
		{
			"timestamps": {
				"from": "00:11:51,000",
				"to": "00:11:59,000"
			},
			"offsets": {
				"from": 711000,
				"to": 719000
			},
			"text": " So I have to type these conditions in a proof check card, it's straightforward."
		},
		{
			"timestamps": {
				"from": "00:11:59,000",
				"to": "00:12:13,000"
			},
			"offsets": {
				"from": 719000,
				"to": 733000
			},
			"text": " The traffic has more cuts, and yes, saying the storage index 0, does not obtain the four as address."
		},
		{
			"timestamps": {
				"from": "00:12:13,000",
				"to": "00:12:22,000"
			},
			"offsets": {
				"from": 733000,
				"to": 742000
			},
			"text": " This part is for non-authorized, and the contract is still marked active and so on."
		},
		{
			"timestamps": {
				"from": "00:12:22,000",
				"to": "00:12:29,000"
			},
			"offsets": {
				"from": 742000,
				"to": 749000
			},
			"text": " Under these conditions, the expectation is that the balance does not decrease."
		},
		{
			"timestamps": {
				"from": "00:12:29,000",
				"to": "00:12:39,000"
			},
			"offsets": {
				"from": 749000,
				"to": 759000
			},
			"text": " I tried to prove this once and I failed because I forgot to say one condition in the pre-commission,"
		},
		{
			"timestamps": {
				"from": "00:12:39,000",
				"to": "00:12:52,000"
			},
			"offsets": {
				"from": 759000,
				"to": 772000
			},
			"text": " so I will also say the account is still active, and then the proof fails, so I know that something is wrong."
		},
		{
			"timestamps": {
				"from": "00:12:52,000",
				"to": "00:13:01,000"
			},
			"offsets": {
				"from": 772000,
				"to": 781000
			},
			"text": " And then after typing in your requirement what you wish, you have to prove that thing yourself."
		},
		{
			"timestamps": {
				"from": "00:13:01,000",
				"to": "00:13:15,000"
			},
			"offsets": {
				"from": 781000,
				"to": 795000
			},
			"text": " This is just straightforward. You have to type things on the upper pane, and the lower pane is just the machine's responses."
		},
		{
			"timestamps": {
				"from": "00:13:15,000",
				"to": "00:13:30,000"
			},
			"offsets": {
				"from": 795000,
				"to": 810000
			},
			"text": " And here the machine is responding some very long proof goal, but I find a new sentence in the middle of the board saying, \"Okay, well, now it wants to do better analysis.\""
		},
		{
			"timestamps": {
				"from": "00:13:30,000",
				"to": "00:13:47,000"
			},
			"offsets": {
				"from": 810000,
				"to": 827000
			},
			"text": " If the sent data is empty or not empty, actually whenever you try to verify smart contracts generated by the ability, the first question is called data is empty or not."
		},
		{
			"timestamps": {
				"from": "00:13:47,000",
				"to": "00:13:58,000"
			},
			"offsets": {
				"from": 827000,
				"to": 838000
			},
			"text": " So I have to prove a case analysis on this, and it splits the cases, and then I have to prove it's two goals."
		},
		{
			"timestamps": {
				"from": "00:13:58,000",
				"to": "00:14:05,000"
			},
			"offsets": {
				"from": 838000,
				"to": 845000
			},
			"text": " If the sent data is empty, the requirement is called. If the sent data is not empty, the requirement is called."
		},
		{
			"timestamps": {
				"from": "00:14:05,000",
				"to": "00:14:11,000"
			},
			"offsets": {
				"from": 845000,
				"to": 851000
			},
			"text": " And with this, with the usual infinite rules, I get the result."
		},
		{
			"timestamps": {
				"from": "00:14:11,000",
				"to": "00:14:22,000"
			},
			"offsets": {
				"from": 851000,
				"to": 862000
			},
			"text": " So I have to just repeat this case analysis on G, or the case is finished, and then that was condition solved."
		},
		{
			"timestamps": {
				"from": "00:14:22,000",
				"to": "00:14:31,000"
			},
			"offsets": {
				"from": 862000,
				"to": 871000
			},
			"text": " And then after I finish this, again now the machine is convinced that they are not solved."
		},
		{
			"timestamps": {
				"from": "00:14:31,000",
				"to": "00:14:56,000"
			},
			"offsets": {
				"from": 871000,
				"to": 896000
			},
			"text": " This is a question, does this match the reality? The next thing I have to do is I have to test my own EVM implementation against the usual standard battery machine tests for which the CTP cryon, go cryon, and rust, or variate it."
		},
		{
			"timestamps": {
				"from": "00:14:56,000",
				"to": "00:15:11,000"
			},
			"offsets": {
				"from": 896000,
				"to": 911000
			},
			"text": " So they are compared with standard tests, and I have to use this battery machine test to try my EVM implementation in this theorem group."
		},
		{
			"timestamps": {
				"from": "00:15:11,000",
				"to": "00:15:19,000"
			},
			"offsets": {
				"from": 911000,
				"to": 919000
			},
			"text": " If this is wrong, I mean this theorem is garbage because it's about some other machines."
		},
		{
			"timestamps": {
				"from": "00:15:19,000",
				"to": "00:15:33,000"
			},
			"offsets": {
				"from": 919000,
				"to": 933000
			},
			"text": " So I really have to do this. If you think you can do better, there will be a workshop about, actually this is not just about program based case."
		}
	]
}
