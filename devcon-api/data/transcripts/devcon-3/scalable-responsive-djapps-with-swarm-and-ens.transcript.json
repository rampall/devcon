{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:02,980"
			},
			"offsets": {
				"from": 0,
				"to": 2980
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:02,980",
				"to": "00:00:05,960"
			},
			"offsets": {
				"from": 2980,
				"to": 5960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:05,960",
				"to": "00:00:07,960"
			},
			"offsets": {
				"from": 5960,
				"to": 7960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:07,960",
				"to": "00:00:09,960"
			},
			"offsets": {
				"from": 7960,
				"to": 9960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:09,960",
				"to": "00:00:10,960"
			},
			"offsets": {
				"from": 9960,
				"to": 10960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:10,960",
				"to": "00:00:12,960"
			},
			"offsets": {
				"from": 10960,
				"to": 12960
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:12,960",
				"to": "00:00:14,960"
			},
			"offsets": {
				"from": 12960,
				"to": 14960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:14,960",
				"to": "00:00:16,960"
			},
			"offsets": {
				"from": 14960,
				"to": 16960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:16,960",
				"to": "00:00:18,960"
			},
			"offsets": {
				"from": 16960,
				"to": 18960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:18,960",
				"to": "00:00:20,960"
			},
			"offsets": {
				"from": 18960,
				"to": 20960
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:20,960",
				"to": "00:00:22,960"
			},
			"offsets": {
				"from": 20960,
				"to": 22960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:22,960",
				"to": "00:00:24,960"
			},
			"offsets": {
				"from": 22960,
				"to": 24960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:24,960",
				"to": "00:00:26,960"
			},
			"offsets": {
				"from": 24960,
				"to": 26960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:26,960",
				"to": "00:00:28,960"
			},
			"offsets": {
				"from": 26960,
				"to": 28960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:28,960",
				"to": "00:00:30,960"
			},
			"offsets": {
				"from": 28960,
				"to": 30960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:30,960",
				"to": "00:00:32,960"
			},
			"offsets": {
				"from": 30960,
				"to": 32960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:32,960",
				"to": "00:00:34,960"
			},
			"offsets": {
				"from": 32960,
				"to": 34960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:34,960",
				"to": "00:00:36,960"
			},
			"offsets": {
				"from": 34960,
				"to": 36960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:36,960",
				"to": "00:00:38,960"
			},
			"offsets": {
				"from": 36960,
				"to": 38960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:38,960",
				"to": "00:00:40,960"
			},
			"offsets": {
				"from": 38960,
				"to": 40960
			},
			"text": " [GUNSHOT]"
		},
		{
			"timestamps": {
				"from": "00:00:40,960",
				"to": "00:00:45,960"
			},
			"offsets": {
				"from": 40960,
				"to": 45960
			},
			"text": " Hello again. So this is going to be a longer talk."
		},
		{
			"timestamps": {
				"from": "00:00:45,960",
				"to": "00:00:56,520"
			},
			"offsets": {
				"from": 45960,
				"to": 56520
			},
			"text": " The intended audience are developers who want to build scalable and responsive distributed"
		},
		{
			"timestamps": {
				"from": "00:00:56,520",
				"to": "00:01:01,960"
			},
			"offsets": {
				"from": 56520,
				"to": 61960
			},
			"text": " applications on top of swarm using ENS."
		},
		{
			"timestamps": {
				"from": "00:01:01,960",
				"to": "00:01:09,960"
			},
			"offsets": {
				"from": 61960,
				"to": 69960
			},
			"text": " So first, I would like to talk a little bit about the distributed application paradigm."
		},
		{
			"timestamps": {
				"from": "00:01:09,960",
				"to": "00:01:16,960"
			},
			"offsets": {
				"from": 69960,
				"to": 76960
			},
			"text": " It's a very radical departure from the client server model that is prevalent on the Internet"
		},
		{
			"timestamps": {
				"from": "00:01:16,960",
				"to": "00:01:23,960"
			},
			"offsets": {
				"from": 76960,
				"to": 83960
			},
			"text": " today, and with which most web developers are intimately familiar."
		},
		{
			"timestamps": {
				"from": "00:01:23,960",
				"to": "00:01:32,960"
			},
			"offsets": {
				"from": 83960,
				"to": 92960
			},
			"text": " Then I'm going to talk about the various challenges of scaling and what the bottlenecks are."
		},
		{
			"timestamps": {
				"from": "00:01:32,960",
				"to": "00:01:39,960"
			},
			"offsets": {
				"from": 92960,
				"to": 99960
			},
			"text": " Then we are going to discuss how reliability issues are being addressed in a dynamic, decentralized,"
		},
		{
			"timestamps": {
				"from": "00:01:39,960",
				"to": "00:01:46,960"
			},
			"offsets": {
				"from": 99960,
				"to": 106960
			},
			"text": " and essentially low trust environment of a distributed application."
		},
		{
			"timestamps": {
				"from": "00:01:46,960",
				"to": "00:01:53,960"
			},
			"offsets": {
				"from": 106960,
				"to": 113960
			},
			"text": " We are going to discuss availability of content, which is a very important issue."
		},
		{
			"timestamps": {
				"from": "00:01:53,960",
				"to": "00:01:59,960"
			},
			"offsets": {
				"from": 113960,
				"to": 119960
			},
			"text": " And finally, I'm going to talk about the data that we're going to talk about."
		},
		{
			"timestamps": {
				"from": "00:01:59,960",
				"to": "00:02:08,960"
			},
			"offsets": {
				"from": 119960,
				"to": 128960
			},
			"text": " And finally, I'm going to talk about how a distributed application can be operated and"
		},
		{
			"timestamps": {
				"from": "00:02:08,960",
				"to": "00:02:13,960"
			},
			"offsets": {
				"from": 128960,
				"to": 133960
			},
			"text": " developed and improved over its lifecycle."
		},
		{
			"timestamps": {
				"from": "00:02:13,960",
				"to": "00:02:21,960"
			},
			"offsets": {
				"from": 133960,
				"to": 141960
			},
			"text": " So first, the distributed application paradigm."
		},
		{
			"timestamps": {
				"from": "00:02:21,960",
				"to": "00:02:27,960"
			},
			"offsets": {
				"from": 141960,
				"to": 147960
			},
			"text": " The distributed applications are much more heavy on the leaf nodes."
		},
		{
			"timestamps": {
				"from": "00:02:27,960",
				"to": "00:02:36,960"
			},
			"offsets": {
				"from": 147960,
				"to": 156960
			},
			"text": " So endpoint nodes perform a lot more work than clients in a client server applications."
		},
		{
			"timestamps": {
				"from": "00:02:36,960",
				"to": "00:02:44,960"
			},
			"offsets": {
				"from": 156960,
				"to": 164960
			},
			"text": " Very large parts of the business logic are actually done on the client side."
		},
		{
			"timestamps": {
				"from": "00:02:44,960",
				"to": "00:03:05,960"
			},
			"offsets": {
				"from": 164960,
				"to": 185960
			},
			"text": " So on the slide, you see several possible nodes which have their own requirements, but which can be the nodes in a --"
		},
		{
			"timestamps": {
				"from": "00:03:05,960",
				"to": "00:03:09,960"
			},
			"offsets": {
				"from": 185960,
				"to": 189960
			},
			"text": " which can be the nodes of a distributed application."
		},
		{
			"timestamps": {
				"from": "00:03:09,960",
				"to": "00:03:13,960"
			},
			"offsets": {
				"from": 189960,
				"to": 193960
			},
			"text": " So it's not necessarily web-based."
		},
		{
			"timestamps": {
				"from": "00:03:13,960",
				"to": "00:03:33,960"
			},
			"offsets": {
				"from": 193960,
				"to": 213960
			},
			"text": " There can be native mobile applications, Internet of Things devices, and also we need to keep in mind that key and identity management is sometimes outsourced to these hardware keys."
		},
		{
			"timestamps": {
				"from": "00:03:33,960",
				"to": "00:03:38,960"
			},
			"offsets": {
				"from": 213960,
				"to": 218960
			},
			"text": " And we need to take that into account."
		},
		{
			"timestamps": {
				"from": "00:03:38,960",
				"to": "00:03:42,960"
			},
			"offsets": {
				"from": 218960,
				"to": 222960
			},
			"text": " The back end is typical generic."
		},
		{
			"timestamps": {
				"from": "00:03:42,960",
				"to": "00:03:47,960"
			},
			"offsets": {
				"from": 222960,
				"to": 227960
			},
			"text": " And I will talk a little bit later about the deeper reasons behind that."
		},
		{
			"timestamps": {
				"from": "00:03:47,960",
				"to": "00:03:57,960"
			},
			"offsets": {
				"from": 227960,
				"to": 237960
			},
			"text": " But the kind of back ends on which we rely are the ETH and less protocols for consensus."
		},
		{
			"timestamps": {
				"from": "00:03:57,960",
				"to": "00:04:02,960"
			},
			"offsets": {
				"from": 237960,
				"to": 242960
			},
			"text": " So it's either a full node or a light node on the Ethereum network."
		},
		{
			"timestamps": {
				"from": "00:04:02,960",
				"to": "00:04:06,960"
			},
			"offsets": {
				"from": 242960,
				"to": 246960
			},
			"text": " So each node needs to be an Ethereum node."
		},
		{
			"timestamps": {
				"from": "00:04:06,960",
				"to": "00:04:13,960"
			},
			"offsets": {
				"from": 246960,
				"to": 253960
			},
			"text": " We use Swarm for permanently storing large amounts of data and accessing data."
		},
		{
			"timestamps": {
				"from": "00:04:13,960",
				"to": "00:04:21,960"
			},
			"offsets": {
				"from": 253960,
				"to": 261960
			},
			"text": " And we use either PSS or Whisper for node to node communication."
		},
		{
			"timestamps": {
				"from": "00:04:21,960",
				"to": "00:04:24,960"
			},
			"offsets": {
				"from": 261960,
				"to": 264960
			},
			"text": " So all of these back ends are entirely general purpose."
		},
		{
			"timestamps": {
				"from": "00:04:24,960",
				"to": "00:04:29,960"
			},
			"offsets": {
				"from": 264960,
				"to": 269960
			},
			"text": " They're not application-specific."
		},
		{
			"timestamps": {
				"from": "00:04:29,960",
				"to": "00:04:46,960"
			},
			"offsets": {
				"from": 269960,
				"to": 286960
			},
			"text": " And even though I told you that there are no clients and servers in a distributed application, you should still keep in mind that the contribution of resources is by no means equal."
		},
		{
			"timestamps": {
				"from": "00:04:46,960",
				"to": "00:04:56,960"
			},
			"offsets": {
				"from": 286960,
				"to": 296960
			},
			"text": " So peer-to-peer applications are not necessarily balanced in terms of the use and contribution of resources."
		},
		{
			"timestamps": {
				"from": "00:04:56,960",
				"to": "00:05:02,960"
			},
			"offsets": {
				"from": 296960,
				"to": 302960
			},
			"text": " So even if you think about the BitTorrent, there are CDERS and Leatures."
		},
		{
			"timestamps": {
				"from": "00:05:02,960",
				"to": "00:05:11,960"
			},
			"offsets": {
				"from": 302960,
				"to": 311960
			},
			"text": " And in the general terminology, we distinguish between consumers and suppliers of resources."
		},
		{
			"timestamps": {
				"from": "00:05:11,960",
				"to": "00:05:20,960"
			},
			"offsets": {
				"from": 311960,
				"to": 320960
			},
			"text": " And of course, each participant can choose and even change over time to what extent they supply and consume resources."
		},
		{
			"timestamps": {
				"from": "00:05:20,960",
				"to": "00:05:30,960"
			},
			"offsets": {
				"from": 320960,
				"to": 330960
			},
			"text": " But typically, consumers are characterized by high churn."
		},
		{
			"timestamps": {
				"from": "00:05:30,960",
				"to": "00:05:34,960"
			},
			"offsets": {
				"from": 330960,
				"to": 334960
			},
			"text": " So they leave the network and join the network frequently."
		},
		{
			"timestamps": {
				"from": "00:05:34,960",
				"to": "00:05:43,960"
			},
			"offsets": {
				"from": 334960,
				"to": 343960
			},
			"text": " You cannot rely on them staying on the network for a prolonged period of time."
		},
		{
			"timestamps": {
				"from": "00:05:43,960",
				"to": "00:05:50,960"
			},
			"offsets": {
				"from": 343960,
				"to": 350960
			},
			"text": " Typically, they spend accounting units, whether they are Ethers or special-purpose tokens."
		},
		{
			"timestamps": {
				"from": "00:05:50,960",
				"to": "00:05:58,960"
			},
			"offsets": {
				"from": 350960,
				"to": 358960
			},
			"text": " And they have resource limits, which in some cases can be quite severe."
		},
		{
			"timestamps": {
				"from": "00:05:58,960",
				"to": "00:06:09,960"
			},
			"offsets": {
				"from": 358960,
				"to": 369960
			},
			"text": " Suppliers are typically there in order to earn accounting units, so they are providing a service and expect to be paid for it."
		},
		{
			"timestamps": {
				"from": "00:06:09,960",
				"to": "00:06:17,960"
			},
			"offsets": {
				"from": 369960,
				"to": 377960
			},
			"text": " They have a low churn, so they can still leave the network and join the network, but they don't do that frequently."
		},
		{
			"timestamps": {
				"from": "00:06:17,960",
				"to": "00:06:32,960"
			},
			"offsets": {
				"from": 377960,
				"to": 392960
			},
			"text": " They have high availability, and they have adequate resources for providing the services that need to be provided for this distributed application."
		},
		{
			"timestamps": {
				"from": "00:06:32,960",
				"to": "00:06:42,960"
			},
			"offsets": {
				"from": 392960,
				"to": 402960
			},
			"text": " So in the next part, I'm going to talk about the challenges of scaling distributed applications"
		},
		{
			"timestamps": {
				"from": "00:06:42,960",
				"to": "00:06:51,960"
			},
			"offsets": {
				"from": 402960,
				"to": 411960
			},
			"text": " and identify bottlenecks and propose ways of dealing with them."
		},
		{
			"timestamps": {
				"from": "00:06:51,960",
				"to": "00:06:56,960"
			},
			"offsets": {
				"from": 411960,
				"to": 416960
			},
			"text": " So the most important bottleneck is the blockchain."
		},
		{
			"timestamps": {
				"from": "00:06:56,960",
				"to": "00:07:07,960"
			},
			"offsets": {
				"from": 416960,
				"to": 427960
			},
			"text": " Of course, we have heard wonderful talks about how scaling problems on the blockchain are going to be solved over time."
		},
		{
			"timestamps": {
				"from": "00:07:07,960",
				"to": "00:07:16,960"
			},
			"offsets": {
				"from": 427960,
				"to": 436960
			},
			"text": " And in an ideal world in which we had a essentially infinitely scalable blockchain,"
		},
		{
			"timestamps": {
				"from": "00:07:16,960",
				"to": "00:07:24,960"
			},
			"offsets": {
				"from": 436960,
				"to": 444960
			},
			"text": " everything I'm talking about would be unnecessary because we could host the entire distributed application on the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:07:24,960",
				"to": "00:07:31,960"
			},
			"offsets": {
				"from": 444960,
				"to": 451960
			},
			"text": " keep all the data on the blockchain and submit every transaction that the application ever does directly to the blockchain."
		},
		{
			"timestamps": {
				"from": "00:07:31,960",
				"to": "00:07:38,960"
			},
			"offsets": {
				"from": 451960,
				"to": 458960
			},
			"text": " But there are two reasons why I feel that the techniques that I'm going to introduce are still relevant."
		},
		{
			"timestamps": {
				"from": "00:07:38,960",
				"to": "00:07:44,960"
			},
			"offsets": {
				"from": 458960,
				"to": 464960
			},
			"text": " One of them is that the scaling of the blockchain is a slow process,"
		},
		{
			"timestamps": {
				"from": "00:07:44,960",
				"to": "00:07:55,960"
			},
			"offsets": {
				"from": 464960,
				"to": 475960
			},
			"text": " and it's a much harder challenge than scaling the particular dev bottlenecks that I'm going to talk about it."
		},
		{
			"timestamps": {
				"from": "00:07:55,960",
				"to": "00:08:03,960"
			},
			"offsets": {
				"from": 475960,
				"to": 483960
			},
			"text": " So people want to create scalable applications even before all the problems of blockchain scaling are going to be solved."
		},
		{
			"timestamps": {
				"from": "00:08:03,960",
				"to": "00:08:13,960"
			},
			"offsets": {
				"from": 483960,
				"to": 493960
			},
			"text": " And secondly, because the techniques that I'm going to talk about are actually useful for scaling the blockchain."
		},
		{
			"timestamps": {
				"from": "00:08:13,960",
				"to": "00:08:22,960"
			},
			"offsets": {
				"from": 493960,
				"to": 502960
			},
			"text": " So for example, the initial motivation behind Swarm was to store the historical record of the Ethereum blockchain."
		},
		{
			"timestamps": {
				"from": "00:08:22,960",
				"to": "00:08:31,960"
			},
			"offsets": {
				"from": 502960,
				"to": 511960
			},
			"text": " So archive nodes which store the entire blockchain history, as far as I know there are very few of them, maybe none."
		},
		{
			"timestamps": {
				"from": "00:08:31,960",
				"to": "00:08:37,960"
			},
			"offsets": {
				"from": 511960,
				"to": 517960
			},
			"text": " But we still want to keep the entire history of Ethereum available,"
		},
		{
			"timestamps": {
				"from": "00:08:37,960",
				"to": "00:08:42,960"
			},
			"offsets": {
				"from": 517960,
				"to": 522960
			},
			"text": " and Swarm is the perfect vehicle for that."
		},
		{
			"timestamps": {
				"from": "00:08:42,960",
				"to": "00:08:53,960"
			},
			"offsets": {
				"from": 522960,
				"to": 533960
			},
			"text": " So all the techniques that I'm going to talk about can be used for scaling various aspects of the blockchain."
		},
		{
			"timestamps": {
				"from": "00:08:53,960",
				"to": "00:09:02,960"
			},
			"offsets": {
				"from": 533960,
				"to": 542960
			},
			"text": " So on the slide you see in what ways the blockchain constitutes a bottleneck."
		},
		{
			"timestamps": {
				"from": "00:09:02,960",
				"to": "00:09:12,960"
			},
			"offsets": {
				"from": 542960,
				"to": 552960
			},
			"text": " So because all information needs to be replicated over every node, that means that storing information on the blockchain is very expensive,"
		},
		{
			"timestamps": {
				"from": "00:09:12,960",
				"to": "00:09:19,960"
			},
			"offsets": {
				"from": 552960,
				"to": 559960
			},
			"text": " so you don't want to burden the blockchain with too much information."
		},
		{
			"timestamps": {
				"from": "00:09:19,960",
				"to": "00:09:32,960"
			},
			"offsets": {
				"from": 559960,
				"to": 572960
			},
			"text": " Also, the blockchain can only be updated at the block time speed, which is on average a dozen seconds or so,"
		},
		{
			"timestamps": {
				"from": "00:09:32,960",
				"to": "00:09:37,960"
			},
			"offsets": {
				"from": 572960,
				"to": 577960
			},
			"text": " which is not exactly responsive."
		},
		{
			"timestamps": {
				"from": "00:09:37,960",
				"to": "00:09:46,960"
			},
			"offsets": {
				"from": 577960,
				"to": 586960
			},
			"text": " And you have to pay for submitting transactions to the blockchain, so if you do updates very frequently or your updates are very large,"
		},
		{
			"timestamps": {
				"from": "00:09:46,960",
				"to": "00:09:50,960"
			},
			"offsets": {
				"from": 586960,
				"to": 590960
			},
			"text": " then it again becomes overly expensive."
		},
		{
			"timestamps": {
				"from": "00:09:50,960",
				"to": "00:09:55,960"
			},
			"offsets": {
				"from": 590960,
				"to": 595960
			},
			"text": " The other bottleneck that we're going to encounter are individual nodes."
		},
		{
			"timestamps": {
				"from": "00:09:55,960",
				"to": "00:10:05,960"
			},
			"offsets": {
				"from": 595960,
				"to": 605960
			},
			"text": " So basically you don't want individual nodes to perform all the work of a particular area of the distributed application,"
		},
		{
			"timestamps": {
				"from": "00:10:05,960",
				"to": "00:10:13,960"
			},
			"offsets": {
				"from": 605960,
				"to": 613960
			},
			"text": " so you want to distribute all the tasks of ADAP or as many tasks of ADAP as you can"
		},
		{
			"timestamps": {
				"from": "00:10:13,960",
				"to": "00:10:18,960"
			},
			"offsets": {
				"from": 613960,
				"to": 618960
			},
			"text": " over a large number of nodes that are working in parallel."
		},
		{
			"timestamps": {
				"from": "00:10:18,960",
				"to": "00:10:22,960"
			},
			"offsets": {
				"from": 618960,
				"to": 622960
			},
			"text": " And also bottlenecks can be network links."
		},
		{
			"timestamps": {
				"from": "00:10:22,960",
				"to": "00:10:30,960"
			},
			"offsets": {
				"from": 622960,
				"to": 630960
			},
			"text": " So for example, you do not necessarily want to broadcast every interaction to the entire network,"
		},
		{
			"timestamps": {
				"from": "00:10:30,960",
				"to": "00:10:39,960"
			},
			"offsets": {
				"from": 630960,
				"to": 639960
			},
			"text": " because then you're going to have a network congestion, and in case of systems like Whisper,"
		},
		{
			"timestamps": {
				"from": "00:10:39,960",
				"to": "00:10:44,960"
			},
			"offsets": {
				"from": 639960,
				"to": 644960
			},
			"text": " you may need to pay in terms of proof of work for doing so."
		},
		{
			"timestamps": {
				"from": "00:10:44,960",
				"to": "00:10:49,960"
			},
			"offsets": {
				"from": 644960,
				"to": 649960
			},
			"text": " So these are the bottlenecks that we're going to be dealing with."
		},
		{
			"timestamps": {
				"from": "00:10:49,960",
				"to": "00:11:00,960"
			},
			"offsets": {
				"from": 649960,
				"to": 660960
			},
			"text": " So the storage bottleneck is best overcome by storing everything that you can in Swarm"
		},
		{
			"timestamps": {
				"from": "00:11:00,960",
				"to": "00:11:05,960"
			},
			"offsets": {
				"from": 660960,
				"to": 665960
			},
			"text": " and put the root hash of your data in ENS."
		},
		{
			"timestamps": {
				"from": "00:11:05,960",
				"to": "00:11:10,960"
			},
			"offsets": {
				"from": 665960,
				"to": 670960
			},
			"text": " So the root hash is just 32 bytes,"
		},
		{
			"timestamps": {
				"from": "00:11:10,960",
				"to": "00:11:20,960"
			},
			"offsets": {
				"from": 670960,
				"to": 680960
			},
			"text": " and it can integrity protect as well as identify data of arbitrary size and complexity and structure,"
		},
		{
			"timestamps": {
				"from": "00:11:20,960",
				"to": "00:11:27,960"
			},
			"offsets": {
				"from": 680960,
				"to": 687960
			},
			"text": " meaning that no matter how much data you're updating,"
		},
		{
			"timestamps": {
				"from": "00:11:27,960",
				"to": "00:11:32,960"
			},
			"offsets": {
				"from": 687960,
				"to": 692960
			},
			"text": " you're still on the blockchain, you only need to change 32 bytes,"
		},
		{
			"timestamps": {
				"from": "00:11:32,960",
				"to": "00:11:37,960"
			},
			"offsets": {
				"from": 692960,
				"to": 697960
			},
			"text": " which is obviously a lot cheaper than changing megabytes."
		},
		{
			"timestamps": {
				"from": "00:11:37,960",
				"to": "00:11:44,960"
			},
			"offsets": {
				"from": 697960,
				"to": 704960
			},
			"text": " The transaction bottleneck can also be overcome."
		},
		{
			"timestamps": {
				"from": "00:11:44,960",
				"to": "00:11:54,960"
			},
			"offsets": {
				"from": 704960,
				"to": 714960
			},
			"text": " So for those of you who don't know, ENS has resolver contracts."
		},
		{
			"timestamps": {
				"from": "00:11:54,960",
				"to": "00:12:04,960"
			},
			"offsets": {
				"from": 714960,
				"to": 724960
			},
			"text": " So each time you ask ENS what the particular address corresponding to a name is,"
		},
		{
			"timestamps": {
				"from": "00:12:04,960",
				"to": "00:12:11,960"
			},
			"offsets": {
				"from": 724960,
				"to": 731960
			},
			"text": " you're going to have a contract answer you, and those contracts can be more complicated"
		},
		{
			"timestamps": {
				"from": "00:12:11,960",
				"to": "00:12:14,960"
			},
			"offsets": {
				"from": 731960,
				"to": 734960
			},
			"text": " than a simple storage of 32 bytes."
		},
		{
			"timestamps": {
				"from": "00:12:14,960",
				"to": "00:12:19,960"
			},
			"offsets": {
				"from": 734960,
				"to": 739960
			},
			"text": " In particular, you can implement radon-style updates on ENS,"
		},
		{
			"timestamps": {
				"from": "00:12:19,960",
				"to": "00:12:25,960"
			},
			"offsets": {
				"from": 739960,
				"to": 745960
			},
			"text": " meaning that you can send those updates to all the interested nodes,"
		},
		{
			"timestamps": {
				"from": "00:12:25,960",
				"to": "00:12:32,960"
			},
			"offsets": {
				"from": 745960,
				"to": 752960
			},
			"text": " but you don't have to commit all of them immediately to the blockchain."
		},
		{
			"timestamps": {
				"from": "00:12:32,960",
				"to": "00:12:39,960"
			},
			"offsets": {
				"from": 752960,
				"to": 759960
			},
			"text": " And yet all the nodes that are interested are going to know that the content has changed,"
		},
		{
			"timestamps": {
				"from": "00:12:39,960",
				"to": "00:12:47,960"
			},
			"offsets": {
				"from": 759960,
				"to": 767960
			},
			"text": " and any of them can commit it to the blockchain in case it becomes critical"
		},
		{
			"timestamps": {
				"from": "00:12:47,960",
				"to": "00:12:50,960"
			},
			"offsets": {
				"from": 767960,
				"to": 770960
			},
			"text": " that a consensus is reached."
		},
		{
			"timestamps": {
				"from": "00:12:50,960",
				"to": "00:12:55,960"
			},
			"offsets": {
				"from": 770960,
				"to": 775960
			},
			"text": " So this way we take the burden of updates of the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:12:55,960",
				"to": "00:12:59,960"
			},
			"offsets": {
				"from": 775960,
				"to": 779960
			},
			"text": " and we can have infrequent updates to the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:12:59,960",
				"to": "00:13:07,960"
			},
			"offsets": {
				"from": 779960,
				"to": 787960
			},
			"text": " and yet have immediate and very, very frequent updates to the root hash of the data that we're using."
		},
		{
			"timestamps": {
				"from": "00:13:07,960",
				"to": "00:13:13,960"
			},
			"offsets": {
				"from": 787960,
				"to": 793960
			},
			"text": " Broadcast bottlenecks, they can also be overcome using PSS."
		},
		{
			"timestamps": {
				"from": "00:13:13,960",
				"to": "00:13:19,960"
			},
			"offsets": {
				"from": 793960,
				"to": 799960
			},
			"text": " So just as Luis had explained before me,"
		},
		{
			"timestamps": {
				"from": "00:13:19,960",
				"to": "00:13:26,960"
			},
			"offsets": {
				"from": 799960,
				"to": 806960
			},
			"text": " PSS can be used to broadcast messages to parts of the network instead of the entire network."
		},
		{
			"timestamps": {
				"from": "00:13:26,960",
				"to": "00:13:37,960"
			},
			"offsets": {
				"from": 806960,
				"to": 817960
			},
			"text": " So if you have this pops up model, then PSS will make sure that even though there is an overhead,"
		},
		{
			"timestamps": {
				"from": "00:13:37,960",
				"to": "00:13:47,960"
			},
			"offsets": {
				"from": 817960,
				"to": 827960
			},
			"text": " you won't burden the swarm network with every message broadcasted to every node."
		},
		{
			"timestamps": {
				"from": "00:13:47,960",
				"to": "00:13:53,960"
			},
			"offsets": {
				"from": 827960,
				"to": 833960
			},
			"text": " Of course, this only becomes a problem if your application scales really big."
		},
		{
			"timestamps": {
				"from": "00:13:53,960",
				"to": "00:13:58,960"
			},
			"offsets": {
				"from": 833960,
				"to": 838960
			},
			"text": " So for many applications, broadcasting is perfectly adequate,"
		},
		{
			"timestamps": {
				"from": "00:13:58,960",
				"to": "00:14:02,960"
			},
			"offsets": {
				"from": 838960,
				"to": 842960
			},
			"text": " and if you're more interested in darkness, you can still use Whisper,"
		},
		{
			"timestamps": {
				"from": "00:14:02,960",
				"to": "00:14:11,960"
			},
			"offsets": {
				"from": 842960,
				"to": 851960
			},
			"text": " but then you will have to keep in mind that you have a network bottleneck."
		},
		{
			"timestamps": {
				"from": "00:14:11,960",
				"to": "00:14:21,960"
			},
			"offsets": {
				"from": 851960,
				"to": 861960
			},
			"text": " So in the next part, I'm going to discuss challenges of a trade-off between responsiveness and consistency."
		},
		{
			"timestamps": {
				"from": "00:14:21,960",
				"to": "00:14:26,960"
			},
			"offsets": {
				"from": 861960,
				"to": 866960
			},
			"text": " It's a trade-off because the faster things happen,"
		},
		{
			"timestamps": {
				"from": "00:14:26,960",
				"to": "00:14:31,960"
			},
			"offsets": {
				"from": 866960,
				"to": 871960
			},
			"text": " the more difficult it becomes to agree in a timely fashion."
		},
		{
			"timestamps": {
				"from": "00:14:31,960",
				"to": "00:14:41,960"
			},
			"offsets": {
				"from": 871960,
				"to": 881960
			},
			"text": " So the consistency is only guaranteed on the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:14:41,960",
				"to": "00:14:46,960"
			},
			"offsets": {
				"from": 881960,
				"to": 886960
			},
			"text": " but this consistency is an eventual consistency, which is rather slow."
		},
		{
			"timestamps": {
				"from": "00:14:46,960",
				"to": "00:14:53,960"
			},
			"offsets": {
				"from": 886960,
				"to": 893960
			},
			"text": " So you can see a back-of-the-envelope calculation that tells you that you will reach consensus"
		},
		{
			"timestamps": {
				"from": "00:14:53,960",
				"to": "00:15:03,960"
			},
			"offsets": {
				"from": 893960,
				"to": 903960
			},
			"text": " in a time that can hardly be called responsive, and you don't want to wait that much time for every update"
		},
		{
			"timestamps": {
				"from": "00:15:03,960",
				"to": "00:15:08,960"
			},
			"offsets": {
				"from": 903960,
				"to": 908960
			},
			"text": " to be visible to all the users of your application."
		},
		{
			"timestamps": {
				"from": "00:15:08,960",
				"to": "00:15:21,960"
			},
			"offsets": {
				"from": 908960,
				"to": 921960
			},
			"text": " So essentially, you need to broadcast the updates to all the interested parties,"
		},
		{
			"timestamps": {
				"from": "00:15:21,960",
				"to": "00:15:34,960"
			},
			"offsets": {
				"from": 921960,
				"to": 934960
			},
			"text": " and then you only need to commit to the blockchain once it becomes important to guarantee the consistency"
		},
		{
			"timestamps": {
				"from": "00:15:34,960",
				"to": "00:15:36,960"
			},
			"offsets": {
				"from": 934960,
				"to": 936960
			},
			"text": " over a longer period of time."
		},
		{
			"timestamps": {
				"from": "00:15:36,960",
				"to": "00:15:40,960"
			},
			"offsets": {
				"from": 936960,
				"to": 940960
			},
			"text": " So here I would like to give you a few examples."
		},
		{
			"timestamps": {
				"from": "00:15:40,960",
				"to": "00:15:46,960"
			},
			"offsets": {
				"from": 940960,
				"to": 946960
			},
			"text": " So one is an online discussion where there's some kind of content,"
		},
		{
			"timestamps": {
				"from": "00:15:46,960",
				"to": "00:15:54,960"
			},
			"offsets": {
				"from": 946960,
				"to": 954960
			},
			"text": " such as a blog post, a blog post, or a picture that several users are viewing and commenting,"
		},
		{
			"timestamps": {
				"from": "00:15:54,960",
				"to": "00:16:03,960"
			},
			"offsets": {
				"from": 954960,
				"to": 963960
			},
			"text": " and the other is a massively multiplayer game in which different players are interacting with each other."
		},
		{
			"timestamps": {
				"from": "00:16:03,960",
				"to": "00:16:09,960"
			},
			"offsets": {
				"from": 963960,
				"to": 969960
			},
			"text": " Obviously, submitting everything to the blockchain is hopeless in both cases."
		},
		{
			"timestamps": {
				"from": "00:16:09,960",
				"to": "00:16:21,960"
			},
			"offsets": {
				"from": 969960,
				"to": 981960
			},
			"text": " So in both cases, you can notice that it is relatively easy to scope the circle of interested parties"
		},
		{
			"timestamps": {
				"from": "00:16:21,960",
				"to": "00:16:24,960"
			},
			"offsets": {
				"from": 981960,
				"to": 984960
			},
			"text": " of a particular update."
		},
		{
			"timestamps": {
				"from": "00:16:24,960",
				"to": "00:16:36,960"
			},
			"offsets": {
				"from": 984960,
				"to": 996960
			},
			"text": " So in case of an online discussion, it is perfectly enough to make updates fast to those who are actually"
		},
		{
			"timestamps": {
				"from": "00:16:36,960",
				"to": "00:16:43,960"
			},
			"offsets": {
				"from": 996960,
				"to": 1003960
			},
			"text": " viewing that discussion, who are participating in it, and it is acceptable that others who are not browsing"
		},
		{
			"timestamps": {
				"from": "00:16:43,960",
				"to": "00:16:50,960"
			},
			"offsets": {
				"from": 1003960,
				"to": 1010960
			},
			"text": " that particular discussion right now will only have the updates much later,"
		},
		{
			"timestamps": {
				"from": "00:16:50,960",
				"to": "00:16:54,960"
			},
			"offsets": {
				"from": 1010960,
				"to": 1014960
			},
			"text": " and they are only interested in the final state of the discussion."
		},
		{
			"timestamps": {
				"from": "00:16:54,960",
				"to": "00:16:58,960"
			},
			"offsets": {
				"from": 1014960,
				"to": 1018960
			},
			"text": " They don't need to receive every update at all times."
		},
		{
			"timestamps": {
				"from": "00:16:58,960",
				"to": "00:17:03,960"
			},
			"offsets": {
				"from": 1018960,
				"to": 1023960
			},
			"text": " And similarly, in online games, there are typically locations,"
		},
		{
			"timestamps": {
				"from": "00:17:03,960",
				"to": "00:17:11,960"
			},
			"offsets": {
				"from": 1023960,
				"to": 1031960
			},
			"text": " and there are some players in that location, and you only need to send quick updates"
		},
		{
			"timestamps": {
				"from": "00:17:11,960",
				"to": "00:17:15,960"
			},
			"offsets": {
				"from": 1031960,
				"to": 1035960
			},
			"text": " to those players whose characters are in that particular location."
		},
		{
			"timestamps": {
				"from": "00:17:15,960",
				"to": "00:17:20,960"
			},
			"offsets": {
				"from": 1035960,
				"to": 1040960
			},
			"text": " You don't need to send updates to all the players."
		},
		{
			"timestamps": {
				"from": "00:17:20,960",
				"to": "00:17:27,960"
			},
			"offsets": {
				"from": 1040960,
				"to": 1047960
			},
			"text": " And the update structure is also more complicated than simply a hash,"
		},
		{
			"timestamps": {
				"from": "00:17:27,960",
				"to": "00:17:34,960"
			},
			"offsets": {
				"from": 1047960,
				"to": 1054960
			},
			"text": " because if all you broadcast is the new root hash of the swarm content,"
		},
		{
			"timestamps": {
				"from": "00:17:34,960",
				"to": "00:17:43,960"
			},
			"offsets": {
				"from": 1054960,
				"to": 1063960
			},
			"text": " then you are running into a responsiveness problem that it takes time for swarm content to sync."
		},
		{
			"timestamps": {
				"from": "00:17:43,960",
				"to": "00:17:50,960"
			},
			"offsets": {
				"from": 1063960,
				"to": 1070960
			},
			"text": " Even if we will improve, and we will improve, the performance of the syncing protocol,"
		},
		{
			"timestamps": {
				"from": "00:17:50,960",
				"to": "00:18:00,960"
			},
			"offsets": {
				"from": 1070960,
				"to": 1080960
			},
			"text": " it will never be as fast as a direct message passing simply because a much larger amount of data needs to be transported,"
		},
		{
			"timestamps": {
				"from": "00:18:00,960",
				"to": "00:18:03,960"
			},
			"offsets": {
				"from": 1080960,
				"to": 1083960
			},
			"text": " and it also needs to be stored along the way."
		},
		{
			"timestamps": {
				"from": "00:18:03,960",
				"to": "00:18:16,960"
			},
			"offsets": {
				"from": 1083960,
				"to": 1096960
			},
			"text": " So if you only send the root hash, then the response time is going to be much longer than the message passing time,"
		},
		{
			"timestamps": {
				"from": "00:18:16,960",
				"to": "00:18:25,960"
			},
			"offsets": {
				"from": 1096960,
				"to": 1105960
			},
			"text": " because you also need to wait for the corresponding swarm content to become available for the interested parties."
		},
		{
			"timestamps": {
				"from": "00:18:25,960",
				"to": "00:18:36,960"
			},
			"offsets": {
				"from": 1105960,
				"to": 1116960
			},
			"text": " And instead, what you can do is you can also include in the updates the actual information that was changed."
		},
		{
			"timestamps": {
				"from": "00:18:36,960",
				"to": "00:18:43,960"
			},
			"offsets": {
				"from": 1116960,
				"to": 1123960
			},
			"text": " So for example, if a comment was added, then in addition to the new root hash,"
		},
		{
			"timestamps": {
				"from": "00:18:43,960",
				"to": "00:18:50,960"
			},
			"offsets": {
				"from": 1123960,
				"to": 1130960
			},
			"text": " you also send around in PSS messages, the actual comment that was added,"
		},
		{
			"timestamps": {
				"from": "00:18:50,960",
				"to": "00:18:58,960"
			},
			"offsets": {
				"from": 1130960,
				"to": 1138960
			},
			"text": " so that the nodes that are monitoring the discussion will be able to immediately update their local model."
		},
		{
			"timestamps": {
				"from": "00:18:58,960",
				"to": "00:19:05,960"
			},
			"offsets": {
				"from": 1138960,
				"to": 1145960
			},
			"text": " And yet, they can verify whenever the swarm update happens,"
		},
		{
			"timestamps": {
				"from": "00:19:05,960",
				"to": "00:19:11,960"
			},
			"offsets": {
				"from": 1145960,
				"to": 1151960
			},
			"text": " and especially when the blockchain update happens, they can verify that they haven't been liked to."
		},
		{
			"timestamps": {
				"from": "00:19:11,960",
				"to": "00:19:18,960"
			},
			"offsets": {
				"from": 1151960,
				"to": 1158960
			},
			"text": " So this does not present a security problem, it just speeds things up."
		},
		{
			"timestamps": {
				"from": "00:19:18,960",
				"to": "00:19:28,960"
			},
			"offsets": {
				"from": 1158960,
				"to": 1168960
			},
			"text": " And also, I would encourage you, instead of creating very complicated update rules,"
		},
		{
			"timestamps": {
				"from": "00:19:28,960",
				"to": "00:19:36,960"
			},
			"offsets": {
				"from": 1168960,
				"to": 1176960
			},
			"text": " and then you need various ways to actually verify that the updates were legal,"
		},
		{
			"timestamps": {
				"from": "00:19:36,960",
				"to": "00:19:40,960"
			},
			"offsets": {
				"from": 1176960,
				"to": 1180960
			},
			"text": " or so they were the kind that is allowed."
		},
		{
			"timestamps": {
				"from": "00:19:40,960",
				"to": "00:19:51,960"
			},
			"offsets": {
				"from": 1180960,
				"to": 1191960
			},
			"text": " Instead, what I would suggest is to do aggregation on the front-hand side."
		},
		{
			"timestamps": {
				"from": "00:19:51,960",
				"to": "00:19:55,960"
			},
			"offsets": {
				"from": 1191960,
				"to": 1195960
			},
			"text": " So for example, if we're looking at a online discussion,"
		},
		{
			"timestamps": {
				"from": "00:19:55,960",
				"to": "00:20:05,960"
			},
			"offsets": {
				"from": 1195960,
				"to": 1205960
			},
			"text": " then every participant would update the root hash of all the comments that they have sent to different parts"
		},
		{
			"timestamps": {
				"from": "00:20:05,960",
				"to": "00:20:09,960"
			},
			"offsets": {
				"from": 1205960,
				"to": 1209960
			},
			"text": " of the service."
		},
		{
			"timestamps": {
				"from": "00:20:09,960",
				"to": "00:20:16,960"
			},
			"offsets": {
				"from": 1209960,
				"to": 1216960
			},
			"text": " And whenever a participant looks at a particular discussion,"
		},
		{
			"timestamps": {
				"from": "00:20:16,960",
				"to": "00:20:22,960"
			},
			"offsets": {
				"from": 1216960,
				"to": 1222960
			},
			"text": " they should gather the addresses of the participants of that discussion on ENS,"
		},
		{
			"timestamps": {
				"from": "00:20:22,960",
				"to": "00:20:29,960"
			},
			"offsets": {
				"from": 1222960,
				"to": 1229960
			},
			"text": " and then monitor the updates of those participants and independently of each other,"
		},
		{
			"timestamps": {
				"from": "00:20:29,960",
				"to": "00:20:35,960"
			},
			"offsets": {
				"from": 1229960,
				"to": 1235960
			},
			"text": " and do the aggregation into a discussion themselves on the client side."
		},
		{
			"timestamps": {
				"from": "00:20:35,960",
				"to": "00:20:47,960"
			},
			"offsets": {
				"from": 1235960,
				"to": 1247960
			},
			"text": " So that's a much simpler and much more reliable way of dealing with concurrent access."
		},
		{
			"timestamps": {
				"from": "00:20:47,960",
				"to": "00:20:55,960"
			},
			"offsets": {
				"from": 1247960,
				"to": 1255960
			},
			"text": " In the next part, I'm going to briefly address issues of reliability and availability."
		},
		{
			"timestamps": {
				"from": "00:20:55,960",
				"to": "00:21:09,960"
			},
			"offsets": {
				"from": 1255960,
				"to": 1269960
			},
			"text": " So here I would like to go back to the things that I said about distributed applications."
		},
		{
			"timestamps": {
				"from": "00:21:09,960",
				"to": "00:21:15,960"
			},
			"offsets": {
				"from": 1269960,
				"to": 1275960
			},
			"text": " Whenever possible, you should not try to build your own infrastructure."
		},
		{
			"timestamps": {
				"from": "00:21:15,960",
				"to": "00:21:23,960"
			},
			"offsets": {
				"from": 1275960,
				"to": 1283960
			},
			"text": " Try to rely on generic infrastructure, because that way it becomes somebody else's problem."
		},
		{
			"timestamps": {
				"from": "00:21:23,960",
				"to": "00:21:30,960"
			},
			"offsets": {
				"from": 1283960,
				"to": 1290960
			},
			"text": " So in order for a distributed system to work well, it needs to have a sufficient number of nodes."
		},
		{
			"timestamps": {
				"from": "00:21:30,960",
				"to": "00:21:34,960"
			},
			"offsets": {
				"from": 1290960,
				"to": 1294960
			},
			"text": " Those nodes need to have sufficient incentives."
		},
		{
			"timestamps": {
				"from": "00:21:34,960",
				"to": "00:21:39,960"
			},
			"offsets": {
				"from": 1294960,
				"to": 1299960
			},
			"text": " They need to have adequate resources each."
		},
		{
			"timestamps": {
				"from": "00:21:39,960",
				"to": "00:21:42,960"
			},
			"offsets": {
				"from": 1299960,
				"to": 1302960
			},
			"text": " And all these things, they are difficult."
		},
		{
			"timestamps": {
				"from": "00:21:42,960",
				"to": "00:21:52,960"
			},
			"offsets": {
				"from": 1302960,
				"to": 1312960
			},
			"text": " So for example, if you only use Swarm as a generic information storing framework,"
		},
		{
			"timestamps": {
				"from": "00:21:52,960",
				"to": "00:21:59,960"
			},
			"offsets": {
				"from": 1312960,
				"to": 1319960
			},
			"text": " then making sure that Swarm content will be available is our problem, as infrastructure developers."
		},
		{
			"timestamps": {
				"from": "00:21:59,960",
				"to": "00:22:04,960"
			},
			"offsets": {
				"from": 1319960,
				"to": 1324960
			},
			"text": " It's not your problem as an application developer."
		},
		{
			"timestamps": {
				"from": "00:22:04,960",
				"to": "00:22:13,960"
			},
			"offsets": {
				"from": 1324960,
				"to": 1333960
			},
			"text": " And in general, so there's a reliability kind of ranking between these services."
		},
		{
			"timestamps": {
				"from": "00:22:13,960",
				"to": "00:22:20,960"
			},
			"offsets": {
				"from": 1333960,
				"to": 1340960
			},
			"text": " So ETH is the most reliable, light client protocol is less reliable."
		},
		{
			"timestamps": {
				"from": "00:22:20,960",
				"to": "00:22:31,960"
			},
			"offsets": {
				"from": 1340960,
				"to": 1351960
			},
			"text": " BZZ is even less reliable, and PSS is the least reliable of these generic services,"
		},
		{
			"timestamps": {
				"from": "00:22:31,960",
				"to": "00:22:38,960"
			},
			"offsets": {
				"from": 1351960,
				"to": 1358960
			},
			"text": " simply because of the popularity of that particular service on the Ethereum network."
		},
		{
			"timestamps": {
				"from": "00:22:38,960",
				"to": "00:22:50,960"
			},
			"offsets": {
				"from": 1358960,
				"to": 1370960
			},
			"text": " And if you do something yourself, it will be way, way, way behind all these on the reliability scale."
		},
		{
			"timestamps": {
				"from": "00:22:50,960",
				"to": "00:22:58,960"
			},
			"offsets": {
				"from": 1370960,
				"to": 1378960
			},
			"text": " So also, you should keep in mind that the only thing that is certain is the blockchain."
		},
		{
			"timestamps": {
				"from": "00:22:58,960",
				"to": "00:23:00,960"
			},
			"offsets": {
				"from": 1378960,
				"to": 1380960
			},
			"text": " Everything else is ephemeral."
		},
		{
			"timestamps": {
				"from": "00:23:00,960",
				"to": "00:23:07,960"
			},
			"offsets": {
				"from": 1380960,
				"to": 1387960
			},
			"text": " So if there's some important state update, eventually you have to make sure that it reaches the blockchain."
		},
		{
			"timestamps": {
				"from": "00:23:07,960",
				"to": "00:23:15,960"
			},
			"offsets": {
				"from": 1387960,
				"to": 1395960
			},
			"text": " And finally, you should be paying attention to incentives."
		},
		{
			"timestamps": {
				"from": "00:23:15,960",
				"to": "00:23:26,960"
			},
			"offsets": {
				"from": 1395960,
				"to": 1406960
			},
			"text": " So in case if you want to enforce compliant behavior, then the two tricks that can make things more scalable"
		},
		{
			"timestamps": {
				"from": "00:23:26,960",
				"to": "00:23:39,960"
			},
			"offsets": {
				"from": 1406960,
				"to": 1419960
			},
			"text": " is instead of using preemptive measures, so writing complicated contract code that can only drive the application mechanics"
		},
		{
			"timestamps": {
				"from": "00:23:39,960",
				"to": "00:23:47,960"
			},
			"offsets": {
				"from": 1419960,
				"to": 1427960
			},
			"text": " as the smart contract executes at block time, instead you can use reactive security that everybody updates"
		},
		{
			"timestamps": {
				"from": "00:23:47,960",
				"to": "00:23:51,960"
			},
			"offsets": {
				"from": 1427960,
				"to": 1431960
			},
			"text": " the way they can locally."
		},
		{
			"timestamps": {
				"from": "00:23:51,960",
				"to": "00:23:59,960"
			},
			"offsets": {
				"from": 1431960,
				"to": 1439960
			},
			"text": " However, if there's some dispute, then you can turn to the blockchain and figure out who's right and who's wrong."
		},
		{
			"timestamps": {
				"from": "00:23:59,960",
				"to": "00:24:06,960"
			},
			"offsets": {
				"from": 1439960,
				"to": 1446960
			},
			"text": " And this way, if everything happens correctly, you rarely touch the blockchain."
		},
		{
			"timestamps": {
				"from": "00:24:06,960",
				"to": "00:24:08,960"
			},
			"offsets": {
				"from": 1446960,
				"to": 1448960
			},
			"text": " So that helps you scale."
		},
		{
			"timestamps": {
				"from": "00:24:08,960",
				"to": "00:24:15,960"
			},
			"offsets": {
				"from": 1448960,
				"to": 1455960
			},
			"text": " So instead of using proactive security measures, you use reactive security."
		},
		{
			"timestamps": {
				"from": "00:24:15,960",
				"to": "00:24:23,960"
			},
			"offsets": {
				"from": 1455960,
				"to": 1463960
			},
			"text": " And you only bother the blockchain in case of disputes."
		},
		{
			"timestamps": {
				"from": "00:24:23,960",
				"to": "00:24:37,960"
			},
			"offsets": {
				"from": 1463960,
				"to": 1477960
			},
			"text": " And the final part of my talk, I would like to introduce some ways of maintaining and improving and developing"
		},
		{
			"timestamps": {
				"from": "00:24:37,960",
				"to": "00:24:42,960"
			},
			"offsets": {
				"from": 1477960,
				"to": 1482960
			},
			"text": " and that did feature to a distributed application."
		},
		{
			"timestamps": {
				"from": "00:24:42,960",
				"to": "00:24:51,960"
			},
			"offsets": {
				"from": 1482960,
				"to": 1491960
			},
			"text": " It is very different from the client server model, because in a client server model you can do everything on the server"
		},
		{
			"timestamps": {
				"from": "00:24:51,960",
				"to": "00:25:02,960"
			},
			"offsets": {
				"from": 1491960,
				"to": 1502960
			},
			"text": " and you don't have to consider the fact that your application is not entirely under your control."
		},
		{
			"timestamps": {
				"from": "00:25:02,960",
				"to": "00:25:13,960"
			},
			"offsets": {
				"from": 1502960,
				"to": 1513960
			},
			"text": " So when you're rolling out a new version, obviously you need to update ENS to point to the root hash of the new version,"
		},
		{
			"timestamps": {
				"from": "00:25:13,960",
				"to": "00:25:22,960"
			},
			"offsets": {
				"from": 1513960,
				"to": 1522960
			},
			"text": " but also you need somehow to notify all the active users of your application that things have changed,"
		},
		{
			"timestamps": {
				"from": "00:25:22,960",
				"to": "00:25:31,960"
			},
			"offsets": {
				"from": 1522960,
				"to": 1531960
			},
			"text": " because otherwise they just keep continuing using the old version, and it might even interfere with the workings of the new version."
		},
		{
			"timestamps": {
				"from": "00:25:31,960",
				"to": "00:25:37,960"
			},
			"offsets": {
				"from": 1531960,
				"to": 1537960
			},
			"text": " So in this way, it is very different from client server application."
		},
		{
			"timestamps": {
				"from": "00:25:37,960",
				"to": "00:25:45,960"
			},
			"offsets": {
				"from": 1537960,
				"to": 1545960
			},
			"text": " Also, with DAPs, we have the same thing as what we have with blockchains."
		},
		{
			"timestamps": {
				"from": "00:25:45,960",
				"to": "00:25:46,960"
			},
			"offsets": {
				"from": 1545960,
				"to": 1546960
			},
			"text": " We can have forks."
		},
		{
			"timestamps": {
				"from": "00:25:46,960",
				"to": "00:25:52,960"
			},
			"offsets": {
				"from": 1546960,
				"to": 1552960
			},
			"text": " It's entirely feasible that somebody likes a particular version of our DAP,"
		},
		{
			"timestamps": {
				"from": "00:25:52,960",
				"to": "00:26:00,960"
			},
			"offsets": {
				"from": 1552960,
				"to": 1560960
			},
			"text": " and they register it under their own ENS domain, and people keep using that."
		},
		{
			"timestamps": {
				"from": "00:26:00,960",
				"to": "00:26:09,960"
			},
			"offsets": {
				"from": 1560960,
				"to": 1569960
			},
			"text": " So whenever you introduce a change that the community disagrees with, or at least a large part of the community disagrees with, you will have forks."
		},
		{
			"timestamps": {
				"from": "00:26:09,960",
				"to": "00:26:12,960"
			},
			"offsets": {
				"from": 1569960,
				"to": 1572960
			},
			"text": " I think I'm running out of time."
		},
		{
			"timestamps": {
				"from": "00:26:12,960",
				"to": "00:26:20,960"
			},
			"offsets": {
				"from": 1572960,
				"to": 1580960
			},
			"text": " So the last thing that I wanted to mention is analytics, which is much more difficult than in a centralized environment,"
		},
		{
			"timestamps": {
				"from": "00:26:20,960",
				"to": "00:26:26,960"
			},
			"offsets": {
				"from": 1580960,
				"to": 1586960
			},
			"text": " and it's a DAP in itself that will be eventually developed, but unfortunately I run out of time,"
		},
		{
			"timestamps": {
				"from": "00:26:26,960",
				"to": "00:26:32,960"
			},
			"offsets": {
				"from": 1586960,
				"to": 1592960
			},
			"text": " and if you want to talk about analytics, please see me in Saturday at the breakout session."
		},
		{
			"timestamps": {
				"from": "00:26:32,960",
				"to": "00:26:34,960"
			},
			"offsets": {
				"from": 1592960,
				"to": 1594960
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:26:34,960",
				"to": "00:26:38,960"
			},
			"offsets": {
				"from": 1594960,
				"to": 1598960
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "00:26:38,960",
				"to": "00:26:46,960"
			},
			"offsets": {
				"from": 1598960,
				"to": 1606960
			},
			"text": " [Music]"
		}
	]
}
