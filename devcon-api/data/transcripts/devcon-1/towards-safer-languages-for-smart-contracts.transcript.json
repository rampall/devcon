{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:03,480"
			},
			"offsets": {
				"from": 0,
				"to": 3480
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:03,480",
				"to": "00:00:18,360"
			},
			"offsets": {
				"from": 3480,
				"to": 18360
			},
			"text": " Hello, everyone."
		},
		{
			"timestamps": {
				"from": "00:00:18,360",
				"to": "00:00:19,400"
			},
			"offsets": {
				"from": 18360,
				"to": 19400
			},
			"text": " My name is Robert."
		},
		{
			"timestamps": {
				"from": "00:00:19,400",
				"to": "00:00:20,520"
			},
			"offsets": {
				"from": 19400,
				"to": 20520
			},
			"text": " This is Jack."
		},
		{
			"timestamps": {
				"from": "00:00:20,520",
				"to": "00:00:23,520"
			},
			"offsets": {
				"from": 20520,
				"to": 23520
			},
			"text": " And we're currently working on our master's thesis"
		},
		{
			"timestamps": {
				"from": "00:00:23,520",
				"to": "00:00:24,960"
			},
			"offsets": {
				"from": 23520,
				"to": 24960
			},
			"text": " in computer science."
		},
		{
			"timestamps": {
				"from": "00:00:24,960",
				"to": "00:00:28,520"
			},
			"offsets": {
				"from": 24960,
				"to": 28520
			},
			"text": " And we're working on a new programming language"
		},
		{
			"timestamps": {
				"from": "00:00:28,520",
				"to": "00:00:30,160"
			},
			"offsets": {
				"from": 28520,
				"to": 30160
			},
			"text": " for the EVM."
		},
		{
			"timestamps": {
				"from": "00:00:30,160",
				"to": "00:00:32,760"
			},
			"offsets": {
				"from": 30160,
				"to": 32760
			},
			"text": " So we're here to talk about how smart contracts can"
		},
		{
			"timestamps": {
				"from": "00:00:32,760",
				"to": "00:00:35,960"
			},
			"offsets": {
				"from": 32760,
				"to": 35960
			},
			"text": " be a perfect fit for a dependently typed functional language"
		},
		{
			"timestamps": {
				"from": "00:00:35,960",
				"to": "00:00:38,520"
			},
			"offsets": {
				"from": 35960,
				"to": 38520
			},
			"text": " and why we want to do this."
		},
		{
			"timestamps": {
				"from": "00:00:38,520",
				"to": "00:00:42,560"
			},
			"offsets": {
				"from": 38520,
				"to": 42560
			},
			"text": " We will also have a small example of how an expressive type"
		},
		{
			"timestamps": {
				"from": "00:00:42,560",
				"to": "00:00:45,480"
			},
			"offsets": {
				"from": 42560,
				"to": 45480
			},
			"text": " system can help in contract development."
		},
		{
			"timestamps": {
				"from": "00:00:45,480",
				"to": "00:00:49,000"
			},
			"offsets": {
				"from": 45480,
				"to": 49000
			},
			"text": " So when you deploy a smart contract to production,"
		},
		{
			"timestamps": {
				"from": "00:00:49,000",
				"to": "00:00:52,160"
			},
			"offsets": {
				"from": 49000,
				"to": 52160
			},
			"text": " you want to be really sure that the EV behaves precisely"
		},
		{
			"timestamps": {
				"from": "00:00:52,160",
				"to": "00:00:53,880"
			},
			"offsets": {
				"from": 52160,
				"to": 53880
			},
			"text": " in TELITU."
		},
		{
			"timestamps": {
				"from": "00:00:53,880",
				"to": "00:00:57,360"
			},
			"offsets": {
				"from": 53880,
				"to": 57360
			},
			"text": " So the more the complater can catch for you, the better."
		},
		{
			"timestamps": {
				"from": "00:00:57,360",
				"to": "00:01:02,360"
			},
			"offsets": {
				"from": 57360,
				"to": 62360
			},
			"text": " So we also want to give developers high level"
		},
		{
			"timestamps": {
				"from": "00:01:02,360",
				"to": "00:01:07,000"
			},
			"offsets": {
				"from": 62360,
				"to": 67000
			},
			"text": " abstraction of standard behavior and common patterns,"
		},
		{
			"timestamps": {
				"from": "00:01:07,000",
				"to": "00:01:10,360"
			},
			"offsets": {
				"from": 67000,
				"to": 70360
			},
			"text": " stuff like high level cryptography and boilerplate"
		},
		{
			"timestamps": {
				"from": "00:01:10,360",
				"to": "00:01:13,000"
			},
			"offsets": {
				"from": 70360,
				"to": 73000
			},
			"text": " for errors and cleanup."
		},
		{
			"timestamps": {
				"from": "00:01:13,000",
				"to": "00:01:16,360"
			},
			"offsets": {
				"from": 73000,
				"to": 76360
			},
			"text": " And I hope that after hearing Greg this morning,"
		},
		{
			"timestamps": {
				"from": "00:01:16,360",
				"to": "00:01:17,840"
			},
			"offsets": {
				"from": 76360,
				"to": 77840
			},
			"text": " you can appreciate that a language that"
		},
		{
			"timestamps": {
				"from": "00:01:17,840",
				"to": "00:01:21,840"
			},
			"offsets": {
				"from": 77840,
				"to": 81840
			},
			"text": " allows for compositionality of combinators and functions"
		},
		{
			"timestamps": {
				"from": "00:01:21,840",
				"to": "00:01:23,680"
			},
			"offsets": {
				"from": 81840,
				"to": 83680
			},
			"text": " can be really powerful."
		},
		{
			"timestamps": {
				"from": "00:01:23,680",
				"to": "00:01:26,040"
			},
			"offsets": {
				"from": 83680,
				"to": 86040
			},
			"text": " LLL is functional, but it's way too low level"
		},
		{
			"timestamps": {
				"from": "00:01:26,040",
				"to": "00:01:28,440"
			},
			"offsets": {
				"from": 86040,
				"to": 88440
			},
			"text": " for a lot of purposes."
		},
		{
			"timestamps": {
				"from": "00:01:28,440",
				"to": "00:01:32,160"
			},
			"offsets": {
				"from": 88440,
				"to": 92160
			},
			"text": " So without further ado, Jack will now present two types"
		},
		{
			"timestamps": {
				"from": "00:01:32,160",
				"to": "00:01:34,480"
			},
			"offsets": {
				"from": 92160,
				"to": 94480
			},
			"text": " of errors that programmers usually"
		},
		{
			"timestamps": {
				"from": "00:01:34,480",
				"to": "00:01:36,920"
			},
			"offsets": {
				"from": 94480,
				"to": 96920
			},
			"text": " make when they start developing smart contracts"
		},
		{
			"timestamps": {
				"from": "00:01:36,920",
				"to": "00:01:40,720"
			},
			"offsets": {
				"from": 96920,
				"to": 100720
			},
			"text": " and how we can catch them at compile time."
		},
		{
			"timestamps": {
				"from": "00:01:40,720",
				"to": "00:01:41,880"
			},
			"offsets": {
				"from": 100720,
				"to": 101880
			},
			"text": " Right."
		},
		{
			"timestamps": {
				"from": "00:01:41,880",
				"to": "00:01:46,800"
			},
			"offsets": {
				"from": 101880,
				"to": 106800
			},
			"text": " So we look at a simple example game of rock paper"
		},
		{
			"timestamps": {
				"from": "00:01:46,800",
				"to": "00:01:49,640"
			},
			"offsets": {
				"from": 106800,
				"to": 109640
			},
			"text": " scissors that's paid for money."
		},
		{
			"timestamps": {
				"from": "00:01:49,640",
				"to": "00:01:52,840"
			},
			"offsets": {
				"from": 109640,
				"to": 112840
			},
			"text": " Joining costs 10.0 and the price is 20"
		},
		{
			"timestamps": {
				"from": "00:01:52,840",
				"to": "00:01:55,920"
			},
			"offsets": {
				"from": 112840,
				"to": 115920
			},
			"text": " because there's two players."
		},
		{
			"timestamps": {
				"from": "00:01:55,920",
				"to": "00:01:58,880"
			},
			"offsets": {
				"from": 115920,
				"to": 118880
			},
			"text": " And I hope you know the rules, but it doesn't really"
		},
		{
			"timestamps": {
				"from": "00:01:58,880",
				"to": "00:02:00,920"
			},
			"offsets": {
				"from": 118880,
				"to": 120920
			},
			"text": " matter if you don't."
		},
		{
			"timestamps": {
				"from": "00:02:00,920",
				"to": "00:02:04,680"
			},
			"offsets": {
				"from": 120920,
				"to": 124680
			},
			"text": " And here is a small example of how"
		},
		{
			"timestamps": {
				"from": "00:02:04,680",
				"to": "00:02:09,760"
			},
			"offsets": {
				"from": 124680,
				"to": 129760
			},
			"text": " the function that lets players join the game could look."
		},
		{
			"timestamps": {
				"from": "00:02:09,760",
				"to": "00:02:13,560"
			},
			"offsets": {
				"from": 129760,
				"to": 133560
			},
			"text": " It's very straightforward."
		},
		{
			"timestamps": {
				"from": "00:02:13,560",
				"to": "00:02:17,520"
			},
			"offsets": {
				"from": 133560,
				"to": 137520
			},
			"text": " The game can only be joined if it isn't full."
		},
		{
			"timestamps": {
				"from": "00:02:17,520",
				"to": "00:02:20,000"
			},
			"offsets": {
				"from": 137520,
				"to": 140000
			},
			"text": " The player has to pay the fee."
		},
		{
			"timestamps": {
				"from": "00:02:20,000",
				"to": "00:02:23,080"
			},
			"offsets": {
				"from": 140000,
				"to": 143080
			},
			"text": " And if both of those are OK, we just"
		},
		{
			"timestamps": {
				"from": "00:02:23,080",
				"to": "00:02:25,920"
			},
			"offsets": {
				"from": 143080,
				"to": 145920
			},
			"text": " save the move and the address of the player."
		},
		{
			"timestamps": {
				"from": "00:02:25,920",
				"to": "00:02:29,440"
			},
			"offsets": {
				"from": 145920,
				"to": 149440
			},
			"text": " And yeah, the move is just represent a 0, 1, or 2"
		},
		{
			"timestamps": {
				"from": "00:02:29,440",
				"to": "00:02:32,080"
			},
			"offsets": {
				"from": 149440,
				"to": 152080
			},
			"text": " for simplicity."
		},
		{
			"timestamps": {
				"from": "00:02:32,080",
				"to": "00:02:34,640"
			},
			"offsets": {
				"from": 152080,
				"to": 154640
			},
			"text": " So for a regular programmer, this"
		},
		{
			"timestamps": {
				"from": "00:02:34,640",
				"to": "00:02:36,000"
			},
			"offsets": {
				"from": 154640,
				"to": 156000
			},
			"text": " would seem quite reasonable."
		},
		{
			"timestamps": {
				"from": "00:02:36,000",
				"to": "00:02:39,520"
			},
			"offsets": {
				"from": 156000,
				"to": 159520
			},
			"text": " But there are actually a few bugs here."
		},
		{
			"timestamps": {
				"from": "00:02:39,520",
				"to": "00:02:44,520"
			},
			"offsets": {
				"from": 159520,
				"to": 164520
			},
			"text": " So what happens if a third player attempts to join the game?"
		},
		{
			"timestamps": {
				"from": "00:02:44,520",
				"to": "00:02:49,880"
			},
			"offsets": {
				"from": 164520,
				"to": 169880
			},
			"text": " He would lose all his ether, and there's no way to retrieve it."
		},
		{
			"timestamps": {
				"from": "00:02:49,880",
				"to": "00:02:50,800"
			},
			"offsets": {
				"from": 169880,
				"to": 170800
			},
			"text": " So let's fix this."
		},
		{
			"timestamps": {
				"from": "00:02:51,440",
				"to": "00:02:58,000"
			},
			"offsets": {
				"from": 171440,
				"to": 178000
			},
			"text": " This is better, but there is one problem left."
		},
		{
			"timestamps": {
				"from": "00:02:58,000",
				"to": "00:03:00,320"
			},
			"offsets": {
				"from": 178000,
				"to": 180320
			},
			"text": " Since the blockchain is transparent,"
		},
		{
			"timestamps": {
				"from": "00:03:00,320",
				"to": "00:03:05,560"
			},
			"offsets": {
				"from": 180320,
				"to": 185560
			},
			"text": " the first player will reveal his move to the second player."
		},
		{
			"timestamps": {
				"from": "00:03:05,560",
				"to": "00:03:09,440"
			},
			"offsets": {
				"from": 185560,
				"to": 189440
			},
			"text": " We'll not solve this now, but keep it in mind for later."
		},
		{
			"timestamps": {
				"from": "00:03:09,440",
				"to": "00:03:11,640"
			},
			"offsets": {
				"from": 189440,
				"to": 191640
			},
			"text": " So just a quick recap."
		},
		{
			"timestamps": {
				"from": "00:03:11,640",
				"to": "00:03:15,520"
			},
			"offsets": {
				"from": 191640,
				"to": 195520
			},
			"text": " There's two classes of error that we're focusing on."
		},
		{
			"timestamps": {
				"from": "00:03:15,520",
				"to": "00:03:17,440"
			},
			"offsets": {
				"from": 195520,
				"to": 197440
			},
			"text": " That's very common for developers"
		},
		{
			"timestamps": {
				"from": "00:03:17,440",
				"to": "00:03:21,960"
			},
			"offsets": {
				"from": 197440,
				"to": 201960
			},
			"text": " that's getting into smart contract development."
		},
		{
			"timestamps": {
				"from": "00:03:21,960",
				"to": "00:03:25,480"
			},
			"offsets": {
				"from": 201960,
				"to": 205480
			},
			"text": " What we're trying to do is to use an expressive type system"
		},
		{
			"timestamps": {
				"from": "00:03:25,480",
				"to": "00:03:29,080"
			},
			"offsets": {
				"from": 205480,
				"to": 209080
			},
			"text": " to help identify and solve this."
		},
		{
			"timestamps": {
				"from": "00:03:29,080",
				"to": "00:03:32,920"
			},
			"offsets": {
				"from": 209080,
				"to": 212920
			},
			"text": " And to do this, we are including both etheflow"
		},
		{
			"timestamps": {
				"from": "00:03:32,920",
				"to": "00:03:35,520"
			},
			"offsets": {
				"from": 212920,
				"to": 215520
			},
			"text": " and cryptography directly in the type system."
		},
		{
			"timestamps": {
				"from": "00:03:35,520",
				"to": "00:03:41,760"
			},
			"offsets": {
				"from": 215520,
				"to": 221760
			},
			"text": " So if you want to encode etheflow in the type system,"
		},
		{
			"timestamps": {
				"from": "00:03:41,760",
				"to": "00:03:43,560"
			},
			"offsets": {
				"from": 221760,
				"to": 223560
			},
			"text": " what can we do?"
		},
		{
			"timestamps": {
				"from": "00:03:43,560",
				"to": "00:03:47,040"
			},
			"offsets": {
				"from": 223560,
				"to": 227040
			},
			"text": " Well, we can start with including the transaction value"
		},
		{
			"timestamps": {
				"from": "00:03:47,040",
				"to": "00:03:49,680"
			},
			"offsets": {
				"from": 227040,
				"to": 229680
			},
			"text": " in the type signature, like this."
		},
		{
			"timestamps": {
				"from": "00:03:49,680",
				"to": "00:03:53,400"
			},
			"offsets": {
				"from": 229680,
				"to": 233400
			},
			"text": " And as you can see, we have also put a precondition"
		},
		{
			"timestamps": {
				"from": "00:03:53,400",
				"to": "00:03:57,600"
			},
			"offsets": {
				"from": 233400,
				"to": 237600
			},
			"text": " on the value saying that this function requires at least"
		},
		{
			"timestamps": {
				"from": "00:03:57,600",
				"to": "00:04:00,880"
			},
			"offsets": {
				"from": 237600,
				"to": 240880
			},
			"text": " 10 ethers to be executed."
		},
		{
			"timestamps": {
				"from": "00:04:00,880",
				"to": "00:04:03,480"
			},
			"offsets": {
				"from": 240880,
				"to": 243480
			},
			"text": " Otherwise, the transaction is considered invalid"
		},
		{
			"timestamps": {
				"from": "00:04:03,480",
				"to": "00:04:07,720"
			},
			"offsets": {
				"from": 243480,
				"to": 247720
			},
			"text": " for our purposes, and all ether is automatically returned"
		},
		{
			"timestamps": {
				"from": "00:04:07,720",
				"to": "00:04:09,760"
			},
			"offsets": {
				"from": 247720,
				"to": 249760
			},
			"text": " to the sender."
		},
		{
			"timestamps": {
				"from": "00:04:09,760",
				"to": "00:04:16,640"
			},
			"offsets": {
				"from": 249760,
				"to": 256640
			},
			"text": " And this is certainly neat, but it doesn't solve our problems."
		},
		{
			"timestamps": {
				"from": "00:04:16,640",
				"to": "00:04:18,640"
			},
			"offsets": {
				"from": 256640,
				"to": 258640
			},
			"text": " But as you can see, we actually already"
		},
		{
			"timestamps": {
				"from": "00:04:18,640",
				"to": "00:04:23,120"
			},
			"offsets": {
				"from": 258640,
				"to": 263120
			},
			"text": " know the function's result, success,"
		},
		{
			"timestamps": {
				"from": "00:04:23,120",
				"to": "00:04:26,840"
			},
			"offsets": {
				"from": 263120,
				"to": 266840
			},
			"text": " and the transaction value."
		},
		{
			"timestamps": {
				"from": "00:04:26,840",
				"to": "00:04:29,000"
			},
			"offsets": {
				"from": 266840,
				"to": 269000
			},
			"text": " This is actually enough information for us"
		},
		{
			"timestamps": {
				"from": "00:04:29,000",
				"to": "00:04:32,320"
			},
			"offsets": {
				"from": 269000,
				"to": 272320
			},
			"text": " to specify how the function should handle it"
		},
		{
			"timestamps": {
				"from": "00:04:32,320",
				"to": "00:04:36,120"
			},
			"offsets": {
				"from": 272320,
				"to": 276120
			},
			"text": " during all the execution paths."
		},
		{
			"timestamps": {
				"from": "00:04:36,120",
				"to": "00:04:39,480"
			},
			"offsets": {
				"from": 276120,
				"to": 279480
			},
			"text": " So we just take the return value and do a conditional check"
		},
		{
			"timestamps": {
				"from": "00:04:39,480",
				"to": "00:04:39,920"
			},
			"offsets": {
				"from": 279480,
				"to": 279920
			},
			"text": " on it."
		},
		{
			"timestamps": {
				"from": "00:04:39,920",
				"to": "00:04:42,440"
			},
			"offsets": {
				"from": 279920,
				"to": 282440
			},
			"text": " That's the question mark in colon there,"
		},
		{
			"timestamps": {
				"from": "00:04:42,440",
				"to": "00:04:45,720"
			},
			"offsets": {
				"from": 282440,
				"to": 285720
			},
			"text": " as you probably recognize from imperative languages."
		},
		{
			"timestamps": {
				"from": "00:04:45,720",
				"to": "00:04:50,280"
			},
			"offsets": {
				"from": 285720,
				"to": 290280
			},
			"text": " If the player was able to join the game,"
		},
		{
			"timestamps": {
				"from": "00:04:50,280",
				"to": "00:04:55,480"
			},
			"offsets": {
				"from": 290280,
				"to": 295480
			},
			"text": " we should save, turn it there, and return the rest."
		},
		{
			"timestamps": {
				"from": "00:04:55,480",
				"to": "00:04:57,960"
			},
			"offsets": {
				"from": 295480,
				"to": 297960
			},
			"text": " And if the player wasn't able to join the game,"
		},
		{
			"timestamps": {
				"from": "00:04:57,960",
				"to": "00:05:02,440"
			},
			"offsets": {
				"from": 297960,
				"to": 302440
			},
			"text": " then we should send back everything and don't save anything."
		},
		{
			"timestamps": {
				"from": "00:05:02,440",
				"to": "00:05:04,760"
			},
			"offsets": {
				"from": 302440,
				"to": 304760
			},
			"text": " Now, this type signature actually"
		},
		{
			"timestamps": {
				"from": "00:05:04,760",
				"to": "00:05:06,840"
			},
			"offsets": {
				"from": 304760,
				"to": 306840
			},
			"text": " causes the problematic implementation"
		},
		{
			"timestamps": {
				"from": "00:05:06,840",
				"to": "00:05:11,360"
			},
			"offsets": {
				"from": 306840,
				"to": 311360
			},
			"text": " from before to be a typo that's cached at compile time."
		},
		{
			"timestamps": {
				"from": "00:05:11,360",
				"to": "00:05:14,280"
			},
			"offsets": {
				"from": 311360,
				"to": 314280
			},
			"text": " This is quite amazing because it"
		},
		{
			"timestamps": {
				"from": "00:05:14,280",
				"to": "00:05:18,840"
			},
			"offsets": {
				"from": 314280,
				"to": 318840
			},
			"text": " allows us to eliminate a large class of bugs"
		},
		{
			"timestamps": {
				"from": "00:05:18,840",
				"to": "00:05:23,320"
			},
			"offsets": {
				"from": 318840,
				"to": 323320
			},
			"text": " without doing any testing or formal verification whatsoever."
		},
		{
			"timestamps": {
				"from": "00:05:23,320",
				"to": "00:05:31,320"
			},
			"offsets": {
				"from": 323320,
				"to": 331320
			},
			"text": " This technique can actually also be used by contract developers"
		},
		{
			"timestamps": {
				"from": "00:05:31,320",
				"to": "00:05:34,240"
			},
			"offsets": {
				"from": 331320,
				"to": 334240
			},
			"text": " to specify the behaviors of their contracts."
		},
		{
			"timestamps": {
				"from": "00:05:34,240",
				"to": "00:05:37,200"
			},
			"offsets": {
				"from": 334240,
				"to": 337200
			},
			"text": " But that requires a little more work"
		},
		{
			"timestamps": {
				"from": "00:05:37,200",
				"to": "00:05:42,240"
			},
			"offsets": {
				"from": 337200,
				"to": 342240
			},
			"text": " on the part of the developers that we won't go into this."
		},
		{
			"timestamps": {
				"from": "00:05:42,240",
				"to": "00:05:46,000"
			},
			"offsets": {
				"from": 342240,
				"to": 346000
			},
			"text": " But we still have the problem that the move is disclosed"
		},
		{
			"timestamps": {
				"from": "00:05:46,000",
				"to": "00:05:48,240"
			},
			"offsets": {
				"from": 346000,
				"to": 348240
			},
			"text": " and shouldn't be."
		},
		{
			"timestamps": {
				"from": "00:05:48,240",
				"to": "00:05:51,800"
			},
			"offsets": {
				"from": 348240,
				"to": 351800
			},
			"text": " The way to solve this is to use cryptographic commitments."
		},
		{
			"timestamps": {
				"from": "00:05:51,800",
				"to": "00:05:54,840"
			},
			"offsets": {
				"from": 351800,
				"to": 354840
			},
			"text": " They basically allow you to commit to a value"
		},
		{
			"timestamps": {
				"from": "00:05:54,840",
				"to": "00:05:59,000"
			},
			"offsets": {
				"from": 354840,
				"to": 359000
			},
			"text": " and then reveal it at a later time."
		},
		{
			"timestamps": {
				"from": "00:05:59,000",
				"to": "00:06:01,760"
			},
			"offsets": {
				"from": 359000,
				"to": 361760
			},
			"text": " But developers shouldn't implement their own crypto"
		},
		{
			"timestamps": {
				"from": "00:06:01,760",
				"to": "00:06:02,600"
			},
			"offsets": {
				"from": 361760,
				"to": 362600
			},
			"text": " each and every time."
		},
		{
			"timestamps": {
				"from": "00:06:02,600",
				"to": "00:06:06,920"
			},
			"offsets": {
				"from": 362600,
				"to": 366920
			},
			"text": " It's tedious and very error-prone."
		},
		{
			"timestamps": {
				"from": "00:06:06,920",
				"to": "00:06:11,320"
			},
			"offsets": {
				"from": 366920,
				"to": 371320
			},
			"text": " So the way we solve this is by annotating"
		},
		{
			"timestamps": {
				"from": "00:06:11,320",
				"to": "00:06:15,840"
			},
			"offsets": {
				"from": 371320,
				"to": 375840
			},
			"text": " the types of secret values, as you can see there, with commit."
		},
		{
			"timestamps": {
				"from": "00:06:15,840",
				"to": "00:06:22,880"
			},
			"offsets": {
				"from": 375840,
				"to": 382880
			},
			"text": " This indicates to the compiler that this value should be treated"
		},
		{
			"timestamps": {
				"from": "00:06:22,880",
				"to": "00:06:27,080"
			},
			"offsets": {
				"from": 382880,
				"to": 387080
			},
			"text": " as a commitment and the compiler will automatically"
		},
		{
			"timestamps": {
				"from": "00:06:27,080",
				"to": "00:06:29,280"
			},
			"offsets": {
				"from": 387080,
				"to": 389280
			},
			"text": " generate a function for the sender"
		},
		{
			"timestamps": {
				"from": "00:06:29,280",
				"to": "00:06:33,280"
			},
			"offsets": {
				"from": 389280,
				"to": 393280
			},
			"text": " to reveal it at a later time."
		},
		{
			"timestamps": {
				"from": "00:06:33,280",
				"to": "00:06:36,240"
			},
			"offsets": {
				"from": 393280,
				"to": 396240
			},
			"text": " When it has been revealed, it can be accessed in code"
		},
		{
			"timestamps": {
				"from": "00:06:36,240",
				"to": "00:06:39,440"
			},
			"offsets": {
				"from": 396240,
				"to": 399440
			},
			"text": " by using the standard library open function, which"
		},
		{
			"timestamps": {
				"from": "00:06:39,440",
				"to": "00:06:44,040"
			},
			"offsets": {
				"from": 399440,
				"to": 404040
			},
			"text": " takes any commitment and returns the value."
		},
		{
			"timestamps": {
				"from": "00:06:44,040",
				"to": "00:06:49,520"
			},
			"offsets": {
				"from": 404040,
				"to": 409520
			},
			"text": " If it hadn't been revealed previous to calling open,"
		},
		{
			"timestamps": {
				"from": "00:06:49,520",
				"to": "00:06:53,200"
			},
			"offsets": {
				"from": 409520,
				"to": 413200
			},
			"text": " then open will fail, return only to the sender"
		},
		{
			"timestamps": {
				"from": "00:06:53,200",
				"to": "00:06:54,440"
			},
			"offsets": {
				"from": 413200,
				"to": 414440
			},
			"text": " and abort execution."
		},
		{
			"timestamps": {
				"from": "00:06:54,440",
				"to": "00:07:00,240"
			},
			"offsets": {
				"from": 414440,
				"to": 420240
			},
			"text": " So our final type-correct implementation"
		},
		{
			"timestamps": {
				"from": "00:07:00,240",
				"to": "00:07:01,920"
			},
			"offsets": {
				"from": 420240,
				"to": 421920
			},
			"text": " would look like this."
		},
		{
			"timestamps": {
				"from": "00:07:01,920",
				"to": "00:07:06,520"
			},
			"offsets": {
				"from": 421920,
				"to": 426520
			},
			"text": " Note that we are forced to explicitly save all"
		},
		{
			"timestamps": {
				"from": "00:07:06,520",
				"to": "00:07:09,920"
			},
			"offsets": {
				"from": 426520,
				"to": 429920
			},
			"text": " the data that we want to keep because otherwise it"
		},
		{
			"timestamps": {
				"from": "00:07:09,920",
				"to": "00:07:12,560"
			},
			"offsets": {
				"from": 429920,
				"to": 432560
			},
			"text": " wouldn't compile."
		},
		{
			"timestamps": {
				"from": "00:07:12,560",
				"to": "00:07:18,280"
			},
			"offsets": {
				"from": 432560,
				"to": 438280
			},
			"text": " And now, Robert, we'll talk about how we intend to implement this."
		},
		{
			"timestamps": {
				"from": "00:07:18,280",
				"to": "00:07:19,200"
			},
			"offsets": {
				"from": 438280,
				"to": 439200
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:07:19,200",
				"to": "00:07:23,560"
			},
			"offsets": {
				"from": 439200,
				"to": 443560
			},
			"text": " So some of you might have noticed that the syntax we have used"
		},
		{
			"timestamps": {
				"from": "00:07:23,560",
				"to": "00:07:25,480"
			},
			"offsets": {
				"from": 443560,
				"to": 445480
			},
			"text": " is very similar to Haskell."
		},
		{
			"timestamps": {
				"from": "00:07:25,480",
				"to": "00:07:27,840"
			},
			"offsets": {
				"from": 445480,
				"to": 447840
			},
			"text": " And when we first started looking at this,"
		},
		{
			"timestamps": {
				"from": "00:07:27,840",
				"to": "00:07:31,400"
			},
			"offsets": {
				"from": 447840,
				"to": 451400
			},
			"text": " we had the idea of making Haskell on the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:07:31,400",
				"to": "00:07:32,360"
			},
			"offsets": {
				"from": 451400,
				"to": 452360
			},
			"text": " basically."
		},
		{
			"timestamps": {
				"from": "00:07:32,360",
				"to": "00:07:36,320"
			},
			"offsets": {
				"from": 452360,
				"to": 456320
			},
			"text": " But the more we looked at these problems"
		},
		{
			"timestamps": {
				"from": "00:07:36,320",
				"to": "00:07:39,200"
			},
			"offsets": {
				"from": 456320,
				"to": 459200
			},
			"text": " and how they could be solved, we realized"
		},
		{
			"timestamps": {
				"from": "00:07:39,200",
				"to": "00:07:43,160"
			},
			"offsets": {
				"from": 459200,
				"to": 463160
			},
			"text": " that the pen and types would be really cool to do this."
		},
		{
			"timestamps": {
				"from": "00:07:43,160",
				"to": "00:07:46,040"
			},
			"offsets": {
				"from": 463160,
				"to": 466040
			},
			"text": " Also Haskell is lazily evaluated,"
		},
		{
			"timestamps": {
				"from": "00:07:46,040",
				"to": "00:07:49,480"
			},
			"offsets": {
				"from": 466040,
				"to": 469480
			},
			"text": " which becomes prohibitively expensive in real life"
		},
		{
			"timestamps": {
				"from": "00:07:49,480",
				"to": "00:07:51,240"
			},
			"offsets": {
				"from": 469480,
				"to": 471240
			},
			"text": " on the EVM as it is now."
		},
		{
			"timestamps": {
				"from": "00:07:51,240",
				"to": "00:07:54,960"
			},
			"offsets": {
				"from": 471240,
				"to": 474960
			},
			"text": " And then we found Idris."
		},
		{
			"timestamps": {
				"from": "00:07:54,960",
				"to": "00:07:58,120"
			},
			"offsets": {
				"from": 474960,
				"to": 478120
			},
			"text": " Idris is very similar to Haskell,"
		},
		{
			"timestamps": {
				"from": "00:07:58,120",
				"to": "00:08:01,640"
			},
			"offsets": {
				"from": 478120,
				"to": 481640
			},
			"text": " but it has some key differences, first of which."
		},
		{
			"timestamps": {
				"from": "00:08:01,640",
				"to": "00:08:04,520"
			},
			"offsets": {
				"from": 481640,
				"to": 484520
			},
			"text": " It is definitely typed."
		},
		{
			"timestamps": {
				"from": "00:08:04,520",
				"to": "00:08:10,600"
			},
			"offsets": {
				"from": 484520,
				"to": 490600
			},
			"text": " And it has side effects is modeled with algebraic effects."
		},
		{
			"timestamps": {
				"from": "00:08:10,600",
				"to": "00:08:13,240"
			},
			"offsets": {
				"from": 490600,
				"to": 493240
			},
			"text": " So these two things combined is what"
		},
		{
			"timestamps": {
				"from": "00:08:13,240",
				"to": "00:08:16,880"
			},
			"offsets": {
				"from": 493240,
				"to": 496880
			},
			"text": " allows us to have the neat expressiveness"
		},
		{
			"timestamps": {
				"from": "00:08:16,880",
				"to": "00:08:19,760"
			},
			"offsets": {
				"from": 496880,
				"to": 499760
			},
			"text": " in the type signatures that we saw before."
		},
		{
			"timestamps": {
				"from": "00:08:19,760",
				"to": "00:08:23,680"
			},
			"offsets": {
				"from": 499760,
				"to": 503680
			},
			"text": " And Idris is also strictly evaluated from the get-go,"
		},
		{
			"timestamps": {
				"from": "00:08:23,680",
				"to": "00:08:26,640"
			},
			"offsets": {
				"from": 503680,
				"to": 506640
			},
			"text": " so we don't need to have making changes there."
		},
		{
			"timestamps": {
				"from": "00:08:26,640",
				"to": "00:08:29,200"
			},
			"offsets": {
				"from": 506640,
				"to": 509200
			},
			"text": " And as a nice bonus, we don't have"
		},
		{
			"timestamps": {
				"from": "00:08:29,200",
				"to": "00:08:32,960"
			},
			"offsets": {
				"from": 509200,
				"to": 512960
			},
			"text": " to venture down into the murky depths of the GHC API,"
		},
		{
			"timestamps": {
				"from": "00:08:32,960",
				"to": "00:08:36,520"
			},
			"offsets": {
				"from": 512960,
				"to": 516520
			},
			"text": " if you're familiar with that."
		},
		{
			"timestamps": {
				"from": "00:08:36,520",
				"to": "00:08:38,880"
			},
			"offsets": {
				"from": 516520,
				"to": 518880
			},
			"text": " So I hope we have shown how dependent types"
		},
		{
			"timestamps": {
				"from": "00:08:38,880",
				"to": "00:08:41,400"
			},
			"offsets": {
				"from": 518880,
				"to": 521400
			},
			"text": " and algebraic effects can be used together"
		},
		{
			"timestamps": {
				"from": "00:08:41,400",
				"to": "00:08:44,360"
			},
			"offsets": {
				"from": 521400,
				"to": 524360
			},
			"text": " to define the flow of ether throughout the execution"
		},
		{
			"timestamps": {
				"from": "00:08:44,360",
				"to": "00:08:46,000"
			},
			"offsets": {
				"from": 524360,
				"to": 526000
			},
			"text": " of our contracts."
		},
		{
			"timestamps": {
				"from": "00:08:46,000",
				"to": "00:08:51,560"
			},
			"offsets": {
				"from": 526000,
				"to": 531560
			},
			"text": " And we'll see how high-level type annotations can"
		},
		{
			"timestamps": {
				"from": "00:08:51,560",
				"to": "00:08:53,800"
			},
			"offsets": {
				"from": 531560,
				"to": 533800
			},
			"text": " ensure that secret information stays secret"
		},
		{
			"timestamps": {
				"from": "00:08:53,800",
				"to": "00:08:56,160"
			},
			"offsets": {
				"from": 533800,
				"to": 536160
			},
			"text": " until it's supposed to be revealed."
		},
		{
			"timestamps": {
				"from": "00:08:56,160",
				"to": "00:09:00,080"
			},
			"offsets": {
				"from": 536160,
				"to": 540080
			},
			"text": " And we have a language where compositionality can be achieved"
		},
		{
			"timestamps": {
				"from": "00:09:00,080",
				"to": "00:09:02,960"
			},
			"offsets": {
				"from": 540080,
				"to": 542960
			},
			"text": " in a natural way."
		},
		{
			"timestamps": {
				"from": "00:09:02,960",
				"to": "00:09:06,640"
			},
			"offsets": {
				"from": 542960,
				"to": 546640
			},
			"text": " So where are we currently with this?"
		},
		{
			"timestamps": {
				"from": "00:09:06,640",
				"to": "00:09:09,080"
			},
			"offsets": {
				"from": 546640,
				"to": 549080
			},
			"text": " Well, we still have a long way to go before it's actually"
		},
		{
			"timestamps": {
				"from": "00:09:09,080",
				"to": "00:09:14,040"
			},
			"offsets": {
				"from": 549080,
				"to": 554040
			},
			"text": " usable in practice to create working smart contract bytecode."
		},
		{
			"timestamps": {
				"from": "00:09:14,040",
				"to": "00:09:16,280"
			},
			"offsets": {
				"from": 554040,
				"to": 556280
			},
			"text": " We have created models for how we want stuff"
		},
		{
			"timestamps": {
				"from": "00:09:16,280",
				"to": "00:09:18,720"
			},
			"offsets": {
				"from": 556280,
				"to": 558720
			},
			"text": " to look for the developer and made sure"
		},
		{
			"timestamps": {
				"from": "00:09:18,720",
				"to": "00:09:21,080"
			},
			"offsets": {
				"from": 558720,
				"to": 561080
			},
			"text": " that all the properties we want to enforce"
		},
		{
			"timestamps": {
				"from": "00:09:21,080",
				"to": "00:09:24,000"
			},
			"offsets": {
				"from": 561080,
				"to": 564000
			},
			"text": " can be enforced using Idris's type system."
		},
		{
			"timestamps": {
				"from": "00:09:24,000",
				"to": "00:09:26,640"
			},
			"offsets": {
				"from": 564000,
				"to": 566640
			},
			"text": " And we have just recently started looking"
		},
		{
			"timestamps": {
				"from": "00:09:26,640",
				"to": "00:09:32,240"
			},
			"offsets": {
				"from": 566640,
				"to": 572240
			},
			"text": " at how we can create a code generator that will go from Idris"
		},
		{
			"timestamps": {
				"from": "00:09:32,240",
				"to": "00:09:37,160"
			},
			"offsets": {
				"from": 572240,
				"to": 577160
			},
			"text": " to LLL in a similar way that's fantastic today."
		},
		{
			"timestamps": {
				"from": "00:09:37,160",
				"to": "00:09:40,360"
			},
			"offsets": {
				"from": 577160,
				"to": 580360
			},
			"text": " And that's it for us."
		},
		{
			"timestamps": {
				"from": "00:09:40,360",
				"to": "00:09:42,200"
			},
			"offsets": {
				"from": 580360,
				"to": 582200
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:09:42,200",
				"to": "00:09:44,680"
			},
			"offsets": {
				"from": 582200,
				"to": 584680
			},
			"text": " [APPLAUSE]"
		},
		{
			"timestamps": {
				"from": "00:09:44,680",
				"to": "00:09:48,040"
			},
			"offsets": {
				"from": 584680,
				"to": 588040
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:09:48,040",
				"to": "00:09:51,400"
			},
			"offsets": {
				"from": 588040,
				"to": 591400
			},
			"text": " [APPLAUSE]"
		},
		{
			"timestamps": {
				"from": "00:09:51,400",
				"to": "00:09:54,760"
			},
			"offsets": {
				"from": 591400,
				"to": 594760
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:09:54,760",
				"to": "00:10:23,760"
			},
			"offsets": {
				"from": 594760,
				"to": 623760
			},
			"text": " [ Silence ]"
		}
	]
}
