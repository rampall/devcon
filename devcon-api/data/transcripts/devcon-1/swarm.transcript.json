{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:17,000"
			},
			"offsets": {
				"from": 0,
				"to": 17000
			},
			"text": " [ Music ]"
		},
		{
			"timestamps": {
				"from": "00:00:17,000",
				"to": "00:00:26,000"
			},
			"offsets": {
				"from": 17000,
				"to": 26000
			},
			"text": " >> All right, so we're going to be listening to \"Prostation About Swarm\" by Daniel and Victor."
		},
		{
			"timestamps": {
				"from": "00:00:26,000",
				"to": "00:00:29,000"
			},
			"offsets": {
				"from": 26000,
				"to": 29000
			},
			"text": " \"Swarm\" hasn't really had as much publicity as it probably should have."
		},
		{
			"timestamps": {
				"from": "00:00:29,000",
				"to": "00:00:33,000"
			},
			"offsets": {
				"from": 29000,
				"to": 33000
			},
			"text": " So please welcome these guys to the stage. They're doing awesome work."
		},
		{
			"timestamps": {
				"from": "00:00:33,000",
				"to": "00:00:40,000"
			},
			"offsets": {
				"from": 33000,
				"to": 40000
			},
			"text": " [ Applause ]"
		},
		{
			"timestamps": {
				"from": "00:00:40,000",
				"to": "00:00:44,000"
			},
			"offsets": {
				"from": 40000,
				"to": 44000
			},
			"text": " >> Thanks, guys. I started out right now before we set up, yeah?"
		},
		{
			"timestamps": {
				"from": "00:00:44,000",
				"to": "00:00:47,000"
			},
			"offsets": {
				"from": 44000,
				"to": 47000
			},
			"text": " Just so that I don't want to make the same mistake as this guy."
		},
		{
			"timestamps": {
				"from": "00:00:47,000",
				"to": "00:00:51,000"
			},
			"offsets": {
				"from": 47000,
				"to": 51000
			},
			"text": " Okay, so what is \"swarm\" after all?"
		},
		{
			"timestamps": {
				"from": "00:00:51,000",
				"to": "00:00:59,000"
			},
			"offsets": {
				"from": 51000,
				"to": 59000
			},
			"text": " \"Swarm\" has to be for content distribution and storage for Web3."
		},
		{
			"timestamps": {
				"from": "00:00:59,000",
				"to": "00:01:07,000"
			},
			"offsets": {
				"from": 59000,
				"to": 67000
			},
			"text": " So basically it's the content distribution network for the Ethereum ecosystem."
		},
		{
			"timestamps": {
				"from": "00:01:07,000",
				"to": "00:01:15,000"
			},
			"offsets": {
				"from": 67000,
				"to": 75000
			},
			"text": " So if Ethereum VM is the work computer, then you can say that \"swarm\" could be the word \"hard drive\""
		},
		{
			"timestamps": {
				"from": "00:01:15,000",
				"to": "00:01:19,000"
			},
			"offsets": {
				"from": 75000,
				"to": 79000
			},
			"text": " or \"a\" word \"hard drive\" because there might be alternatives to this solution."
		},
		{
			"timestamps": {
				"from": "00:01:19,000",
				"to": "00:01:22,000"
			},
			"offsets": {
				"from": 79000,
				"to": 82000
			},
			"text": " So on the other hand, like what else is \"swarm\"?"
		},
		{
			"timestamps": {
				"from": "00:01:22,000",
				"to": "00:01:30,000"
			},
			"offsets": {
				"from": 82000,
				"to": 90000
			},
			"text": " I mean, you can just imagine an imaginary swarm where the happy beekeepers sit behind their hives"
		},
		{
			"timestamps": {
				"from": "00:01:30,000",
				"to": "00:01:35,000"
			},
			"offsets": {
				"from": 90000,
				"to": 95000
			},
			"text": " and look at their fantastic product from the bees"
		},
		{
			"timestamps": {
				"from": "00:01:35,000",
				"to": "00:01:39,000"
			},
			"offsets": {
				"from": 95000,
				"to": 99000
			},
			"text": " and just happy to have their honey harvested from the bee."
		},
		{
			"timestamps": {
				"from": "00:01:39,000",
				"to": "00:01:45,000"
			},
			"offsets": {
				"from": 99000,
				"to": 105000
			},
			"text": " You can also look at the \"beehive\" as this lovely repository of honey"
		},
		{
			"timestamps": {
				"from": "00:01:45,000",
				"to": "00:01:48,000"
			},
			"offsets": {
				"from": 105000,
				"to": 108000
			},
			"text": " where all these drops of honey are stored."
		},
		{
			"timestamps": {
				"from": "00:01:48,000",
				"to": "00:01:56,000"
			},
			"offsets": {
				"from": 108000,
				"to": 116000
			},
			"text": " And also you can look at that swarm and see the buzzing swarm of bees just communicating"
		},
		{
			"timestamps": {
				"from": "00:01:56,000",
				"to": "00:02:02,000"
			},
			"offsets": {
				"from": 116000,
				"to": 122000
			},
			"text": " which each other, I don't know how you are, but for me it obviously reminds me of a network protocol"
		},
		{
			"timestamps": {
				"from": "00:02:02,000",
				"to": "00:02:05,000"
			},
			"offsets": {
				"from": 122000,
				"to": 125000
			},
			"text": " and like all the network messages I've sent around."
		},
		{
			"timestamps": {
				"from": "00:02:05,000",
				"to": "00:02:08,000"
			},
			"offsets": {
				"from": 125000,
				"to": 128000
			},
			"text": " So let's concentrate on these three aspects."
		},
		{
			"timestamps": {
				"from": "00:02:08,000",
				"to": "00:02:12,000"
			},
			"offsets": {
				"from": 128000,
				"to": 132000
			},
			"text": " So just go back."
		},
		{
			"timestamps": {
				"from": "00:02:12,000",
				"to": "00:02:24,000"
			},
			"offsets": {
				"from": 132000,
				"to": 144000
			},
			"text": " So first of all, as a service, what \"swarm\" provides is basically it allows to store the Ethereum depths,"
		},
		{
			"timestamps": {
				"from": "00:02:24,000",
				"to": "00:02:31,000"
			},
			"offsets": {
				"from": 144000,
				"to": 151000
			},
			"text": " the decentralized applications, and also kind of off-chain data that's important, for example,"
		},
		{
			"timestamps": {
				"from": "00:02:31,000",
				"to": "00:02:38,000"
			},
			"offsets": {
				"from": 151000,
				"to": 158000
			},
			"text": " contract sources or like registry indexes, all kinds of things which people need to store."
		},
		{
			"timestamps": {
				"from": "00:02:38,000",
				"to": "00:02:43,000"
			},
			"offsets": {
				"from": 158000,
				"to": 163000
			},
			"text": " And what they want for that, like users want to keep this record safe"
		},
		{
			"timestamps": {
				"from": "00:02:43,000",
				"to": "00:02:50,000"
			},
			"offsets": {
				"from": 163000,
				"to": 170000
			},
			"text": " and in general they want integrity protection, always availabilities, like basically zero downtime, four tolerance,"
		},
		{
			"timestamps": {
				"from": "00:02:50,000",
				"to": "00:02:54,000"
			},
			"offsets": {
				"from": 170000,
				"to": 174000
			},
			"text": " all these nice things that you want from a decentralized solution in general."
		},
		{
			"timestamps": {
				"from": "00:02:54,000",
				"to": "00:03:00,000"
			},
			"offsets": {
				"from": 174000,
				"to": 180000
			},
			"text": " And one important message to take away from this, and they are willing to pay for this in a way."
		},
		{
			"timestamps": {
				"from": "00:03:00,000",
				"to": "00:03:06,000"
			},
			"offsets": {
				"from": 180000,
				"to": 186000
			},
			"text": " Like, the incentives is there for you, like the user wants to have the content retrieved"
		},
		{
			"timestamps": {
				"from": "00:03:06,000",
				"to": "00:03:09,000"
			},
			"offsets": {
				"from": 186000,
				"to": 189000
			},
			"text": " and that's an incentive."
		},
		{
			"timestamps": {
				"from": "00:03:09,000",
				"to": "00:03:19,000"
			},
			"offsets": {
				"from": 189000,
				"to": 199000
			},
			"text": " So how we solve this problem is an interesting, you can reduce this problem of file storage"
		},
		{
			"timestamps": {
				"from": "00:03:19,000",
				"to": "00:03:29,000"
			},
			"offsets": {
				"from": 199000,
				"to": 209000
			},
			"text": " and basically hosting to resolving the problem of storing fixed size chunks in a decentralized system."
		},
		{
			"timestamps": {
				"from": "00:03:29,000",
				"to": "00:03:37,000"
			},
			"offsets": {
				"from": 209000,
				"to": 217000
			},
			"text": " So how is that working? Basically on the file level or document level, you can basically chop out the files into small pieces,"
		},
		{
			"timestamps": {
				"from": "00:03:37,000",
				"to": "00:03:43,000"
			},
			"offsets": {
				"from": 217000,
				"to": 223000
			},
			"text": " rearrange them in a nice Merkle try. This is not a swear word in this company of people."
		},
		{
			"timestamps": {
				"from": "00:03:43,000",
				"to": "00:03:48,000"
			},
			"offsets": {
				"from": 223000,
				"to": 228000
			},
			"text": " I mean, you all know like the Ethereum works in the same way the Ethereum state for the Patricia try."
		},
		{
			"timestamps": {
				"from": "00:03:48,000",
				"to": "00:03:57,000"
			},
			"offsets": {
				"from": 228000,
				"to": 237000
			},
			"text": " And what you end up with this Merkle try is that you can have like a random access partial read of a file"
		},
		{
			"timestamps": {
				"from": "00:03:57,000",
				"to": "00:04:00,000"
			},
			"offsets": {
				"from": 237000,
				"to": 240000
			},
			"text": " with still preserving the integrity."
		},
		{
			"timestamps": {
				"from": "00:04:00,000",
				"to": "00:04:08,000"
			},
			"offsets": {
				"from": 240000,
				"to": 248000
			},
			"text": " And you can do this like one step further and say that you don't only handle documents,"
		},
		{
			"timestamps": {
				"from": "00:04:08,000",
				"to": "00:04:15,000"
			},
			"offsets": {
				"from": 248000,
				"to": 255000
			},
			"text": " but also document collections. So another level of indexing, which is kind of a similar structure."
		},
		{
			"timestamps": {
				"from": "00:04:15,000",
				"to": "00:04:24,000"
			},
			"offsets": {
				"from": 255000,
				"to": 264000
			},
			"text": " You call it a manifest. And this also allows to index, but as opposed to the previous Merkle try,"
		},
		{
			"timestamps": {
				"from": "00:04:24,000",
				"to": "00:04:30,000"
			},
			"offsets": {
				"from": 264000,
				"to": 270000
			},
			"text": " the parts of the document collection are obviously artificial arbitrary length."
		},
		{
			"timestamps": {
				"from": "00:04:30,000",
				"to": "00:04:40,000"
			},
			"offsets": {
				"from": 270000,
				"to": 280000
			},
			"text": " And the indexes are just passed. So this means that if you have a root of a manifest, like this chunk,"
		},
		{
			"timestamps": {
				"from": "00:04:40,000",
				"to": "00:04:47,000"
			},
			"offsets": {
				"from": 280000,
				"to": 287000
			},
			"text": " then basically they can represent entry points to the web. So basically they can be thought of as hosts"
		},
		{
			"timestamps": {
				"from": "00:04:47,000",
				"to": "00:04:53,000"
			},
			"offsets": {
				"from": 287000,
				"to": 293000
			},
			"text": " because the manifest is basically the, constitutes the routing table for that host."
		},
		{
			"timestamps": {
				"from": "00:04:53,000",
				"to": "00:05:00,000"
			},
			"offsets": {
				"from": 293000,
				"to": 300000
			},
			"text": " So basically you can use these chunks as representing or mimicking a web server."
		},
		{
			"timestamps": {
				"from": "00:05:00,000",
				"to": "00:05:05,000"
			},
			"offsets": {
				"from": 300000,
				"to": 305000
			},
			"text": " So this is how you make like a decentralized server from swan."
		},
		{
			"timestamps": {
				"from": "00:05:05,000",
				"to": "00:05:11,000"
			},
			"offsets": {
				"from": 305000,
				"to": 311000
			},
			"text": " Now so basically the message you see that we use the problem to a chunk store"
		},
		{
			"timestamps": {
				"from": "00:05:11,000",
				"to": "00:05:19,000"
			},
			"offsets": {
				"from": 311000,
				"to": 319000
			},
			"text": " and we associate each chunk with the hash of the content."
		},
		{
			"timestamps": {
				"from": "00:05:19,000",
				"to": "00:05:24,000"
			},
			"offsets": {
				"from": 319000,
				"to": 324000
			},
			"text": " Which means that we have to look up them based on these keys."
		},
		{
			"timestamps": {
				"from": "00:05:24,000",
				"to": "00:05:29,000"
			},
			"offsets": {
				"from": 324000,
				"to": 329000
			},
			"text": " So what would be actually store? Let's look at the other aspect of the high line of store."
		},
		{
			"timestamps": {
				"from": "00:05:29,000",
				"to": "00:05:34,000"
			},
			"offsets": {
				"from": 329000,
				"to": 334000
			},
			"text": " So each node has a memory store and the disk storage."
		},
		{
			"timestamps": {
				"from": "00:05:34,000",
				"to": "00:05:40,000"
			},
			"offsets": {
				"from": 334000,
				"to": 340000
			},
			"text": " So basically these are the caching that the node can look up locally."
		},
		{
			"timestamps": {
				"from": "00:05:40,000",
				"to": "00:05:45,000"
			},
			"offsets": {
				"from": 340000,
				"to": 345000
			},
			"text": " But eventually like there's going to be a situation where you can't store everything."
		},
		{
			"timestamps": {
				"from": "00:05:45,000",
				"to": "00:05:49,000"
			},
			"offsets": {
				"from": 345000,
				"to": 349000
			},
			"text": " So you have to like look out to the network to find something."
		},
		{
			"timestamps": {
				"from": "00:05:49,000",
				"to": "00:05:53,000"
			},
			"offsets": {
				"from": 349000,
				"to": 353000
			},
			"text": " Because the neighbor's honey is always sweeter anyway."
		},
		{
			"timestamps": {
				"from": "00:05:53,000",
				"to": "00:06:01,000"
			},
			"offsets": {
				"from": 353000,
				"to": 361000
			},
			"text": " So now you have to solve this problem of how you communicate your needs,"
		},
		{
			"timestamps": {
				"from": "00:06:01,000",
				"to": "00:06:09,000"
			},
			"offsets": {
				"from": 361000,
				"to": 369000
			},
			"text": " how to find basically these chunks. So what you basically do is use a network protocol."
		},
		{
			"timestamps": {
				"from": "00:06:09,000",
				"to": "00:06:15,000"
			},
			"offsets": {
				"from": 369000,
				"to": 375000
			},
			"text": " And Swan relies heavily on the Ethereum network which is basically Alex labyrinth"
		},
		{
			"timestamps": {
				"from": "00:06:15,000",
				"to": "00:06:20,000"
			},
			"offsets": {
				"from": 375000,
				"to": 380000
			},
			"text": " and Felix Langes wonderful genius product."
		},
		{
			"timestamps": {
				"from": "00:06:20,000",
				"to": "00:06:26,000"
			},
			"offsets": {
				"from": 380000,
				"to": 386000
			},
			"text": " It's basically the left peer to peer multiprotico suite."
		},
		{
			"timestamps": {
				"from": "00:06:26,000",
				"to": "00:06:32,000"
			},
			"offsets": {
				"from": 386000,
				"to": 392000
			},
			"text": " I don't want to go into the details just refer you to Alex's talk on I think it's Wednesday morning."
		},
		{
			"timestamps": {
				"from": "00:06:32,000",
				"to": "00:06:37,000"
			},
			"offsets": {
				"from": 392000,
				"to": 397000
			},
			"text": " The most important message here is that it comes with all the beautiful security"
		},
		{
			"timestamps": {
				"from": "00:06:37,000",
				"to": "00:06:41,000"
			},
			"offsets": {
				"from": 397000,
				"to": 401000
			},
			"text": " and integrity properties of this network implementation."
		},
		{
			"timestamps": {
				"from": "00:06:41,000",
				"to": "00:06:45,000"
			},
			"offsets": {
				"from": 401000,
				"to": 405000
			},
			"text": " And also it gives you a semi permanent peer pool."
		},
		{
			"timestamps": {
				"from": "00:06:45,000",
				"to": "00:06:53,000"
			},
			"offsets": {
				"from": 405000,
				"to": 413000
			},
			"text": " Basically the peers that you are actively connected to can be considered relatively stable."
		},
		{
			"timestamps": {
				"from": "00:06:53,000",
				"to": "00:06:57,000"
			},
			"offsets": {
				"from": 413000,
				"to": 417000
			},
			"text": " And also the network overlay topologies is flexible."
		},
		{
			"timestamps": {
				"from": "00:06:57,000",
				"to": "00:07:04,000"
			},
			"offsets": {
				"from": 417000,
				"to": 424000
			},
			"text": " So all we needed to do for Swan is basically use a cadmolia blue thing table."
		},
		{
			"timestamps": {
				"from": "00:07:04,000",
				"to": "00:07:07,000"
			},
			"offsets": {
				"from": 424000,
				"to": 427000
			},
			"text": " A cadmolia peer selection mechanism."
		},
		{
			"timestamps": {
				"from": "00:07:07,000",
				"to": "00:07:12,000"
			},
			"offsets": {
				"from": 427000,
				"to": 432000
			},
			"text": " And we immediately had like a key based routing system available."
		},
		{
			"timestamps": {
				"from": "00:07:12,000",
				"to": "00:07:15,000"
			},
			"offsets": {
				"from": 432000,
				"to": 435000
			},
			"text": " Now how you combine these two ideas?"
		},
		{
			"timestamps": {
				"from": "00:07:15,000",
				"to": "00:07:22,000"
			},
			"offsets": {
				"from": 435000,
				"to": 442000
			},
			"text": " Obviously if you establish that the way you find a particular chunk is to go through"
		},
		{
			"timestamps": {
				"from": "00:07:22,000",
				"to": "00:07:25,000"
			},
			"offsets": {
				"from": 442000,
				"to": 445000
			},
			"text": " like this cadmolia routing."
		},
		{
			"timestamps": {
				"from": "00:07:25,000",
				"to": "00:07:30,000"
			},
			"offsets": {
				"from": 445000,
				"to": 450000
			},
			"text": " Sorry for those of you who are like nothing to this mum or jumbo like let me give you an example."
		},
		{
			"timestamps": {
				"from": "00:07:30,000",
				"to": "00:07:38,000"
			},
			"offsets": {
				"from": 450000,
				"to": 458000
			},
			"text": " So the cadmolia routing basically would be that you organize your hive so that for each chunk"
		},
		{
			"timestamps": {
				"from": "00:07:38,000",
				"to": "00:07:45,000"
			},
			"offsets": {
				"from": 458000,
				"to": 465000
			},
			"text": " you can find a bee that can take you to a hive that's closer to that target than you are"
		},
		{
			"timestamps": {
				"from": "00:07:45,000",
				"to": "00:07:54,000"
			},
			"offsets": {
				"from": 465000,
				"to": 474000
			},
			"text": " by a factor of like a fixed factor and basically dislogor it make a distance that the key space defines"
		},
		{
			"timestamps": {
				"from": "00:07:54,000",
				"to": "00:08:05,000"
			},
			"offsets": {
				"from": 474000,
				"to": 485000
			},
			"text": " makes sure that you can find a particular node or information about that particular chunk"
		},
		{
			"timestamps": {
				"from": "00:08:05,000",
				"to": "00:08:12,000"
			},
			"offsets": {
				"from": 485000,
				"to": 492000
			},
			"text": " in logarithmic time in a fixed constant number of hops."
		},
		{
			"timestamps": {
				"from": "00:08:12,000",
				"to": "00:08:15,000"
			},
			"offsets": {
				"from": 492000,
				"to": 495000
			},
			"text": " So this is basically the idea of DHT."
		},
		{
			"timestamps": {
				"from": "00:08:15,000",
				"to": "00:08:17,000"
			},
			"offsets": {
				"from": 495000,
				"to": 497000
			},
			"text": " It's nothing not much new here."
		},
		{
			"timestamps": {
				"from": "00:08:17,000",
				"to": "00:08:28,000"
			},
			"offsets": {
				"from": 497000,
				"to": 508000
			},
			"text": " The interesting twist on the DHT that we have comes from several properties of this semi-stable peer base."
		},
		{
			"timestamps": {
				"from": "00:08:28,000",
				"to": "00:08:36,000"
			},
			"offsets": {
				"from": 508000,
				"to": 516000
			},
			"text": " But more importantly the other thing is that we not only assume that the nodes that we reach"
		},
		{
			"timestamps": {
				"from": "00:08:36,000",
				"to": "00:08:42,000"
			},
			"offsets": {
				"from": 516000,
				"to": 522000
			},
			"text": " contain like give you information about where the chunks are found but they actually give you the chunks themselves."
		},
		{
			"timestamps": {
				"from": "00:08:42,000",
				"to": "00:08:45,000"
			},
			"offsets": {
				"from": 522000,
				"to": 525000
			},
			"text": " So it's a proper content address storage."
		},
		{
			"timestamps": {
				"from": "00:08:45,000",
				"to": "00:08:49,000"
			},
			"offsets": {
				"from": 525000,
				"to": 529000
			},
			"text": " That's the advantage of this view."
		},
		{
			"timestamps": {
				"from": "00:08:49,000",
				"to": "00:09:01,000"
			},
			"offsets": {
				"from": 529000,
				"to": 541000
			},
			"text": " This gives you the possibility to define a content push mechanism basically how the distribution of content works not only their retrieval."
		},
		{
			"timestamps": {
				"from": "00:09:01,000",
				"to": "00:09:07,000"
			},
			"offsets": {
				"from": 541000,
				"to": 547000
			},
			"text": " Basically along the same kind of lines as the routing works or even simultaneously to that."
		},
		{
			"timestamps": {
				"from": "00:09:07,000",
				"to": "00:09:25,000"
			},
			"offsets": {
				"from": 547000,
				"to": 565000
			},
			"text": " One consequence of that is that eventually as a result of continuous retrievers and the scheme that we define basically through this forwarding,"
		},
		{
			"timestamps": {
				"from": "00:09:25,000",
				"to": "00:09:35,000"
			},
			"offsets": {
				"from": 565000,
				"to": 575000
			},
			"text": " the requests and forwarding deliveries, the end result of that is that you end up with the swarm being a kind of elastic cloud"
		},
		{
			"timestamps": {
				"from": "00:09:35,000",
				"to": "00:09:44,000"
			},
			"offsets": {
				"from": 575000,
				"to": 584000
			},
			"text": " which means that all the content that is popular can end up relatively far from the node that's supposed to be close to it."
		},
		{
			"timestamps": {
				"from": "00:09:44,000",
				"to": "00:09:46,000"
			},
			"offsets": {
				"from": 584000,
				"to": 586000
			},
			"text": " That's supposed to stoic."
		},
		{
			"timestamps": {
				"from": "00:09:46,000",
				"to": "00:09:55,000"
			},
			"offsets": {
				"from": 586000,
				"to": 595000
			},
			"text": " But that means that the content will be more readily available in less hops because it's just more very safe, very basically,"
		},
		{
			"timestamps": {
				"from": "00:09:55,000",
				"to": "00:09:58,460"
			},
			"offsets": {
				"from": 595000,
				"to": 598460
			},
			"text": " there's a lot of"
		},
		{
			"timestamps": {
				"from": "00:09:58,460",
				"to": "00:10:05,460"
			},
			"offsets": {
				"from": 598460,
				"to": 605460
			},
			"text": " the data that we're using in the data."
		},
		{
			"timestamps": {
				"from": "00:10:05,460",
				"to": "00:10:12,460"
			},
			"offsets": {
				"from": 605460,
				"to": 612460
			},
			"text": " And also this means that swarm is basically a constantly maximum utilization system."
		},
		{
			"timestamps": {
				"from": "00:10:12,460",
				"to": "00:10:19,460"
			},
			"offsets": {
				"from": 612460,
				"to": 619460
			},
			"text": " So this forwarding and distribution scheme that we also call smart synchronization."
		},
		{
			"timestamps": {
				"from": "00:10:19,460",
				"to": "00:10:36,460"
			},
			"offsets": {
				"from": 619460,
				"to": 636460
			},
			"text": " So we also make sure that the next one adapts to like when content becomes popular, it basically replicates and you think you can think also of it like a giant do not that blows when everybody bites to it."
		},
		{
			"timestamps": {
				"from": "00:10:36,460",
				"to": "00:10:53,460"
			},
			"offsets": {
				"from": 636460,
				"to": 653460
			},
			"text": " And the same way it can also shrink so if document copularities, the windows then it's continually deleted from first those nodes that are relatively far from it for each day."
		},
		{
			"timestamps": {
				"from": "00:10:53,460",
				"to": "00:11:01,460"
			},
			"offsets": {
				"from": 653460,
				"to": 661460
			},
			"text": " The popularity doesn't justify any more that they store it just because they are too far."
		},
		{
			"timestamps": {
				"from": "00:11:01,460",
				"to": "00:11:10,460"
			},
			"offsets": {
				"from": 661460,
				"to": 670460
			},
			"text": " And so you can think of it as the do not shrinking and in the end it can also happen that certain content is deleted."
		},
		{
			"timestamps": {
				"from": "00:11:10,460",
				"to": "00:11:11,460"
			},
			"offsets": {
				"from": 670460,
				"to": 671460
			},
			"text": " Now let's go to the incentives."
		},
		{
			"timestamps": {
				"from": "00:11:11,460",
				"to": "00:11:17,460"
			},
			"offsets": {
				"from": 671460,
				"to": 677460
			},
			"text": " That's the kind of fourth aspect of swarm."
		},
		{
			"timestamps": {
				"from": "00:11:17,460",
				"to": "00:11:38,460"
			},
			"offsets": {
				"from": 677460,
				"to": 698460
			},
			"text": " So each of the decisions that the swarm participant nodes take should be somehow legitimate by some sort of incentive because as we all know they are like rational actors and they are not trying away from maximizing their profits."
		},
		{
			"timestamps": {
				"from": "00:11:38,460",
				"to": "00:11:42,460"
			},
			"offsets": {
				"from": 698460,
				"to": 702460
			},
			"text": " So they can abuse the system if we don't align the incentives properly."
		},
		{
			"timestamps": {
				"from": "00:11:42,460",
				"to": "00:11:46,460"
			},
			"offsets": {
				"from": 702460,
				"to": 706460
			},
			"text": " So what do you actually store? Let's go back to this question first."
		},
		{
			"timestamps": {
				"from": "00:11:46,460",
				"to": "00:11:55,460"
			},
			"offsets": {
				"from": 706460,
				"to": 715460
			},
			"text": " You can answer this question simply like you store what you actually the most profitable to store."
		},
		{
			"timestamps": {
				"from": "00:11:55,460",
				"to": "00:12:04,460"
			},
			"offsets": {
				"from": 715460,
				"to": 724460
			},
			"text": " It turns out that all you need is to consult like your database and see how much particular chunk or content was accessed."
		},
		{
			"timestamps": {
				"from": "00:12:04,460",
				"to": "00:12:16,460"
			},
			"offsets": {
				"from": 724460,
				"to": 736460
			},
			"text": " On one hand access is a very good predictor of future profitability over chunk to assume some sort of constant popularity over time at least."
		},
		{
			"timestamps": {
				"from": "00:12:16,460",
				"to": "00:12:31,460"
			},
			"offsets": {
				"from": 736460,
				"to": 751460
			},
			"text": " On the other hand it makes sure that the content synchronization results in a network which behaves like in an elastic cloud way so do the auto-scanning."
		},
		{
			"timestamps": {
				"from": "00:12:31,460",
				"to": "00:12:50,460"
			},
			"offsets": {
				"from": 751460,
				"to": 770460
			},
			"text": " Now I realize that the incentives for retrieving certain content takes care of only those cases where we talk about depths like the typically popular content that you want to distribute and you want people to reach."
		},
		{
			"timestamps": {
				"from": "00:12:50,460",
				"to": "00:13:06,460"
			},
			"offsets": {
				"from": 770460,
				"to": 786460
			},
			"text": " This is not all the cases. We also envision to be used for cases where you want to store and actually make sure that your content is stored even if it's very suddenly accessed, for example birth certificate."
		},
		{
			"timestamps": {
				"from": "00:13:06,460",
				"to": "00:13:14,460"
			},
			"offsets": {
				"from": 786460,
				"to": 794460
			},
			"text": " And we realize that this incentive that we are talking about is not handling that properly."
		},
		{
			"timestamps": {
				"from": "00:13:14,460",
				"to": "00:13:24,460"
			},
			"offsets": {
				"from": 794460,
				"to": 804460
			},
			"text": " Among other things it's because it's a very different type of reward mechanism because here you actually want to make sure that my birth certificate is available."
		},
		{
			"timestamps": {
				"from": "00:13:24,460",
				"to": "00:13:30,460"
			},
			"offsets": {
				"from": 804460,
				"to": 810460
			},
			"text": " I don't want to poll it all the time because it's anyway insecure and inefficient so if I always retrieve it."
		},
		{
			"timestamps": {
				"from": "00:13:30,460",
				"to": "00:13:36,460"
			},
			"offsets": {
				"from": 810460,
				"to": 816460
			},
			"text": " So it's a different system it needs. There's a lot of discussion about this. I'm not going to go into that."
		},
		{
			"timestamps": {
				"from": "00:13:36,460",
				"to": "00:13:46,460"
			},
			"offsets": {
				"from": 816460,
				"to": 826460
			},
			"text": " I just refer to the documentation and like the kind of orange paper that we are in the middle of writing for this discussion."
		},
		{
			"timestamps": {
				"from": "00:13:46,460",
				"to": "00:14:05,460"
			},
			"offsets": {
				"from": 826460,
				"to": 845460
			},
			"text": " The main point is that one type of incentive that we do talk about is can appropriately handle the incentives for retrieval and basically which also translates to the pricing of bandwidth basically."
		},
		{
			"timestamps": {
				"from": "00:14:05,460",
				"to": "00:14:10,460"
			},
			"offsets": {
				"from": 845460,
				"to": 850460
			},
			"text": " Because that's what it does as opposed to like this storage."
		},
		{
			"timestamps": {
				"from": "00:14:10,460",
				"to": "00:14:20,460"
			},
			"offsets": {
				"from": 850460,
				"to": 860460
			},
			"text": " Now for this we are using the swap system. It swaps just as a kind of pun that you basically swap payments and service."
		},
		{
			"timestamps": {
				"from": "00:14:20,460",
				"to": "00:14:26,460"
			},
			"offsets": {
				"from": 860460,
				"to": 866460
			},
			"text": " On the other hand it's also an abbreviation of swarm accounting protocol and some other things."
		},
		{
			"timestamps": {
				"from": "00:14:26,460",
				"to": "00:14:44,460"
			},
			"offsets": {
				"from": 866460,
				"to": 884460
			},
			"text": " The way it works is basically it allows you to account for a general kind of any commodity class that can be quantified and has certain other properties that you can use this for."
		},
		{
			"timestamps": {
				"from": "00:14:44,460",
				"to": "00:15:04,460"
			},
			"offsets": {
				"from": 884460,
				"to": 904460
			},
			"text": " In swarm it's used for the accounting of bandwidth and in swarm you use a checkbook contract on the blockchain that allows you to do delayed payments that the system uses."
		},
		{
			"timestamps": {
				"from": "00:15:04,460",
				"to": "00:15:20,460"
			},
			"offsets": {
				"from": 904460,
				"to": 920460
			},
			"text": " So it's basically it's a micro payment system in which you use a pairwise accounting for a pair where they can exchange one unit of service from one unit of service."
		},
		{
			"timestamps": {
				"from": "00:15:20,460",
				"to": "00:15:29,460"
			},
			"offsets": {
				"from": 920460,
				"to": 929460
			},
			"text": " So if they consume and provide the same amount of service then their balance is over around zero."
		},
		{
			"timestamps": {
				"from": "00:15:29,460",
				"to": "00:15:41,460"
			},
			"offsets": {
				"from": 929460,
				"to": 941460
			},
			"text": " Obviously there can be things that if I work at night and the other person like download films in the day that can be vast differences in the utilization of the time."
		},
		{
			"timestamps": {
				"from": "00:15:41,460",
				"to": "00:15:55,460"
			},
			"offsets": {
				"from": 941460,
				"to": 955460
			},
			"text": " So for these cases basically when the balance tiers towards one particular pair then the pair is obligated to send a compensation which is off chain delayed payment."
		},
		{
			"timestamps": {
				"from": "00:15:55,460",
				"to": "00:16:09,460"
			},
			"offsets": {
				"from": 955460,
				"to": 969460
			},
			"text": " In this case it's a signed check. The signed check in this type of offline payments can be verified offline but in order to redeem the amount that they are about you need to transact with the blockchain."
		},
		{
			"timestamps": {
				"from": "00:16:09,460",
				"to": "00:16:23,460"
			},
			"offsets": {
				"from": 969460,
				"to": 983460
			},
			"text": " And the transaction cost is burdened on the recipient which means that they are incentivized to delay caching it and thereby save blockchain time and blockchain cost."
		},
		{
			"timestamps": {
				"from": "00:16:23,460",
				"to": "00:16:37,460"
			},
			"offsets": {
				"from": 983460,
				"to": 997460
			},
			"text": " And also they are in non-directional incentivized to watch all the kind of aspects of their peer which make them trust them more so that they can delay the payment even longer."
		},
		{
			"timestamps": {
				"from": "00:16:37,460",
				"to": "00:16:46,460"
			},
			"offsets": {
				"from": 997460,
				"to": 1006460
			},
			"text": " So basically incentivizes the emergence of a reputation system in a way and that's also possible because the checkbook contract is basically historical."
		},
		{
			"timestamps": {
				"from": "00:16:46,460",
				"to": "00:17:10,460"
			},
			"offsets": {
				"from": 1006460,
				"to": 1030460
			},
			"text": " It's a credit record that you have. So basically at the end of the day this system can allow to trade reputation for some sort of upfront deposit and most importantly can incentivize the retrieval and correct working of the network."
		},
		{
			"timestamps": {
				"from": "00:17:10,460",
				"to": "00:17:22,460"
			},
			"offsets": {
				"from": 1030460,
				"to": 1042460
			},
			"text": " Now just a quick summary before I give it over to Dania who talked about the upper layers and some of these applications for the apps."
		},
		{
			"timestamps": {
				"from": "00:17:22,460",
				"to": "00:17:28,460"
			},
			"offsets": {
				"from": 1042460,
				"to": 1048460
			},
			"text": " So just to summarize so basically swarm is defined like more formally as a protocol."
		},
		{
			"timestamps": {
				"from": "00:17:28,460",
				"to": "00:17:39,460"
			},
			"offsets": {
				"from": 1048460,
				"to": 1059460
			},
			"text": " The business at protocol which is kind of a mix of several different aspects of the system."
		},
		{
			"timestamps": {
				"from": "00:17:39,460",
				"to": "00:17:52,460"
			},
			"offsets": {
				"from": 1059460,
				"to": 1072460
			},
			"text": " So basically it's also a protocol for peer selection and peer basically bootstrapping your node and connecting with others in the network."
		},
		{
			"timestamps": {
				"from": "00:17:52,460",
				"to": "00:18:00,460"
			},
			"offsets": {
				"from": 1072460,
				"to": 1080460
			},
			"text": " It's also a protocol specifying the request forwarding and how the retrieval is and the routing works."
		},
		{
			"timestamps": {
				"from": "00:18:00,460",
				"to": "00:18:06,460"
			},
			"offsets": {
				"from": 1080460,
				"to": 1086460
			},
			"text": " It's a synchronization protocol and also it's a swap protocol. It's like the payment."
		},
		{
			"timestamps": {
				"from": "00:18:06,460",
				"to": "00:18:12,460"
			},
			"offsets": {
				"from": 1086460,
				"to": 1092460
			},
			"text": " It has maybe a fifth part which relates to the storage incentives that we don't talk about."
		},
		{
			"timestamps": {
				"from": "00:18:12,460",
				"to": "00:18:15,460"
			},
			"offsets": {
				"from": 1092460,
				"to": 1095460
			},
			"text": " That's also part of this protocol, the communication."
		},
		{
			"timestamps": {
				"from": "00:18:15,460",
				"to": "00:18:30,460"
			},
			"offsets": {
				"from": 1095460,
				"to": 1110460
			},
			"text": " And of course it's also defined by a set of APIs which I'm more related to what Dania is going to talk about so I give it over to him."
		},
		{
			"timestamps": {
				"from": "00:18:30,460",
				"to": "00:18:38,460"
			},
			"offsets": {
				"from": 1110460,
				"to": 1118460
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:18:38,460",
				"to": "00:18:46,460"
			},
			"offsets": {
				"from": 1118460,
				"to": 1126460
			},
			"text": " Hello, I'm going to talk about what can you build upon the solid foundation of an incentivized junk store."
		},
		{
			"timestamps": {
				"from": "00:18:46,460",
				"to": "00:19:01,460"
			},
			"offsets": {
				"from": 1126460,
				"to": 1141460
			},
			"text": " So once we have in place a reliable retrieval and storage infrastructure that stores fixize chunks we can build web based distributed applications on top of those."
		},
		{
			"timestamps": {
				"from": "00:19:01,460",
				"to": "00:19:08,460"
			},
			"offsets": {
				"from": 1141460,
				"to": 1148460
			},
			"text": " And I'm going to talk about these possibilities and the APIs that we provide for application developers."
		},
		{
			"timestamps": {
				"from": "00:19:08,460",
				"to": "00:19:28,460"
			},
			"offsets": {
				"from": 1148460,
				"to": 1168460
			},
			"text": " So the most important I think is the HTTP based API which really acts like a locally running web server with the guarantee that the usual methods, the usual HTTP based methods are all efficient."
		},
		{
			"timestamps": {
				"from": "00:19:28,460",
				"to": "00:19:35,460"
			},
			"offsets": {
				"from": 1168460,
				"to": 1175460
			},
			"text": " So you can change single files, you can retrieve via range queries."
		},
		{
			"timestamps": {
				"from": "00:19:35,460",
				"to": "00:19:46,460"
			},
			"offsets": {
				"from": 1175460,
				"to": 1186460
			},
			"text": " Some portion of the file which allows for streaming and you can change the content of your virtual web server."
		},
		{
			"timestamps": {
				"from": "00:19:46,460",
				"to": "00:19:50,460"
			},
			"offsets": {
				"from": 1186460,
				"to": 1190460
			},
			"text": " Which of course raises the question that this whole thing is content addressed."
		},
		{
			"timestamps": {
				"from": "00:19:50,460",
				"to": "00:19:53,460"
			},
			"offsets": {
				"from": 1190460,
				"to": 1193460
			},
			"text": " So what actually happens when you change something?"
		},
		{
			"timestamps": {
				"from": "00:19:53,460",
				"to": "00:20:08,460"
			},
			"offsets": {
				"from": 1193460,
				"to": 1208460
			},
			"text": " So here are a few URL examples. In the first case you're accessing the raw API which means that you're just downloading without any metadata a large set of bits or bytes."
		},
		{
			"timestamps": {
				"from": "00:20:08,460",
				"to": "00:20:27,460"
			},
			"offsets": {
				"from": 1208460,
				"to": 1227460
			},
			"text": " And then the next one is a swarm site which is a root page of a web server. I actually have it here."
		},
		{
			"timestamps": {
				"from": "00:20:27,460",
				"to": "00:20:34,460"
			},
			"offsets": {
				"from": 1227460,
				"to": 1234460
			},
			"text": " So it's here. This is a photo album."
		},
		{
			"timestamps": {
				"from": "00:20:34,460",
				"to": "00:20:47,460"
			},
			"offsets": {
				"from": 1234460,
				"to": 1247460
			},
			"text": " And if you click around then you can see that there's a part of the URL which is just the fragment part which is not a state that you want to share."
		},
		{
			"timestamps": {
				"from": "00:20:47,460",
				"to": "00:20:52,460"
			},
			"offsets": {
				"from": 1247460,
				"to": 1252460
			},
			"text": " It's just which picture are you looking at. So this is a state that only exists locally."
		},
		{
			"timestamps": {
				"from": "00:20:52,460",
				"to": "00:21:03,460"
			},
			"offsets": {
				"from": 1252460,
				"to": 1263460
			},
			"text": " However, if you delete a certain picture, that means that as you can see even the root has changes."
		},
		{
			"timestamps": {
				"from": "00:21:03,460",
				"to": "00:21:11,460"
			},
			"offsets": {
				"from": 1263460,
				"to": 1271460
			},
			"text": " And once you share this one then the entire content changes."
		},
		{
			"timestamps": {
				"from": "00:21:11,460",
				"to": "00:21:16,460"
			},
			"offsets": {
				"from": 1271460,
				"to": 1276460
			},
			"text": " And if you rearrange the pictures or you upload the pictures, that's the same thing will happen."
		},
		{
			"timestamps": {
				"from": "00:21:16,460",
				"to": "00:21:23,460"
			},
			"offsets": {
				"from": 1276460,
				"to": 1283460
			},
			"text": " The root has changes and therefore you can share that state with others."
		},
		{
			"timestamps": {
				"from": "00:21:23,460",
				"to": "00:21:27,460"
			},
			"offsets": {
				"from": 1283460,
				"to": 1287460
			},
			"text": " And you can do that through a name registry contract."
		},
		{
			"timestamps": {
				"from": "00:21:27,460",
				"to": "00:21:37,460"
			},
			"offsets": {
				"from": 1287460,
				"to": 1297460
			},
			"text": " So for example this URL here, Clipped Wings would be always the current state of this photo album."
		},
		{
			"timestamps": {
				"from": "00:21:37,460",
				"to": "00:21:52,460"
			},
			"offsets": {
				"from": 1297460,
				"to": 1312460
			},
			"text": " But this, so the nexus with Ethereum blockchain is first of all this swarm naming system which is just a single contract where you can reduce the root hashes for names."
		},
		{
			"timestamps": {
				"from": "00:21:52,460",
				"to": "00:22:02,460"
			},
			"offsets": {
				"from": 1312460,
				"to": 1322460
			},
			"text": " Then there's this content availability insurance where you can put up a deposit for making sure that a certain contract is a certain content is available."
		},
		{
			"timestamps": {
				"from": "00:22:02,460",
				"to": "00:22:18,460"
			},
			"offsets": {
				"from": 1322460,
				"to": 1338460
			},
			"text": " And if somebody challenges you by saying that this particular chunk that you promised is not there unless you upload that you will lose that deposit and possibly the person gets rewarded for the trouble."
		},
		{
			"timestamps": {
				"from": "00:22:18,460",
				"to": "00:22:21,460"
			},
			"offsets": {
				"from": 1338460,
				"to": 1341460
			},
			"text": " Then you can also store off blockchain state."
		},
		{
			"timestamps": {
				"from": "00:22:21,460",
				"to": "00:22:26,460"
			},
			"offsets": {
				"from": 1341460,
				"to": 1346460
			},
			"text": " So this refers a little bit back to the scalability talk."
		},
		{
			"timestamps": {
				"from": "00:22:26,460",
				"to": "00:22:38,460"
			},
			"offsets": {
				"from": 1346460,
				"to": 1358460
			},
			"text": " So one way of thinking about somewhat scalable distributed applications given a traditional blockchain is that you treat the blockchain as an arbiter of disputes."
		},
		{
			"timestamps": {
				"from": "00:22:38,460",
				"to": "00:22:46,460"
			},
			"offsets": {
				"from": 1358460,
				"to": 1366460
			},
			"text": " And as long as you don't have disputes you don't consult the consensus, the Byzantine consensus of the blockchain."
		},
		{
			"timestamps": {
				"from": "00:22:46,460",
				"to": "00:23:06,460"
			},
			"offsets": {
				"from": 1366460,
				"to": 1386460
			},
			"text": " But if there is a problem, it is a agreement that you resolve it through the blockchain and there are all these other things which kind of link a swarm to Ethereum."
		},
		{
			"timestamps": {
				"from": "00:23:06,460",
				"to": "00:23:17,460"
			},
			"offsets": {
				"from": 1386460,
				"to": 1397460
			},
			"text": " So the distributed application, the photo album that I have shown is basically the simplest distributed app because you have one producer, many consumers."
		},
		{
			"timestamps": {
				"from": "00:23:17,460",
				"to": "00:23:23,460"
			},
			"offsets": {
				"from": 1397460,
				"to": 1403460
			},
			"text": " So you kind of sidestep the difficult problems. There's no concurrent modification."
		},
		{
			"timestamps": {
				"from": "00:23:23,460",
				"to": "00:23:37,460"
			},
			"offsets": {
				"from": 1403460,
				"to": 1417460
			},
			"text": " Changes don't happen frequently and latency is acceptable. If others see your photo album changes after a few minutes or even hours, that's not really a big issue."
		},
		{
			"timestamps": {
				"from": "00:23:37,460",
				"to": "00:23:44,460"
			},
			"offsets": {
				"from": 1417460,
				"to": 1424460
			},
			"text": " However, it's interesting to think about how would you go from web 2 to web 3?"
		},
		{
			"timestamps": {
				"from": "00:23:44,460",
				"to": "00:23:50,460"
			},
			"offsets": {
				"from": 1424460,
				"to": 1430460
			},
			"text": " How do you build complex concurrent distributed applications?"
		},
		{
			"timestamps": {
				"from": "00:23:50,460",
				"to": "00:23:59,460"
			},
			"offsets": {
				"from": 1430460,
				"to": 1439460
			},
			"text": " And we think and we hope that swarm as an infrastructure together with Ethereum is actually suitable for this purpose."
		},
		{
			"timestamps": {
				"from": "00:23:59,460",
				"to": "00:24:19,460"
			},
			"offsets": {
				"from": 1439460,
				"to": 1459460
			},
			"text": " So in case you want to do something like Facebook where multiple users can comment on the same content, then of course you need to transact with the blockchain more often and to query the blockchain more often to see what the actual status of a particular content is."
		},
		{
			"timestamps": {
				"from": "00:24:19,460",
				"to": "00:24:25,460"
			},
			"offsets": {
				"from": 1459460,
				"to": 1465460
			},
			"text": " And you also need something like whisper to distribute real time commenting information."
		},
		{
			"timestamps": {
				"from": "00:24:25,460",
				"to": "00:24:41,460"
			},
			"offsets": {
				"from": 1465460,
				"to": 1481460
			},
			"text": " Building a index of swarm, well that's a really difficult task and it's a topic for probably a separate talk or even a separate section."
		},
		{
			"timestamps": {
				"from": "00:24:41,460",
				"to": "00:24:55,460"
			},
			"offsets": {
				"from": 1481460,
				"to": 1495460
			},
			"text": " But the basic idea here is that you take the map reduce paradigm with untrusted workers and you specify what they can and cannot do in a contract."
		},
		{
			"timestamps": {
				"from": "00:24:55,460",
				"to": "00:25:02,460"
			},
			"offsets": {
				"from": 1495460,
				"to": 1502460
			},
			"text": " And again in case of a conflict when they violate the contract, then you can punish them and otherwise you can reward them."
		},
		{
			"timestamps": {
				"from": "00:25:02,460",
				"to": "00:25:17,460"
			},
			"offsets": {
				"from": 1502460,
				"to": 1517460
			},
			"text": " Now the other interesting cases I think Wikipedia and open street map which are examples where the web 2 model doesn't really work very well and where we can actually substantially improve on the state of the web."
		},
		{
			"timestamps": {
				"from": "00:25:17,460",
				"to": "00:25:23,460"
			},
			"offsets": {
				"from": 1517460,
				"to": 1523460
			},
			"text": " Because in these two cases there's not a real world consensus about the content."
		},
		{
			"timestamps": {
				"from": "00:25:23,460",
				"to": "00:25:35,460"
			},
			"offsets": {
				"from": 1523460,
				"to": 1535460
			},
			"text": " So in Wikipedia you have anything related to recent history of conflicts where there are edit wars and there are disagreements about what should be there."
		},
		{
			"timestamps": {
				"from": "00:25:35,460",
				"to": "00:25:40,460"
			},
			"offsets": {
				"from": 1535460,
				"to": 1540460
			},
			"text": " And in open street map it's a current question whether the Liberland is a country or not."
		},
		{
			"timestamps": {
				"from": "00:25:40,460",
				"to": "00:25:54,460"
			},
			"offsets": {
				"from": 1540460,
				"to": 1554460
			},
			"text": " And therefore like working these projects is not really feasible so people try to do something like conserve a PDF where they try to eliminate the suppose liberal bias from Wikipedia."
		},
		{
			"timestamps": {
				"from": "00:25:54,460",
				"to": "00:26:04,460"
			},
			"offsets": {
				"from": 1554460,
				"to": 1564460
			},
			"text": " But the problem is that they have so little content and it's so expensive to fork over content from the mainstream Wikipedia that that project is simply unlivable."
		},
		{
			"timestamps": {
				"from": "00:26:04,460",
				"to": "00:26:24,460"
			},
			"offsets": {
				"from": 1564460,
				"to": 1584460
			},
			"text": " But with form what you can do is you can present different views to the same large body of content and simply mark up like which point of view you would like to take and it's really really cheap to make slightly different versions of the same huge dataset."
		},
		{
			"timestamps": {
				"from": "00:26:24,460",
				"to": "00:26:36,460"
			},
			"offsets": {
				"from": 1584460,
				"to": 1596460
			},
			"text": " So I think that in case of maps and then Cplopedia's we're actually looking forward to something that is qualitatively superior to what currently exists in web 2."
		},
		{
			"timestamps": {
				"from": "00:26:36,460",
				"to": "00:26:43,460"
			},
			"offsets": {
				"from": 1596460,
				"to": 1603460
			},
			"text": " So finally I would like to tell you what of this exists and what the status of this project."
		},
		{
			"timestamps": {
				"from": "00:26:43,460",
				"to": "00:26:57,460"
			},
			"offsets": {
				"from": 1603460,
				"to": 1617460
			},
			"text": " So we have a reference implementation of so this is an extension of the Go client, which has a HTTP which has the HTTP API."
		},
		{
			"timestamps": {
				"from": "00:26:57,460",
				"to": "00:27:02,460"
			},
			"offsets": {
				"from": 1617460,
				"to": 1622460
			},
			"text": " It has the pairwise accounting."
		},
		{
			"timestamps": {
				"from": "00:27:02,460",
				"to": "00:27:19,460"
			},
			"offsets": {
				"from": 1622460,
				"to": 1639460
			},
			"text": " All of it works on small scale. We simply haven't been able to test it on a larger scale but and I'm sure that it would have some problems that need to be ironed out."
		},
		{
			"timestamps": {
				"from": "00:27:19,460",
				"to": "00:27:23,460"
			},
			"offsets": {
				"from": 1639460,
				"to": 1643460
			},
			"text": " So far it has been funded by Ethereum Foundation."
		},
		{
			"timestamps": {
				"from": "00:27:23,460",
				"to": "00:27:30,460"
			},
			"offsets": {
				"from": 1643460,
				"to": 1650460
			},
			"text": " So this has been and we have had a lot of community support as well."
		},
		{
			"timestamps": {
				"from": "00:27:30,460",
				"to": "00:27:39,460"
			},
			"offsets": {
				"from": 1650460,
				"to": 1659460
			},
			"text": " And here are the things that we are ready to demo well not right now of course but hopefully during this conference."
		},
		{
			"timestamps": {
				"from": "00:27:39,460",
				"to": "00:27:57,460"
			},
			"offsets": {
				"from": 1659460,
				"to": 1677460
			},
			"text": " And in GitHub you can see the source repository which is basically a fork of the Go Ethereum client with a separate branch BZZ where you can always find the current state of the BZZ capable death client."
		},
		{
			"timestamps": {
				"from": "00:27:57,460",
				"to": "00:28:03,460"
			},
			"offsets": {
				"from": 1677460,
				"to": 1683460
			},
			"text": " And we are keeping it up to date with the upstream version of Go Ethereum."
		},
		{
			"timestamps": {
				"from": "00:28:03,460",
				"to": "00:28:11,460"
			},
			"offsets": {
				"from": 1683460,
				"to": 1691460
			},
			"text": " So that's where you find our source code and our documentation as well."
		},
		{
			"timestamps": {
				"from": "00:28:11,460",
				"to": "00:28:15,460"
			},
			"offsets": {
				"from": 1691460,
				"to": 1695460
			},
			"text": " Maybe Victor do you want to say anything about the status?"
		},
		{
			"timestamps": {
				"from": "00:28:15,460",
				"to": "00:28:17,460"
			},
			"offsets": {
				"from": 1695460,
				"to": 1697460
			},
			"text": " Okay, thanks."
		},
		{
			"timestamps": {
				"from": "00:28:18,460",
				"to": "00:28:19,460"
			},
			"offsets": {
				"from": 1698460,
				"to": 1699460
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:28:19,460",
				"to": "00:28:26,460"
			},
			"offsets": {
				"from": 1699460,
				"to": 1706460
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "00:28:26,460",
				"to": "00:28:29,040"
			},
			"offsets": {
				"from": 1706460,
				"to": 1709040
			},
			"text": " (bells ringing)"
		},
		{
			"timestamps": {
				"from": "00:28:29,040",
				"to": "00:28:31,040"
			},
			"offsets": {
				"from": 1709040,
				"to": 1711040
			},
			"text": " [ ]"
		}
	]
}
