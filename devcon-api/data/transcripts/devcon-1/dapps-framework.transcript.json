{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:16,000"
			},
			"offsets": {
				"from": 0,
				"to": 16000
			},
			"text": " [ Music ]"
		},
		{
			"timestamps": {
				"from": "00:00:16,000",
				"to": "00:00:18,000"
			},
			"offsets": {
				"from": 16000,
				"to": 18000
			},
			"text": " >> Hi."
		},
		{
			"timestamps": {
				"from": "00:00:18,000",
				"to": "00:00:21,000"
			},
			"offsets": {
				"from": 18000,
				"to": 21000
			},
			"text": " Let's start. So my name is Constantine."
		},
		{
			"timestamps": {
				"from": "00:00:21,000",
				"to": "00:00:26,000"
			},
			"offsets": {
				"from": 21000,
				"to": 26000
			},
			"text": " I'm presenting a mark which is a framework, a JavaScript framework"
		},
		{
			"timestamps": {
				"from": "00:00:26,000",
				"to": "00:00:31,000"
			},
			"offsets": {
				"from": 26000,
				"to": 31000
			},
			"text": " for dabs. I should get this straight out the way."
		},
		{
			"timestamps": {
				"from": "00:00:31,000",
				"to": "00:00:36,000"
			},
			"offsets": {
				"from": 31000,
				"to": 36000
			},
			"text": " I'm not the author of embark. The guy who built this is called"
		},
		{
			"timestamps": {
				"from": "00:00:36,000",
				"to": "00:00:39,000"
			},
			"offsets": {
				"from": 36000,
				"to": 39000
			},
			"text": " the eurema ties and he leaves in Canada. And unfortunately he"
		},
		{
			"timestamps": {
				"from": "00:00:39,000",
				"to": "00:00:43,000"
			},
			"offsets": {
				"from": 39000,
				"to": 43000
			},
			"text": " couldn't be here. So I'm proxing for him today."
		},
		{
			"timestamps": {
				"from": "00:00:43,000",
				"to": "00:00:46,000"
			},
			"offsets": {
				"from": 43000,
				"to": 46000
			},
			"text": " So I'm afraid he's stuck with me."
		},
		{
			"timestamps": {
				"from": "00:00:46,000",
				"to": "00:00:52,000"
			},
			"offsets": {
				"from": 46000,
				"to": 52000
			},
			"text": " Anyway, let's get to it. So what is a framework for dabs?"
		},
		{
			"timestamps": {
				"from": "00:00:52,000",
				"to": "00:01:01,000"
			},
			"offsets": {
				"from": 52000,
				"to": 61000
			},
			"text": " It's a framework just like Angular, Meteor that supports"
		},
		{
			"timestamps": {
				"from": "00:01:01,000",
				"to": "00:01:06,000"
			},
			"offsets": {
				"from": 61000,
				"to": 66000
			},
			"text": " automated contract deployments, barks specifically support"
		},
		{
			"timestamps": {
				"from": "00:01:06,000",
				"to": "00:01:09,000"
			},
			"offsets": {
				"from": 66000,
				"to": 69000
			},
			"text": " integration with IPFS with Meteor and a couple of other"
		},
		{
			"timestamps": {
				"from": "00:01:09,000",
				"to": "00:01:14,000"
			},
			"offsets": {
				"from": 69000,
				"to": 74000
			},
			"text": " useful tools. It's got TDD support because testing is"
		},
		{
			"timestamps": {
				"from": "00:01:14,000",
				"to": "00:01:24,000"
			},
			"offsets": {
				"from": 74000,
				"to": 84000
			},
			"text": " awesome. It's quite modular. In that sense, you're building"
		},
		{
			"timestamps": {
				"from": "00:01:24,000",
				"to": "00:01:28,000"
			},
			"offsets": {
				"from": 84000,
				"to": 88000
			},
			"text": " pipeline, building deployed by-plane agnostic."
		},
		{
			"timestamps": {
				"from": "00:01:28,000",
				"to": "00:01:34,000"
			},
			"offsets": {
				"from": 88000,
				"to": 94000
			},
			"text": " It's got pre-need tools for multi-chain management."
		},
		{
			"timestamps": {
				"from": "00:01:34,000",
				"to": "00:01:40,000"
			},
			"offsets": {
				"from": 94000,
				"to": 100000
			},
			"text": " Why? What is it for?"
		},
		{
			"timestamps": {
				"from": "00:01:40,000",
				"to": "00:01:44,000"
			},
			"offsets": {
				"from": 100000,
				"to": 104000
			},
			"text": " Basically, if you try and build your dabs from scratch and by"
		},
		{
			"timestamps": {
				"from": "00:01:44,000",
				"to": "00:01:47,000"
			},
			"offsets": {
				"from": 104000,
				"to": 107000
			},
			"text": " dap them in, some application has got a bunch of contracts."
		},
		{
			"timestamps": {
				"from": "00:01:47,000",
				"to": "00:01:53,000"
			},
			"offsets": {
				"from": 107000,
				"to": 113000
			},
			"text": " Some HTML, JavaScript, CSS, and try to build some user interface."
		},
		{
			"timestamps": {
				"from": "00:01:53,000",
				"to": "00:01:58,000"
			},
			"offsets": {
				"from": 113000,
				"to": 118000
			},
			"text": " You kind of find yourself doing the same things over and over"
		},
		{
			"timestamps": {
				"from": "00:01:58,000",
				"to": "00:02:01,000"
			},
			"offsets": {
				"from": 118000,
				"to": 121000
			},
			"text": " again. Let's say you have a system of five"
		},
		{
			"timestamps": {
				"from": "00:02:01,000",
				"to": "00:02:03,000"
			},
			"offsets": {
				"from": 121000,
				"to": 123000
			},
			"text": " contracts and you want to change one of them."
		},
		{
			"timestamps": {
				"from": "00:02:03,000",
				"to": "00:02:06,000"
			},
			"offsets": {
				"from": 123000,
				"to": 126000
			},
			"text": " It turns you to do that. You need to redeploy the contract"
		},
		{
			"timestamps": {
				"from": "00:02:06,000",
				"to": "00:02:10,000"
			},
			"offsets": {
				"from": 126000,
				"to": 130000
			},
			"text": " and update your JavaScript references. If you have dependencies,"
		},
		{
			"timestamps": {
				"from": "00:02:10,000",
				"to": "00:02:13,000"
			},
			"offsets": {
				"from": 130000,
				"to": 133000
			},
			"text": " between different contracts, update the references as well."
		},
		{
			"timestamps": {
				"from": "00:02:13,000",
				"to": "00:02:17,000"
			},
			"offsets": {
				"from": 133000,
				"to": 137000
			},
			"text": " Readabody those contracts and do your JavaScript bindings for"
		},
		{
			"timestamps": {
				"from": "00:02:17,000",
				"to": "00:02:20,000"
			},
			"offsets": {
				"from": 137000,
				"to": 140000
			},
			"text": " those contracts again. The point here is that there are"
		},
		{
			"timestamps": {
				"from": "00:02:20,000",
				"to": "00:02:24,000"
			},
			"offsets": {
				"from": 140000,
				"to": 144000
			},
			"text": " certain routines which you inevitably end up doing over"
		},
		{
			"timestamps": {
				"from": "00:02:24,000",
				"to": "00:02:28,000"
			},
			"offsets": {
				"from": 144000,
				"to": 148000
			},
			"text": " and over and over again. That's clear case of automation and"
		},
		{
			"timestamps": {
				"from": "00:02:28,000",
				"to": "00:02:35,000"
			},
			"offsets": {
				"from": 148000,
				"to": 155000
			},
			"text": " the bug does just that. The quickest and easiest way to get"
		},
		{
			"timestamps": {
				"from": "00:02:35,000",
				"to": "00:02:42,000"
			},
			"offsets": {
				"from": 155000,
				"to": 162000
			},
			"text": " started is to open up your terminal, type an embark demo"
		},
		{
			"timestamps": {
				"from": "00:02:42,000",
				"to": "00:02:47,000"
			},
			"offsets": {
				"from": 162000,
				"to": 167000
			},
			"text": " cd into the app directory and you'll find something like"
		},
		{
			"timestamps": {
				"from": "00:02:47,000",
				"to": "00:02:52,000"
			},
			"offsets": {
				"from": 167000,
				"to": 172000
			},
			"text": " that. That's your directory structure and"
		},
		{
			"timestamps": {
				"from": "00:02:52,000",
				"to": "00:02:57,000"
			},
			"offsets": {
				"from": 172000,
				"to": 177000
			},
			"text": " embark users, called coc convention over configuration."
		},
		{
			"timestamps": {
				"from": "00:02:57,000",
				"to": "00:03:01,000"
			},
			"offsets": {
				"from": 177000,
				"to": 181000
			},
			"text": " So you contract files and go into the contracts directory,"
		},
		{
			"timestamps": {
				"from": "00:03:01,000",
				"to": "00:03:05,000"
			},
			"offsets": {
				"from": 181000,
				"to": 185000
			},
			"text": " your HTML and the HTML and so on."
		},
		{
			"timestamps": {
				"from": "00:03:05,000",
				"to": "00:03:12,000"
			},
			"offsets": {
				"from": 185000,
				"to": 192000
			},
			"text": " For testing, some bark users, a theorem, gsvm, which is one of"
		},
		{
			"timestamps": {
				"from": "00:03:12,000",
				"to": "00:03:17,000"
			},
			"offsets": {
				"from": 192000,
				"to": 197000
			},
			"text": " the components of the node theorem client."
		},
		{
			"timestamps": {
				"from": "00:03:17,000",
				"to": "00:03:22,000"
			},
			"offsets": {
				"from": 197000,
				"to": 202000
			},
			"text": " As for the JavaScript side of things, as I said, it's kind of"
		},
		{
			"timestamps": {
				"from": "00:03:22,000",
				"to": "00:03:25,000"
			},
			"offsets": {
				"from": 202000,
				"to": 205000
			},
			"text": " framework agnostic but by default it's mocker."
		},
		{
			"timestamps": {
				"from": "00:03:25,000",
				"to": "00:03:30,000"
			},
			"offsets": {
				"from": 205000,
				"to": 210000
			},
			"text": " If your Jasmine user will free to use Jasmine."
		},
		{
			"timestamps": {
				"from": "00:03:30,000",
				"to": "00:03:37,000"
			},
			"offsets": {
				"from": 210000,
				"to": 217000
			},
			"text": " So for chain management, you can run your blockchain which has"
		},
		{
			"timestamps": {
				"from": "00:03:37,000",
				"to": "00:03:41,000"
			},
			"offsets": {
				"from": 217000,
				"to": 221000
			},
			"text": " place in integration with gef, the go with theorem client."
		},
		{
			"timestamps": {
				"from": "00:03:41,000",
				"to": "00:03:44,000"
			},
			"offsets": {
				"from": 221000,
				"to": 224000
			},
			"text": " You can specify which environment you want to use,"
		},
		{
			"timestamps": {
				"from": "00:03:44,000",
				"to": "00:03:48,000"
			},
			"offsets": {
				"from": 224000,
				"to": 228000
			},
			"text": " development, the staging or production."
		},
		{
			"timestamps": {
				"from": "00:03:48,000",
				"to": "00:03:53,000"
			},
			"offsets": {
				"from": 228000,
				"to": 233000
			},
			"text": " You, as a set of commands for deploying things, for running"
		},
		{
			"timestamps": {
				"from": "00:03:53,000",
				"to": "00:03:57,000"
			},
			"offsets": {
				"from": 233000,
				"to": 237000
			},
			"text": " the blockchain, for simulating the blockchain."
		},
		{
			"timestamps": {
				"from": "00:03:57,000",
				"to": "00:04:01,000"
			},
			"offsets": {
				"from": 237000,
				"to": 241000
			},
			"text": " So I'm going to show that in a second."
		},
		{
			"timestamps": {
				"from": "00:04:01,000",
				"to": "00:04:06,000"
			},
			"offsets": {
				"from": 241000,
				"to": 246000
			},
			"text": " Now, I'm going to show that now."
		},
		{
			"timestamps": {
				"from": "00:04:06,000",
				"to": "00:04:10,000"
			},
			"offsets": {
				"from": 246000,
				"to": 250000
			},
			"text": " So I've already created the demo."
		},
		{
			"timestamps": {
				"from": "00:04:10,000",
				"to": "00:04:13,000"
			},
			"offsets": {
				"from": 250000,
				"to": 253000
			},
			"text": " Can you see that all that?"
		},
		{
			"timestamps": {
				"from": "00:04:13,000",
				"to": "00:04:20,000"
			},
			"offsets": {
				"from": 253000,
				"to": 260000
			},
			"text": " Okay. So let's fire up our simulator."
		},
		{
			"timestamps": {
				"from": "00:04:20,000",
				"to": "00:04:24,000"
			},
			"offsets": {
				"from": 260000,
				"to": 264000
			},
			"text": " Simulator behaves just like the blockchain."
		},
		{
			"timestamps": {
				"from": "00:04:24,000",
				"to": "00:04:30,000"
			},
			"offsets": {
				"from": 264000,
				"to": 270000
			},
			"text": " It's just a little bit faster."
		},
		{
			"timestamps": {
				"from": "00:04:30,000",
				"to": "00:04:35,000"
			},
			"offsets": {
				"from": 270000,
				"to": 275000
			},
			"text": " Is that large enough?"
		},
		{
			"timestamps": {
				"from": "00:04:35,000",
				"to": "00:04:38,000"
			},
			"offsets": {
				"from": 275000,
				"to": 278000
			},
			"text": " Better?"
		},
		{
			"timestamps": {
				"from": "00:04:38,000",
				"to": "00:04:42,000"
			},
			"offsets": {
				"from": 278000,
				"to": 282000
			},
			"text": " Okay. Let's take a look inside our demo."
		},
		{
			"timestamps": {
				"from": "00:04:42,000",
				"to": "00:04:45,000"
			},
			"offsets": {
				"from": 282000,
				"to": 285000
			},
			"text": " Let's take a look at the contract."
		},
		{
			"timestamps": {
				"from": "00:04:45,000",
				"to": "00:04:49,000"
			},
			"offsets": {
				"from": 285000,
				"to": 289000
			},
			"text": " So this is called the demo comes with a very simple contract called"
		},
		{
			"timestamps": {
				"from": "00:04:49,000",
				"to": "00:04:51,000"
			},
			"offsets": {
				"from": 289000,
				"to": 291000
			},
			"text": " simple storage."
		},
		{
			"timestamps": {
				"from": "00:04:51,000",
				"to": "00:04:54,000"
			},
			"offsets": {
				"from": 291000,
				"to": 294000
			},
			"text": " It's got a setter and a getter."
		},
		{
			"timestamps": {
				"from": "00:04:54,000",
				"to": "00:04:59,000"
			},
			"offsets": {
				"from": 294000,
				"to": 299000
			},
			"text": " And basically on set it sets some storage data which is an"
		},
		{
			"timestamps": {
				"from": "00:04:59,000",
				"to": "00:05:03,000"
			},
			"offsets": {
				"from": 299000,
				"to": 303000
			},
			"text": " integer and on get, well, getter."
		},
		{
			"timestamps": {
				"from": "00:05:03,000",
				"to": "00:05:08,000"
			},
			"offsets": {
				"from": 303000,
				"to": 308000
			},
			"text": " Probably the most simple contract you could think of."
		},
		{
			"timestamps": {
				"from": "00:05:08,000",
				"to": "00:05:12,000"
			},
			"offsets": {
				"from": 308000,
				"to": 312000
			},
			"text": " So inside the config directory we've got a couple of configs."
		},
		{
			"timestamps": {
				"from": "00:05:12,000",
				"to": "00:05:16,000"
			},
			"offsets": {
				"from": 312000,
				"to": 316000
			},
			"text": " We've got a blockchain configuration file which specifies three"
		},
		{
			"timestamps": {
				"from": "00:05:16,000",
				"to": "00:05:18,000"
			},
			"offsets": {
				"from": 316000,
				"to": 318000
			},
			"text": " different environments."
		},
		{
			"timestamps": {
				"from": "00:05:18,000",
				"to": "00:05:24,000"
			},
			"offsets": {
				"from": 318000,
				"to": 324000
			},
			"text": " Development, staging, production, a couple of nice things like"
		},
		{
			"timestamps": {
				"from": "00:05:24,000",
				"to": "00:05:28,000"
			},
			"offsets": {
				"from": 324000,
				"to": 328000
			},
			"text": " RPC hosts, and a gas limit and so on."
		},
		{
			"timestamps": {
				"from": "00:05:28,000",
				"to": "00:05:32,000"
			},
			"offsets": {
				"from": 328000,
				"to": 332000
			},
			"text": " There's also a good contract configuration file which doesn't"
		},
		{
			"timestamps": {
				"from": "00:05:32,000",
				"to": "00:05:35,000"
			},
			"offsets": {
				"from": 332000,
				"to": 335000
			},
			"text": " contain much, but I can tell you this thing is actually quite"
		},
		{
			"timestamps": {
				"from": "00:05:35,000",
				"to": "00:05:36,000"
			},
			"offsets": {
				"from": 335000,
				"to": 336000
			},
			"text": " powerful."
		},
		{
			"timestamps": {
				"from": "00:05:36,000",
				"to": "00:05:39,000"
			},
			"offsets": {
				"from": 336000,
				"to": 339000
			},
			"text": " We're going to take a look at some of the features of the"
		},
		{
			"timestamps": {
				"from": "00:05:39,000",
				"to": "00:05:41,000"
			},
			"offsets": {
				"from": 339000,
				"to": 341000
			},
			"text": " project."
		},
		{
			"timestamps": {
				"from": "00:05:41,000",
				"to": "00:05:44,000"
			},
			"offsets": {
				"from": 341000,
				"to": 344000
			},
			"text": " And we've got our tests here."
		},
		{
			"timestamps": {
				"from": "00:05:44,000",
				"to": "00:05:45,000"
			},
			"offsets": {
				"from": 344000,
				"to": 345000
			},
			"text": " It's a very simple test."
		},
		{
			"timestamps": {
				"from": "00:05:45,000",
				"to": "00:05:49,000"
			},
			"offsets": {
				"from": 345000,
				"to": 349000
			},
			"text": " So we are testing that simple storage is able to set the"
		},
		{
			"timestamps": {
				"from": "00:05:49,000",
				"to": "00:05:54,000"
			},
			"offsets": {
				"from": 349000,
				"to": 354000
			},
			"text": " constructive value and it can set the storage value as well."
		},
		{
			"timestamps": {
				"from": "00:05:54,000",
				"to": "00:06:02,000"
			},
			"offsets": {
				"from": 354000,
				"to": 362000
			},
			"text": " We can run the tests by an embark."
		},
		{
			"timestamps": {
				"from": "00:06:02,000",
				"to": "00:06:10,000"
			},
			"offsets": {
				"from": 362000,
				"to": 370000
			},
			"text": " And I can say it's deploying the contract, it's running the"
		},
		{
			"timestamps": {
				"from": "00:06:10,000",
				"to": "00:06:12,000"
			},
			"offsets": {
				"from": 370000,
				"to": 372000
			},
			"text": " test and it's still working."
		},
		{
			"timestamps": {
				"from": "00:06:12,000",
				"to": "00:06:14,000"
			},
			"offsets": {
				"from": 372000,
				"to": 374000
			},
			"text": " It's nice."
		},
		{
			"timestamps": {
				"from": "00:06:14,000",
				"to": "00:06:16,000"
			},
			"offsets": {
				"from": 374000,
				"to": 376000
			},
			"text": " And we can also run the apps."
		},
		{
			"timestamps": {
				"from": "00:06:16,000",
				"to": "00:06:19,000"
			},
			"offsets": {
				"from": 376000,
				"to": 379000
			},
			"text": " So testing is all great, but what's the point of the app if"
		},
		{
			"timestamps": {
				"from": "00:06:19,000",
				"to": "00:06:21,000"
			},
			"offsets": {
				"from": 379000,
				"to": 381000
			},
			"text": " you can't run it?"
		},
		{
			"timestamps": {
				"from": "00:06:21,000",
				"to": "00:06:23,000"
			},
			"offsets": {
				"from": 381000,
				"to": 383000
			},
			"text": " To embark on."
		},
		{
			"timestamps": {
				"from": "00:06:30,000",
				"to": "00:06:34,000"
			},
			"offsets": {
				"from": 390000,
				"to": 394000
			},
			"text": " Go to localhost 8000."
		},
		{
			"timestamps": {
				"from": "00:06:34,000",
				"to": "00:06:38,000"
			},
			"offsets": {
				"from": 394000,
				"to": 398000
			},
			"text": " This is our app."
		},
		{
			"timestamps": {
				"from": "00:06:38,000",
				"to": "00:06:41,000"
			},
			"offsets": {
				"from": 398000,
				"to": 401000
			},
			"text": " We can check that the value is so it's been initialized with"
		},
		{
			"timestamps": {
				"from": "00:06:41,000",
				"to": "00:06:43,000"
			},
			"offsets": {
				"from": 401000,
				"to": 403000
			},
			"text": " value of 100."
		},
		{
			"timestamps": {
				"from": "00:06:43,000",
				"to": "00:06:48,000"
			},
			"offsets": {
				"from": 403000,
				"to": 408000
			},
			"text": " We can set that 10, get again, and we get 10."
		},
		{
			"timestamps": {
				"from": "00:06:48,000",
				"to": "00:06:50,000"
			},
			"offsets": {
				"from": 408000,
				"to": 410000
			},
			"text": " All right."
		},
		{
			"timestamps": {
				"from": "00:06:50,000",
				"to": "00:06:57,000"
			},
			"offsets": {
				"from": 410000,
				"to": 417000
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "00:06:57,000",
				"to": "00:06:59,000"
			},
			"offsets": {
				"from": 417000,
				"to": 419000
			},
			"text": " >> Let's carry on."
		},
		{
			"timestamps": {
				"from": "00:06:59,000",
				"to": "00:07:01,000"
			},
			"offsets": {
				"from": 419000,
				"to": 421000
			},
			"text": " The configuration file that I've mentioned."
		},
		{
			"timestamps": {
				"from": "00:07:01,000",
				"to": "00:07:06,000"
			},
			"offsets": {
				"from": 421000,
				"to": 426000
			},
			"text": " That supports -- one thing is, it's initialization arguments."
		},
		{
			"timestamps": {
				"from": "00:07:06,000",
				"to": "00:07:08,000"
			},
			"offsets": {
				"from": 426000,
				"to": 428000
			},
			"text": " In this system, we've got three different contracts."
		},
		{
			"timestamps": {
				"from": "00:07:08,000",
				"to": "00:07:11,000"
			},
			"offsets": {
				"from": 428000,
				"to": 431000
			},
			"text": " User manager, my storage, and my main contract."
		},
		{
			"timestamps": {
				"from": "00:07:11,000",
				"to": "00:07:15,000"
			},
			"offsets": {
				"from": 431000,
				"to": 435000
			},
			"text": " My main contract needs to be initialized with references to"
		},
		{
			"timestamps": {
				"from": "00:07:15,000",
				"to": "00:07:17,000"
			},
			"offsets": {
				"from": 435000,
				"to": 437000
			},
			"text": " the first two contracts."
		},
		{
			"timestamps": {
				"from": "00:07:17,000",
				"to": "00:07:21,000"
			},
			"offsets": {
				"from": 437000,
				"to": 441000
			},
			"text": " We can set that in contracts.yaml."
		},
		{
			"timestamps": {
				"from": "00:07:21,000",
				"to": "00:07:23,000"
			},
			"offsets": {
				"from": 441000,
				"to": 443000
			},
			"text": " It's static binding."
		},
		{
			"timestamps": {
				"from": "00:07:23,000",
				"to": "00:07:27,000"
			},
			"offsets": {
				"from": 443000,
				"to": 447000
			},
			"text": " So we don't want -- we don't want to deploy the my storage"
		},
		{
			"timestamps": {
				"from": "00:07:27,000",
				"to": "00:07:28,000"
			},
			"offsets": {
				"from": 447000,
				"to": 448000
			},
			"text": " contract."
		},
		{
			"timestamps": {
				"from": "00:07:28,000",
				"to": "00:07:31,000"
			},
			"offsets": {
				"from": 448000,
				"to": 451000
			},
			"text": " We want to initialize it with -- we want to bind it to a"
		},
		{
			"timestamps": {
				"from": "00:07:31,000",
				"to": "00:07:33,000"
			},
			"offsets": {
				"from": 451000,
				"to": 453000
			},
			"text": " specific address on the blockchain."
		},
		{
			"timestamps": {
				"from": "00:07:33,000",
				"to": "00:07:36,000"
			},
			"offsets": {
				"from": 453000,
				"to": 456000
			},
			"text": " That is my storage that's been already deployed."
		},
		{
			"timestamps": {
				"from": "00:07:36,000",
				"to": "00:07:40,000"
			},
			"offsets": {
				"from": 456000,
				"to": 460000
			},
			"text": " We can do that by providing an address."
		},
		{
			"timestamps": {
				"from": "00:07:40,000",
				"to": "00:07:43,000"
			},
			"offsets": {
				"from": 460000,
				"to": 463000
			},
			"text": " And you can -- contracts with the ml file."
		},
		{
			"timestamps": {
				"from": "00:07:43,000",
				"to": "00:07:45,000"
			},
			"offsets": {
				"from": 463000,
				"to": 465000
			},
			"text": " It supports events."
		},
		{
			"timestamps": {
				"from": "00:07:45,000",
				"to": "00:07:50,000"
			},
			"offsets": {
				"from": 465000,
				"to": 470000
			},
			"text": " So let's say on -- on the deploy of my main contract, we"
		},
		{
			"timestamps": {
				"from": "00:07:50,000",
				"to": "00:07:55,000"
			},
			"offsets": {
				"from": 470000,
				"to": 475000
			},
			"text": " want to make a call to the user management -- user manager"
		},
		{
			"timestamps": {
				"from": "00:07:55,000",
				"to": "00:07:56,000"
			},
			"offsets": {
				"from": 475000,
				"to": 476000
			},
			"text": " contracts."
		},
		{
			"timestamps": {
				"from": "00:07:56,000",
				"to": "00:07:58,000"
			},
			"offsets": {
				"from": 476000,
				"to": 478000
			},
			"text": " We can do that."
		},
		{
			"timestamps": {
				"from": "00:07:58,000",
				"to": "00:08:03,000"
			},
			"offsets": {
				"from": 478000,
				"to": 483000
			},
			"text": " We can even pass an address to the address of my main contract."
		},
		{
			"timestamps": {
				"from": "00:08:03,000",
				"to": "00:08:07,000"
			},
			"offsets": {
				"from": 483000,
				"to": 487000
			},
			"text": " You can do contract inheritance."
		},
		{
			"timestamps": {
				"from": "00:08:07,000",
				"to": "00:08:09,000"
			},
			"offsets": {
				"from": 487000,
				"to": 489000
			},
			"text": " That's not a problem."
		},
		{
			"timestamps": {
				"from": "00:08:09,000",
				"to": "00:08:14,000"
			},
			"offsets": {
				"from": 489000,
				"to": 494000
			},
			"text": " If your USD and euro contracts depend on stable coin contract,"
		},
		{
			"timestamps": {
				"from": "00:08:14,000",
				"to": "00:08:19,000"
			},
			"offsets": {
				"from": 494000,
				"to": 499000
			},
			"text": " then you -- you only need to specify that USD and euro are"
		},
		{
			"timestamps": {
				"from": "00:08:19,000",
				"to": "00:08:23,000"
			},
			"offsets": {
				"from": 499000,
				"to": 503000
			},
			"text": " instance of stable coin."
		},
		{
			"timestamps": {
				"from": "00:08:23,000",
				"to": "00:08:27,000"
			},
			"offsets": {
				"from": 503000,
				"to": 507000
			},
			"text": " Another nice feature of embark is that you can use"
		},
		{
			"timestamps": {
				"from": "00:08:27,000",
				"to": "00:08:28,000"
			},
			"offsets": {
				"from": 507000,
				"to": 508000
			},
			"text": " IPFS."
		},
		{
			"timestamps": {
				"from": "00:08:28,000",
				"to": "00:08:30,000"
			},
			"offsets": {
				"from": 508000,
				"to": 510000
			},
			"text": " By simply installing the IPFS,"
		},
		{
			"timestamps": {
				"from": "00:08:30,000",
				"to": "00:08:36,000"
			},
			"offsets": {
				"from": 510000,
				"to": 516000
			},
			"text": " demon running embark blockchain and embark IPFS, you -- it"
		},
		{
			"timestamps": {
				"from": "00:08:36,000",
				"to": "00:08:39,000"
			},
			"offsets": {
				"from": 516000,
				"to": 519000
			},
			"text": " will nicely package your app and deploy to IPFS."
		},
		{
			"timestamps": {
				"from": "00:08:39,000",
				"to": "00:08:43,000"
			},
			"offsets": {
				"from": 519000,
				"to": 523000
			},
			"text": " That will be accessible on your local host,"
		},
		{
			"timestamps": {
				"from": "00:08:43,000",
				"to": "00:08:44,000"
			},
			"offsets": {
				"from": 523000,
				"to": 524000
			},
			"text": " 8080."
		},
		{
			"timestamps": {
				"from": "00:08:44,000",
				"to": "00:08:48,000"
			},
			"offsets": {
				"from": 524000,
				"to": 528000
			},
			"text": " So I probably already mentioned that it supports meteor"
		},
		{
			"timestamps": {
				"from": "00:08:48,000",
				"to": "00:08:49,000"
			},
			"offsets": {
				"from": 528000,
				"to": 529000
			},
			"text": " integration."
		},
		{
			"timestamps": {
				"from": "00:08:49,000",
				"to": "00:08:56,000"
			},
			"offsets": {
				"from": 529000,
				"to": 536000
			},
			"text": " So just as you would embark demo, you -- instead of typing"
		},
		{
			"timestamps": {
				"from": "00:08:56,000",
				"to": "00:08:59,000"
			},
			"offsets": {
				"from": 536000,
				"to": 539000
			},
			"text": " \"bark demo\" into your command line, just type in \"embark"
		},
		{
			"timestamps": {
				"from": "00:08:59,000",
				"to": "00:09:02,000"
			},
			"offsets": {
				"from": 539000,
				"to": 542000
			},
			"text": " meteor demo\" and it creates very similar app."
		},
		{
			"timestamps": {
				"from": "00:09:02,000",
				"to": "00:09:08,000"
			},
			"offsets": {
				"from": 542000,
				"to": 548000
			},
			"text": " But in meteor -- that's it for the demo."
		},
		{
			"timestamps": {
				"from": "00:09:08,000",
				"to": "00:09:16,000"
			},
			"offsets": {
				"from": 548000,
				"to": 556000
			},
			"text": " [ Applause ]"
		},
		{
			"timestamps": {
				"from": "00:09:16,000",
				"to": "00:09:22,000"
			},
			"offsets": {
				"from": 556000,
				"to": 562000
			},
			"text": " [ Music ]"
		},
		{
			"timestamps": {
				"from": "00:09:22,000",
				"to": "00:09:24,000"
			},
			"offsets": {
				"from": 562000,
				"to": 564000
			},
			"text": " [buzzing]"
		}
	]
}
