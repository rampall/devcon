{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:05,000"
			},
			"offsets": {
				"from": 0,
				"to": 5000
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:05,000",
				"to": "00:00:14,000"
			},
			"offsets": {
				"from": 5000,
				"to": 14000
			},
			"text": " We worked in a company called Mo,"
		},
		{
			"timestamps": {
				"from": "00:00:14,000",
				"to": "00:00:16,000"
			},
			"offsets": {
				"from": 14000,
				"to": 16000
			},
			"text": " which is like a watching company."
		},
		{
			"timestamps": {
				"from": "00:00:16,000",
				"to": "00:00:23,000"
			},
			"offsets": {
				"from": 16000,
				"to": 23000
			},
			"text": " And we write software, mostly our entire stack."
		},
		{
			"timestamps": {
				"from": "00:00:23,000",
				"to": "00:00:26,000"
			},
			"offsets": {
				"from": 23000,
				"to": 26000
			},
			"text": " It's in Haskell or Pierce Bridge."
		},
		{
			"timestamps": {
				"from": "00:00:26,000",
				"to": "00:00:28,000"
			},
			"offsets": {
				"from": 26000,
				"to": 28000
			},
			"text": " We're playing some functional programmers."
		},
		{
			"timestamps": {
				"from": "00:00:28,000",
				"to": "00:00:33,000"
			},
			"offsets": {
				"from": 28000,
				"to": 33000
			},
			"text": " And we wrote a lot of libraries that you probably don't use."
		},
		{
			"timestamps": {
				"from": "00:00:33,000",
				"to": "00:00:37,000"
			},
			"offsets": {
				"from": 33000,
				"to": 37000
			},
			"text": " In Haskell and Pierce Bridge, we're dealing with Ethereum,"
		},
		{
			"timestamps": {
				"from": "00:00:37,000",
				"to": "00:00:39,000"
			},
			"offsets": {
				"from": 37000,
				"to": 39000
			},
			"text": " specifically."
		},
		{
			"timestamps": {
				"from": "00:00:39,000",
				"to": "00:00:43,000"
			},
			"offsets": {
				"from": 39000,
				"to": 43000
			},
			"text": " Now I work on a different project also for Haskell Vikings"
		},
		{
			"timestamps": {
				"from": "00:00:43,000",
				"to": "00:00:44,000"
			},
			"offsets": {
				"from": 43000,
				"to": 44000
			},
			"text": " to basically--"
		},
		{
			"timestamps": {
				"from": "00:00:44,000",
				"to": "00:00:57,840"
			},
			"offsets": {
				"from": 44000,
				"to": 57840
			},
			"text": " Space"
		},
		{
			"timestamps": {
				"from": "00:00:57,840",
				"to": "00:01:00,840"
			},
			"offsets": {
				"from": 57840,
				"to": 60840
			},
			"text": " So it's a different project basically like Haskell bindings"
		},
		{
			"timestamps": {
				"from": "00:01:00,840",
				"to": "00:01:05,840"
			},
			"offsets": {
				"from": 60840,
				"to": 65840
			},
			"text": " to the tenor and A, C, I, stock and throw call"
		},
		{
			"timestamps": {
				"from": "00:01:05,840",
				"to": "00:01:09,840"
			},
			"offsets": {
				"from": 65840,
				"to": 69840
			},
			"text": " at Haskell SDK for the like, hospitals network."
		},
		{
			"timestamps": {
				"from": "00:01:09,840",
				"to": "00:01:12,840"
			},
			"offsets": {
				"from": 69840,
				"to": 72840
			},
			"text": " That's also part of our work, which in my work,"
		},
		{
			"timestamps": {
				"from": "00:01:12,840",
				"to": "00:01:14,840"
			},
			"offsets": {
				"from": 72840,
				"to": 74840
			},
			"text": " it's not people in the room."
		},
		{
			"timestamps": {
				"from": "00:01:14,840",
				"to": "00:01:16,840"
			},
			"offsets": {
				"from": 74840,
				"to": 76840
			},
			"text": " So that's what we do more or less,"
		},
		{
			"timestamps": {
				"from": "00:01:16,840",
				"to": "00:01:19,840"
			},
			"offsets": {
				"from": 76840,
				"to": 79840
			},
			"text": " and then we talk about trying to finish on time."
		},
		{
			"timestamps": {
				"from": "00:01:19,840",
				"to": "00:01:20,840"
			},
			"offsets": {
				"from": 79840,
				"to": 80840
			},
			"text": " But it's not the time point you can't hear"
		},
		{
			"timestamps": {
				"from": "00:01:20,840",
				"to": "00:01:25,840"
			},
			"offsets": {
				"from": 80840,
				"to": 85840
			},
			"text": " is the back, but try to keep the door closed."
		},
		{
			"timestamps": {
				"from": "00:01:25,840",
				"to": "00:01:29,840"
			},
			"offsets": {
				"from": 85840,
				"to": 89840
			},
			"text": " So, yeah, let's just do most of the work."
		},
		{
			"timestamps": {
				"from": "00:01:29,840",
				"to": "00:01:30,840"
			},
			"offsets": {
				"from": 89840,
				"to": 90840
			},
			"text": " Well, all right."
		},
		{
			"timestamps": {
				"from": "00:01:30,840",
				"to": "00:01:37,840"
			},
			"offsets": {
				"from": 90840,
				"to": 97840
			},
			"text": " So, as Martin said, the presentation is a bit of a blog."
		},
		{
			"timestamps": {
				"from": "00:01:37,840",
				"to": "00:01:40,840"
			},
			"offsets": {
				"from": 97840,
				"to": 100840
			},
			"text": " We have a workshop tomorrow."
		},
		{
			"timestamps": {
				"from": "00:01:40,840",
				"to": "00:01:43,840"
			},
			"offsets": {
				"from": 100840,
				"to": 103840
			},
			"text": " If you're interested in what we're talking about,"
		},
		{
			"timestamps": {
				"from": "00:01:43,840",
				"to": "00:01:47,840"
			},
			"offsets": {
				"from": 103840,
				"to": 107840
			},
			"text": " you get the chance to use libraries then to not keep"
		},
		{
			"timestamps": {
				"from": "00:01:47,840",
				"to": "00:01:51,840"
			},
			"offsets": {
				"from": 107840,
				"to": 111840
			},
			"text": " the specific purpose of bringing people forward."
		},
		{
			"timestamps": {
				"from": "00:01:52,840",
				"to": "00:01:58,840"
			},
			"offsets": {
				"from": 112840,
				"to": 118840
			},
			"text": " Okay, first of all, let's talk about what do we mean"
		},
		{
			"timestamps": {
				"from": "00:01:58,840",
				"to": "00:02:00,840"
			},
			"offsets": {
				"from": 118840,
				"to": 120840
			},
			"text": " by functional programators?"
		},
		{
			"timestamps": {
				"from": "00:02:00,840",
				"to": "00:02:05,840"
			},
			"offsets": {
				"from": 120840,
				"to": 125840
			},
			"text": " Is functional so the more that's going on around a lot?"
		},
		{
			"timestamps": {
				"from": "00:02:05,840",
				"to": "00:02:09,840"
			},
			"offsets": {
				"from": 125840,
				"to": 129840
			},
			"text": " So for us, we basically focus purely functional"
		},
		{
			"timestamps": {
				"from": "00:02:09,840",
				"to": "00:02:13,840"
			},
			"offsets": {
				"from": 129840,
				"to": 133840
			},
			"text": " languages with strong static type."
		},
		{
			"timestamps": {
				"from": "00:02:13,840",
				"to": "00:02:15,840"
			},
			"offsets": {
				"from": 133840,
				"to": 135840
			},
			"text": " What does that mean?"
		},
		{
			"timestamps": {
				"from": "00:02:15,840",
				"to": "00:02:21,840"
			},
			"offsets": {
				"from": 135840,
				"to": 141840
			},
			"text": " So, purity is a concept much like referential transparency"
		},
		{
			"timestamps": {
				"from": "00:02:21,840",
				"to": "00:02:24,840"
			},
			"offsets": {
				"from": 141840,
				"to": 144840
			},
			"text": " means that your computation is actually going to be side effects."
		},
		{
			"timestamps": {
				"from": "00:02:24,840",
				"to": "00:02:26,840"
			},
			"offsets": {
				"from": 144840,
				"to": 146840
			},
			"text": " So think about your computations as equations,"
		},
		{
			"timestamps": {
				"from": "00:02:26,840",
				"to": "00:02:29,840"
			},
			"offsets": {
				"from": 146840,
				"to": 149840
			},
			"text": " like x equals 5 plus 3, whatever,"
		},
		{
			"timestamps": {
				"from": "00:02:29,840",
				"to": "00:02:33,840"
			},
			"offsets": {
				"from": 149840,
				"to": 153840
			},
			"text": " you're not actually performing any operating real world."
		},
		{
			"timestamps": {
				"from": "00:02:33,840",
				"to": "00:02:37,840"
			},
			"offsets": {
				"from": 153840,
				"to": 157840
			},
			"text": " You can manage effects to different kinds of concepts"
		},
		{
			"timestamps": {
				"from": "00:02:37,840",
				"to": "00:02:42,840"
			},
			"offsets": {
				"from": 157840,
				"to": 162840
			},
			"text": " in Haskell and pure script that you talk about monads."
		},
		{
			"timestamps": {
				"from": "00:02:42,840",
				"to": "00:02:45,840"
			},
			"offsets": {
				"from": 162840,
				"to": 165840
			},
			"text": " It's a sort of a pure way to talk about impure programs."
		},
		{
			"timestamps": {
				"from": "00:02:45,840",
				"to": "00:02:50,840"
			},
			"offsets": {
				"from": 165840,
				"to": 170840
			},
			"text": " Then the type system, which in maybe your typical program"
		},
		{
			"timestamps": {
				"from": "00:02:50,840",
				"to": "00:02:53,840"
			},
			"offsets": {
				"from": 170840,
				"to": 173840
			},
			"text": " like this deals with different types of data,"
		},
		{
			"timestamps": {
				"from": "00:02:53,840",
				"to": "00:02:56,840"
			},
			"offsets": {
				"from": 173840,
				"to": 176840
			},
			"text": " strings, integers, pullings and so on."
		},
		{
			"timestamps": {
				"from": "00:02:56,840",
				"to": "00:03:00,840"
			},
			"offsets": {
				"from": 176840,
				"to": 180840
			},
			"text": " The type system and the program that we want to talk about"
		},
		{
			"timestamps": {
				"from": "00:03:00,840",
				"to": "00:03:03,840"
			},
			"offsets": {
				"from": 180840,
				"to": 183840
			},
			"text": " actually are able to release about these effects as well."
		},
		{
			"timestamps": {
				"from": "00:03:03,840",
				"to": "00:03:07,840"
			},
			"offsets": {
				"from": 183840,
				"to": 187840
			},
			"text": " So it prevents you from doing things that deals with the real world"
		},
		{
			"timestamps": {
				"from": "00:03:07,840",
				"to": "00:03:12,840"
			},
			"offsets": {
				"from": 187840,
				"to": 192840
			},
			"text": " and writing something that is almost a computer value."
		},
		{
			"timestamps": {
				"from": "00:03:12,840",
				"to": "00:03:16,840"
			},
			"offsets": {
				"from": 192840,
				"to": 196840
			},
			"text": " Usually what happens when you have type systems like that"
		},
		{
			"timestamps": {
				"from": "00:03:16,840",
				"to": "00:03:19,840"
			},
			"offsets": {
				"from": 196840,
				"to": 199840
			},
			"text": " is that the compiler needs to get through these things together."
		},
		{
			"timestamps": {
				"from": "00:03:19,840",
				"to": "00:03:23,840"
			},
			"offsets": {
				"from": 199840,
				"to": 203840
			},
			"text": " So we try to use that to our benefit,"
		},
		{
			"timestamps": {
				"from": "00:03:23,840",
				"to": "00:03:27,840"
			},
			"offsets": {
				"from": 203840,
				"to": 207840
			},
			"text": " so you have to really advance in that programming capabilities"
		},
		{
			"timestamps": {
				"from": "00:03:27,840",
				"to": "00:03:30,840"
			},
			"offsets": {
				"from": 207840,
				"to": 210840
			},
			"text": " and the libraries that we're interested in."
		},
		{
			"timestamps": {
				"from": "00:03:30,840",
				"to": "00:03:32,840"
			},
			"offsets": {
				"from": 210840,
				"to": 212840
			},
			"text": " And a lot of the libraries that we've been developing"
		},
		{
			"timestamps": {
				"from": "00:03:32,840",
				"to": "00:03:37,840"
			},
			"offsets": {
				"from": 212840,
				"to": 217840
			},
			"text": " utilize that to a large extent."
		},
		{
			"timestamps": {
				"from": "00:03:37,840",
				"to": "00:03:41,840"
			},
			"offsets": {
				"from": 217840,
				"to": 221840
			},
			"text": " So we'll give it the key."
		},
		{
			"timestamps": {
				"from": "00:03:41,840",
				"to": "00:03:45,840"
			},
			"offsets": {
				"from": 221840,
				"to": 225840
			},
			"text": " Basically the kind of things that we're contrasting is here."
		},
		{
			"timestamps": {
				"from": "00:03:45,840",
				"to": "00:03:49,840"
			},
			"offsets": {
				"from": 225840,
				"to": 229840
			},
			"text": " Our widely popular programming language is JavaScript or Go."
		},
		{
			"timestamps": {
				"from": "00:03:49,840",
				"to": "00:03:54,840"
			},
			"offsets": {
				"from": 229840,
				"to": 234840
			},
			"text": " We're kind of like languages that everybody uses in this space."
		},
		{
			"timestamps": {
				"from": "00:03:54,840",
				"to": "00:03:56,840"
			},
			"offsets": {
				"from": 234840,
				"to": 236840
			},
			"text": " People seem to be very productive in those things,"
		},
		{
			"timestamps": {
				"from": "00:03:56,840",
				"to": "00:03:59,840"
			},
			"offsets": {
				"from": 236840,
				"to": 239840
			},
			"text": " so that's your DM then like, that's cool."
		},
		{
			"timestamps": {
				"from": "00:03:59,840",
				"to": "00:04:04,840"
			},
			"offsets": {
				"from": 239840,
				"to": 244840
			},
			"text": " But basically you can't really make an argument that really either"
		},
		{
			"timestamps": {
				"from": "00:04:04,840",
				"to": "00:04:07,840"
			},
			"offsets": {
				"from": 244840,
				"to": 247840
			},
			"text": " is like your particular future thinking or innovative programming language."
		},
		{
			"timestamps": {
				"from": "00:04:07,840",
				"to": "00:04:12,840"
			},
			"offsets": {
				"from": 247840,
				"to": 252840
			},
			"text": " Especially people like Go and it seems like lots of programs are successful"
		},
		{
			"timestamps": {
				"from": "00:04:12,840",
				"to": "00:04:14,840"
			},
			"offsets": {
				"from": 252840,
				"to": 254840
			},
			"text": " but for languages it's about, you know,"
		},
		{
			"timestamps": {
				"from": "00:04:14,840",
				"to": "00:04:17,840"
			},
			"offsets": {
				"from": 254840,
				"to": 257840
			},
			"text": " TISY 2005 knowing or whatever it was,"
		},
		{
			"timestamps": {
				"from": "00:04:17,840",
				"to": "00:04:19,840"
			},
			"offsets": {
				"from": 257840,
				"to": 259840
			},
			"text": " knowing everything we know now."
		},
		{
			"timestamps": {
				"from": "00:04:19,840",
				"to": "00:04:23,840"
			},
			"offsets": {
				"from": 259840,
				"to": 263840
			},
			"text": " They basically just created a job a circuit like '19, '19, '19."
		},
		{
			"timestamps": {
				"from": "00:04:23,840",
				"to": "00:04:27,840"
			},
			"offsets": {
				"from": 263840,
				"to": 267840
			},
			"text": " So it's like you can do things with us, you know, that's cool,"
		},
		{
			"timestamps": {
				"from": "00:04:27,840",
				"to": "00:04:30,840"
			},
			"offsets": {
				"from": 267840,
				"to": 270840
			},
			"text": " and there's like a lot of research in programming language theory"
		},
		{
			"timestamps": {
				"from": "00:04:30,840",
				"to": "00:04:33,840"
			},
			"offsets": {
				"from": 270840,
				"to": 273840
			},
			"text": " that enables kinds of reasons about programming,"
		},
		{
			"timestamps": {
				"from": "00:04:33,840",
				"to": "00:04:36,840"
			},
			"offsets": {
				"from": 273840,
				"to": 276840
			},
			"text": " reasoning about programming that we can do now in 2019 that would not"
		},
		{
			"timestamps": {
				"from": "00:04:36,840",
				"to": "00:04:40,840"
			},
			"offsets": {
				"from": 276840,
				"to": 280840
			},
			"text": " possible in the '19, and that's like what we're trying to do for the release."
		},
		{
			"timestamps": {
				"from": "00:04:40,840",
				"to": "00:04:43,840"
			},
			"offsets": {
				"from": 280840,
				"to": 283840
			},
			"text": " So because like neither one of these others much in terms of like safety,"
		},
		{
			"timestamps": {
				"from": "00:04:43,840",
				"to": "00:04:49,840"
			},
			"offsets": {
				"from": 283840,
				"to": 289840
			},
			"text": " so the ability to statically analyze for behavior performance or possible,"
		},
		{
			"timestamps": {
				"from": "00:04:49,840",
				"to": "00:04:52,840"
			},
			"offsets": {
				"from": 289840,
				"to": 292840
			},
			"text": " whatever, you know, people will focus especially on things like security"
		},
		{
			"timestamps": {
				"from": "00:04:52,840",
				"to": "00:04:57,840"
			},
			"offsets": {
				"from": 292840,
				"to": 297840
			},
			"text": " press in the space and all those things are really difficult to be selected."
		},
		{
			"timestamps": {
				"from": "00:04:57,840",
				"to": "00:05:00,840"
			},
			"offsets": {
				"from": 297840,
				"to": 300840
			},
			"text": " [pause]"
		},
		{
			"timestamps": {
				"from": "00:05:00,840",
				"to": "00:05:07,840"
			},
			"offsets": {
				"from": 300840,
				"to": 307840
			},
			"text": " Oh, and so, yeah, basically these are the libraries that we're talking about right today"
		},
		{
			"timestamps": {
				"from": "00:05:07,840",
				"to": "00:05:11,840"
			},
			"offsets": {
				"from": 307840,
				"to": 311840
			},
			"text": " or like do tomorrow with this other workshop where some of them are related"
		},
		{
			"timestamps": {
				"from": "00:05:11,840",
				"to": "00:05:14,840"
			},
			"offsets": {
				"from": 311840,
				"to": 314840
			},
			"text": " to learning 12 pure scripts which we'll talk about later."
		},
		{
			"timestamps": {
				"from": "00:05:14,840",
				"to": "00:05:18,840"
			},
			"offsets": {
				"from": 314840,
				"to": 318840
			},
			"text": " Basically like the ones, you know, whatever there's a Web3 API"
		},
		{
			"timestamps": {
				"from": "00:05:18,840",
				"to": "00:05:21,840"
			},
			"offsets": {
				"from": 318840,
				"to": 321840
			},
			"text": " similar to whatever, you know, J to swim through your job,"
		},
		{
			"timestamps": {
				"from": "00:05:21,840",
				"to": "00:05:24,840"
			},
			"offsets": {
				"from": 321840,
				"to": 324840
			},
			"text": " or whatever, it has lots of features that those things don't,"
		},
		{
			"timestamps": {
				"from": "00:05:24,840",
				"to": "00:05:27,840"
			},
			"offsets": {
				"from": 324840,
				"to": 327840
			},
			"text": " but that's kind of like the functionality that it covers."
		},
		{
			"timestamps": {
				"from": "00:05:27,840",
				"to": "00:05:32,840"
			},
			"offsets": {
				"from": 327840,
				"to": 332840
			},
			"text": " And then Chantral is like a tool that we have made and has come to the security"
		},
		{
			"timestamps": {
				"from": "00:05:32,840",
				"to": "00:05:37,840"
			},
			"offsets": {
				"from": 332840,
				"to": 337840
			},
			"text": " at this point that is a smart contract employee management"
		},
		{
			"timestamps": {
				"from": "00:05:37,840",
				"to": "00:05:42,840"
			},
			"offsets": {
				"from": 337840,
				"to": 342840
			},
			"text": " and testing tool similar to Truffle, but without all the, you know, nonsense."
		},
		{
			"timestamps": {
				"from": "00:05:42,840",
				"to": "00:05:46,840"
			},
			"offsets": {
				"from": 342840,
				"to": 346840
			},
			"text": " So, and I should also mention that like, okay, then there's also the"
		},
		{
			"timestamps": {
				"from": "00:05:46,840",
				"to": "00:05:48,840"
			},
			"offsets": {
				"from": 346840,
				"to": 348840
			},
			"text": " Haskell libraries which are maintained for this."
		},
		{
			"timestamps": {
				"from": "00:05:48,840",
				"to": "00:05:52,840"
			},
			"offsets": {
				"from": 348840,
				"to": 352840
			},
			"text": " We don't maintain this, but we're, I'm like the largest contributor to that"
		},
		{
			"timestamps": {
				"from": "00:05:52,840",
				"to": "00:05:56,840"
			},
			"offsets": {
				"from": 352840,
				"to": 356840
			},
			"text": " and probably at this point and we run it for, because we're looking for that."
		},
		{
			"timestamps": {
				"from": "00:05:56,840",
				"to": "00:06:01,840"
			},
			"offsets": {
				"from": 356840,
				"to": 361840
			},
			"text": " It's also worth mentioning that we proposed this talk through last year's thing"
		},
		{
			"timestamps": {
				"from": "00:06:01,840",
				"to": "00:06:05,840"
			},
			"offsets": {
				"from": 361840,
				"to": 365840
			},
			"text": " and we were denied because it was considered like French or like the '2' 'V'"
		},
		{
			"timestamps": {
				"from": "00:06:05,840",
				"to": "00:06:09,840"
			},
			"offsets": {
				"from": 365840,
				"to": 369840
			},
			"text": " or whatever, so I don't know if this standard's got lower or the stakes got higher."
		},
		{
			"timestamps": {
				"from": "00:06:09,840",
				"to": "00:06:10,840"
			},
			"offsets": {
				"from": 369840,
				"to": 370840
			},
			"text": " [laughter]"
		},
		{
			"timestamps": {
				"from": "00:06:10,840",
				"to": "00:06:13,840"
			},
			"offsets": {
				"from": 370840,
				"to": 373840
			},
			"text": " None of these things were new, they've been around for over a year,"
		},
		{
			"timestamps": {
				"from": "00:06:13,840",
				"to": "00:06:18,840"
			},
			"offsets": {
				"from": 373840,
				"to": 378840
			},
			"text": " but now we actually got to talk, we actually got, I had to talk about it instead of tonight."
		},
		{
			"timestamps": {
				"from": "00:06:18,840",
				"to": "00:06:22,840"
			},
			"offsets": {
				"from": 378840,
				"to": 382840
			},
			"text": " And yeah, so the ones that are in gold or whatever, those are things that we actually"
		},
		{
			"timestamps": {
				"from": "00:06:22,840",
				"to": "00:06:27,840"
			},
			"offsets": {
				"from": 382840,
				"to": 387840
			},
			"text": " own once it are purple or are more like purple."
		},
		{
			"timestamps": {
				"from": "00:06:27,840",
				"to": "00:06:30,840"
			},
			"offsets": {
				"from": 387840,
				"to": 390840
			},
			"text": " This is not super interesting, we just had a highlight point that we actually did"
		},
		{
			"timestamps": {
				"from": "00:06:30,840",
				"to": "00:06:31,840"
			},
			"offsets": {
				"from": 390840,
				"to": 391840
			},
			"text": " all this stuff last year."
		},
		{
			"timestamps": {
				"from": "00:06:31,840",
				"to": "00:06:36,840"
			},
			"offsets": {
				"from": 391840,
				"to": 396840
			},
			"text": " So, this isn't like your new JS framework, you know, week or whatever that's going to"
		},
		{
			"timestamps": {
				"from": "00:06:36,840",
				"to": "00:06:38,840"
			},
			"offsets": {
				"from": 396840,
				"to": 398840
			},
			"text": " get next week, it's going to get in place."
		},
		{
			"timestamps": {
				"from": "00:06:38,840",
				"to": "00:06:42,840"
			},
			"offsets": {
				"from": 398840,
				"to": 402840
			},
			"text": " And to say is that these libraries are mature and you can use them and we can"
		},
		{
			"timestamps": {
				"from": "00:06:42,840",
				"to": "00:06:46,840"
			},
			"offsets": {
				"from": 402840,
				"to": 406840
			},
			"text": " illustrate that in this workshop tomorrow, but this is not like some new thing"
		},
		{
			"timestamps": {
				"from": "00:06:46,840",
				"to": "00:06:48,840"
			},
			"offsets": {
				"from": 406840,
				"to": 408840
			},
			"text": " and doesn't work or whatever."
		},
		{
			"timestamps": {
				"from": "00:06:48,840",
				"to": "00:06:53,840"
			},
			"offsets": {
				"from": 408840,
				"to": 413840
			},
			"text": " All I wanted to do is skip this in the interest of time, but basically all of this work really started in 2017"
		},
		{
			"timestamps": {
				"from": "00:06:53,840",
				"to": "00:06:57,840"
			},
			"offsets": {
				"from": 413840,
				"to": 417840
			},
			"text": " and more or less like, except for the case of Truffle which happens to upgrade"
		},
		{
			"timestamps": {
				"from": "00:06:57,840",
				"to": "00:07:00,840"
			},
			"offsets": {
				"from": 417840,
				"to": 420840
			},
			"text": " and whatever this like, Truffle decision workplace it,"
		},
		{
			"timestamps": {
				"from": "00:07:00,840",
				"to": "00:07:04,840"
			},
			"offsets": {
				"from": 420840,
				"to": 424840
			},
			"text": " it's kind of all happening contemporaneously like with our growth as a company,"
		},
		{
			"timestamps": {
				"from": "00:07:04,840",
				"to": "00:07:10,840"
			},
			"offsets": {
				"from": 424840,
				"to": 430840
			},
			"text": " like you probably haven't heard of home as a Ethereum company, but we started"
		},
		{
			"timestamps": {
				"from": "00:07:10,840",
				"to": "00:07:14,840"
			},
			"offsets": {
				"from": 430840,
				"to": 434840
			},
			"text": " writing software in 2017 and basically the reason why all this software exists is"
		},
		{
			"timestamps": {
				"from": "00:07:14,840",
				"to": "00:07:19,840"
			},
			"offsets": {
				"from": 434840,
				"to": 439840
			},
			"text": " that we try to use the off the shelf and I put around how to use it and we're"
		},
		{
			"timestamps": {
				"from": "00:07:19,840",
				"to": "00:07:21,840"
			},
			"offsets": {
				"from": 439840,
				"to": 441840
			},
			"text": " like recently smart people."
		},
		{
			"timestamps": {
				"from": "00:07:21,840",
				"to": "00:07:25,840"
			},
			"offsets": {
				"from": 441840,
				"to": 445840
			},
			"text": " So, all of this started to be developed in order to produce our own products and"
		},
		{
			"timestamps": {
				"from": "00:07:25,840",
				"to": "00:07:28,840"
			},
			"offsets": {
				"from": 445840,
				"to": 448840
			},
			"text": " better own applications which today run up in Ethereum."
		},
		{
			"timestamps": {
				"from": "00:07:28,840",
				"to": "00:07:34,840"
			},
			"offsets": {
				"from": 448840,
				"to": 454840
			},
			"text": " I think quite successfully given how many people can be actually working on this"
		},
		{
			"timestamps": {
				"from": "00:07:34,840",
				"to": "00:07:40,840"
			},
			"offsets": {
				"from": 454840,
				"to": 460840
			},
			"text": " and the fact that we don't have like a lot of users, not a lot of"
		},
		{
			"timestamps": {
				"from": "00:07:40,840",
				"to": "00:07:42,840"
			},
			"offsets": {
				"from": 460840,
				"to": 462840
			},
			"text": " cleaners so I think it works."
		},
		{
			"timestamps": {
				"from": "00:07:42,840",
				"to": "00:07:45,840"
			},
			"offsets": {
				"from": 462840,
				"to": 465840
			},
			"text": " I'm just going to skip this."
		},
		{
			"timestamps": {
				"from": "00:07:53,840",
				"to": "00:07:59,840"
			},
			"offsets": {
				"from": 473840,
				"to": 479840
			},
			"text": " So, just before we dive into sort of like more technical details of how these"
		},
		{
			"timestamps": {
				"from": "00:07:59,840",
				"to": "00:08:04,840"
			},
			"offsets": {
				"from": 479840,
				"to": 484840
			},
			"text": " libraries work, I just wanted to get a little bit of motivation for why we think"
		},
		{
			"timestamps": {
				"from": "00:08:04,840",
				"to": "00:08:05,840"
			},
			"offsets": {
				"from": 484840,
				"to": 485840
			},
			"text": " it's important."
		},
		{
			"timestamps": {
				"from": "00:08:05,840",
				"to": "00:08:11,840"
			},
			"offsets": {
				"from": 485840,
				"to": 491840
			},
			"text": " So, Martin showed that we started working on these libraries in 2017 when"
		},
		{
			"timestamps": {
				"from": "00:08:11,840",
				"to": "00:08:17,840"
			},
			"offsets": {
				"from": 491840,
				"to": 497840
			},
			"text": " foam was new and we started developing what's now called our map,"
		},
		{
			"timestamps": {
				"from": "00:08:17,840",
				"to": "00:08:21,840"
			},
			"offsets": {
				"from": 497840,
				"to": 501840
			},
			"text": " back then we called the spatial index and we were faced with, we had a little bit of"
		},
		{
			"timestamps": {
				"from": "00:08:21,840",
				"to": "00:08:26,840"
			},
			"offsets": {
				"from": 501840,
				"to": 506840
			},
			"text": " a hospital blockchain experience that we were faced with having to write a full"
		},
		{
			"timestamps": {
				"from": "00:08:26,840",
				"to": "00:08:30,840"
			},
			"offsets": {
				"from": 506840,
				"to": 510840
			},
			"text": " stack application that's now fairly sophisticated, you might be kind of like"
		},
		{
			"timestamps": {
				"from": "00:08:30,840",
				"to": "00:08:35,840"
			},
			"offsets": {
				"from": 510840,
				"to": 515840
			},
			"text": " Google Maps or .com or whatever, but running on Ethereum and so we've had a"
		},
		{
			"timestamps": {
				"from": "00:08:35,840",
				"to": "00:08:39,840"
			},
			"offsets": {
				"from": 515840,
				"to": 519840
			},
			"text": " couple of years and we back then decided that like it's worth doing the"
		},
		{
			"timestamps": {
				"from": "00:08:39,840",
				"to": "00:08:43,840"
			},
			"offsets": {
				"from": 519840,
				"to": 523840
			},
			"text": " upfront investment to develop these libraries for the front end side as well as"
		},
		{
			"timestamps": {
				"from": "00:08:43,840",
				"to": "00:08:48,840"
			},
			"offsets": {
				"from": 523840,
				"to": 528840
			},
			"text": " the back end instead of using established technologies and I guess the"
		},
		{
			"timestamps": {
				"from": "00:08:48,840",
				"to": "00:08:53,840"
			},
			"offsets": {
				"from": 528840,
				"to": 533840
			},
			"text": " reason for why we're still happy with that and we'd like to invite you to use"
		},
		{
			"timestamps": {
				"from": "00:08:53,840",
				"to": "00:08:58,840"
			},
			"offsets": {
				"from": 533840,
				"to": 538840
			},
			"text": " these tools as well is that we're basically now a small operation, we're like"
		},
		{
			"timestamps": {
				"from": "00:08:58,840",
				"to": "00:09:03,840"
			},
			"offsets": {
				"from": 538840,
				"to": 543840
			},
			"text": " four or five developers working mostly on other things at this point and we have"
		},
		{
			"timestamps": {
				"from": "00:09:03,840",
				"to": "00:09:06,840"
			},
			"offsets": {
				"from": 543840,
				"to": 546840
			},
			"text": " the basically types of deployment."
		},
		{
			"timestamps": {
				"from": "00:09:06,840",
				"to": "00:09:14,840"
			},
			"offsets": {
				"from": 546840,
				"to": 554840
			},
			"text": " So, we're generating code from the solitity code generating all kinds of"
		},
		{
			"timestamps": {
				"from": "00:09:14,840",
				"to": "00:09:19,840"
			},
			"offsets": {
				"from": 554840,
				"to": 559840
			},
			"text": " bindings for both the back end and the front end because we're using these"
		},
		{
			"timestamps": {
				"from": "00:09:19,840",
				"to": "00:09:24,840"
			},
			"offsets": {
				"from": 559840,
				"to": 564840
			},
			"text": " strongly typed languages these bindings are also have types, right? So that means"
		},
		{
			"timestamps": {
				"from": "00:09:24,840",
				"to": "00:09:29,840"
			},
			"offsets": {
				"from": 564840,
				"to": 569840
			},
			"text": " that the compiler will tell us if we change something on one end of the stack and"
		},
		{
			"timestamps": {
				"from": "00:09:29,840",
				"to": "00:09:34,840"
			},
			"offsets": {
				"from": 569840,
				"to": 574840
			},
			"text": " the rest of the stack depends on it, hasn't made a perfect change and because"
		},
		{
			"timestamps": {
				"from": "00:09:34,840",
				"to": "00:09:38,840"
			},
			"offsets": {
				"from": 574840,
				"to": 578840
			},
			"text": " it's not just like matching word by word or counting member organs, it's actually"
		},
		{
			"timestamps": {
				"from": "00:09:38,840",
				"to": "00:09:43,840"
			},
			"offsets": {
				"from": 578840,
				"to": 583840
			},
			"text": " very able to encode a lot of the actual behavior of those functions, we get a lot"
		},
		{
			"timestamps": {
				"from": "00:09:43,840",
				"to": "00:09:48,840"
			},
			"offsets": {
				"from": 583840,
				"to": 588840
			},
			"text": " of safety when deployed and so this, you know, we're not on the camper, we're saying"
		},
		{
			"timestamps": {
				"from": "00:09:48,840",
				"to": "00:09:53,840"
			},
			"offsets": {
				"from": 588840,
				"to": 593840
			},
			"text": " don't write tests anymore but the types, the compiler when type checking or"
		},
		{
			"timestamps": {
				"from": "00:09:53,840",
				"to": "00:10:00,840"
			},
			"offsets": {
				"from": 593840,
				"to": 600840
			},
			"text": " integration effectively eliminates a whole set of tests and so this has served us"
		},
		{
			"timestamps": {
				"from": "00:10:00,840",
				"to": "00:10:06,840"
			},
			"offsets": {
				"from": 600840,
				"to": 606840
			},
			"text": " really well when we're iterating with application. Another point that I don't"
		},
		{
			"timestamps": {
				"from": "00:10:06,840",
				"to": "00:10:11,840"
			},
			"offsets": {
				"from": 606840,
				"to": 611840
			},
			"text": " think we'll get to it to show it here but one of the really beautiful aspects of"
		},
		{
			"timestamps": {
				"from": "00:10:11,840",
				"to": "00:10:17,840"
			},
			"offsets": {
				"from": 611840,
				"to": 617840
			},
			"text": " the Haskell part of this is that our whole API is a tight spot so that means that"
		},
		{
			"timestamps": {
				"from": "00:10:17,840",
				"to": "00:10:22,840"
			},
			"offsets": {
				"from": 617840,
				"to": 622840
			},
			"text": " the compiler, compiler understands the type you can reason about it and so it"
		},
		{
			"timestamps": {
				"from": "00:10:22,840",
				"to": "00:10:27,840"
			},
			"offsets": {
				"from": 622840,
				"to": 627840
			},
			"text": " effectively generates all the policies like most of our bindings, the compiler does"
		},
		{
			"timestamps": {
				"from": "00:10:27,840",
				"to": "00:10:33,840"
			},
			"offsets": {
				"from": 627840,
				"to": 633840
			},
			"text": " that for us so that means that we do get, so we expose our production API in terms of"
		},
		{
			"timestamps": {
				"from": "00:10:33,840",
				"to": "00:10:37,840"
			},
			"offsets": {
				"from": 633840,
				"to": 637840
			},
			"text": " the swagger definition which is like a standard for exposing API, we didn't write"
		},
		{
			"timestamps": {
				"from": "00:10:37,840",
				"to": "00:10:41,840"
			},
			"offsets": {
				"from": 637840,
				"to": 641840
			},
			"text": " that, that's generated by the compiler every time we deploy it, we use that"
		},
		{
			"timestamps": {
				"from": "00:10:41,840",
				"to": "00:10:46,840"
			},
			"offsets": {
				"from": 641840,
				"to": 646840
			},
			"text": " internally but other companies use the same swagger definition to integrate with us, so"
		},
		{
			"timestamps": {
				"from": "00:10:46,840",
				"to": "00:10:54,840"
			},
			"offsets": {
				"from": 646840,
				"to": 654840
			},
			"text": " they have the same level of guarantees that we have ourselves and so recently we've"
		},
		{
			"timestamps": {
				"from": "00:10:54,840",
				"to": "00:10:59,840"
			},
			"offsets": {
				"from": 654840,
				"to": 659840
			},
			"text": " had a couple of sort of great integration happening completely without our"
		},
		{
			"timestamps": {
				"from": "00:10:59,840",
				"to": "00:11:05,840"
			},
			"offsets": {
				"from": 659840,
				"to": 665840
			},
			"text": " app so no like telegram help channels or even bump code really we're just"
		},
		{
			"timestamps": {
				"from": "00:11:05,840",
				"to": "00:11:10,840"
			},
			"offsets": {
				"from": 665840,
				"to": 670840
			},
			"text": " exposing this API and the generated ops and so we've had recently an Android"
		},
		{
			"timestamps": {
				"from": "00:11:10,840",
				"to": "00:11:18,840"
			},
			"offsets": {
				"from": 670840,
				"to": 678840
			},
			"text": " application that knows the safe and uses foam for locating points so you need"
		},
		{
			"timestamps": {
				"from": "00:11:18,840",
				"to": "00:11:22,840"
			},
			"offsets": {
				"from": 678840,
				"to": 682840
			},
			"text": " five different points physically to like recover your wallet, they want some"
		},
		{
			"timestamps": {
				"from": "00:11:22,840",
				"to": "00:11:28,840"
			},
			"offsets": {
				"from": 682840,
				"to": 688840
			},
			"text": " hackathon, there's an upcoming chain link integration that uses cross chains both"
		},
		{
			"timestamps": {
				"from": "00:11:28,840",
				"to": "00:11:36,840"
			},
			"offsets": {
				"from": 688840,
				"to": 696840
			},
			"text": " main and co-bound and sort of bringing a cloud output from our API and actually"
		},
		{
			"timestamps": {
				"from": "00:11:36,840",
				"to": "00:11:41,840"
			},
			"offsets": {
				"from": 696840,
				"to": 701840
			},
			"text": " part of our host we don't have the ability to write applications for every use case so we"
		},
		{
			"timestamps": {
				"from": "00:11:41,840",
				"to": "00:11:46,840"
			},
			"offsets": {
				"from": 701840,
				"to": 706840
			},
			"text": " actually have a user community that builds applications for us to serve our users and"
		},
		{
			"timestamps": {
				"from": "00:11:46,840",
				"to": "00:11:51,840"
			},
			"offsets": {
				"from": 706840,
				"to": 711840
			},
			"text": " again a bit very little support so that's kind of why this tool is all they have in our"
		},
		{
			"timestamps": {
				"from": "00:11:51,840",
				"to": "00:11:58,840"
			},
			"offsets": {
				"from": 711840,
				"to": 718840
			},
			"text": " learning threshold they really pay off once you have it."
		},
		{
			"timestamps": {
				"from": "00:11:58,840",
				"to": "00:12:04,840"
			},
			"offsets": {
				"from": 718840,
				"to": 724840
			},
			"text": " Yeah we can probably skip this or whatever but I will say that like yeah this thing is kind of relevant for some of the work."
		},
		{
			"timestamps": {
				"from": "00:12:04,840",
				"to": "00:12:11,840"
			},
			"offsets": {
				"from": 724840,
				"to": 731840
			},
			"text": " So yeah people you know there's like a you know a solid media hangover and people are kind of like looking at"
		},
		{
			"timestamps": {
				"from": "00:12:11,840",
				"to": "00:12:15,840"
			},
			"offsets": {
				"from": 731840,
				"to": 735840
			},
			"text": " the nice ones for these things I'm talking about like web assembly and there are various"
		},
		{
			"timestamps": {
				"from": "00:12:15,840",
				"to": "00:12:22,840"
			},
			"offsets": {
				"from": 735840,
				"to": 742840
			},
			"text": " states of development on those things you know like or even like in the area of like"
		},
		{
			"timestamps": {
				"from": "00:12:22,840",
				"to": "00:12:26,840"
			},
			"offsets": {
				"from": 742840,
				"to": 746840
			},
			"text": " applications specific watching as people are looking at you know not even having to worry about that"
		},
		{
			"timestamps": {
				"from": "00:12:26,840",
				"to": "00:12:31,840"
			},
			"offsets": {
				"from": 746840,
				"to": 751840
			},
			"text": " that's entirely you know it's like it's a cosmos tournament for saying write your own questions like what you want"
		},
		{
			"timestamps": {
				"from": "00:12:31,840",
				"to": "00:12:37,840"
			},
			"offsets": {
				"from": 751840,
				"to": 757840
			},
			"text": " now that you're given like a thread right of choices it's kind of like well don't make the same mistake"
		},
		{
			"timestamps": {
				"from": "00:12:37,840",
				"to": "00:12:42,840"
			},
			"offsets": {
				"from": 757840,
				"to": 762840
			},
			"text": " twice basically so that's all this is really gonna talk about."
		},
		{
			"timestamps": {
				"from": "00:12:42,840",
				"to": "00:12:46,840"
			},
			"offsets": {
				"from": 762840,
				"to": 766840
			},
			"text": " Also there's like probably some confusion because pure script is not really a part of the language"
		},
		{
			"timestamps": {
				"from": "00:12:46,840",
				"to": "00:12:52,840"
			},
			"offsets": {
				"from": 766840,
				"to": 772840
			},
			"text": " but if you've heard of Haskell which molecular heard of it Haskell is kind of like more of this"
		},
		{
			"timestamps": {
				"from": "00:12:52,840",
				"to": "00:12:57,840"
			},
			"offsets": {
				"from": 772840,
				"to": 777840
			},
			"text": " point means like a family of languages than it does even one specific thing so there are like people talk about"
		},
		{
			"timestamps": {
				"from": "00:12:57,840",
				"to": "00:13:03,840"
			},
			"offsets": {
				"from": 777840,
				"to": 783840
			},
			"text": " a Haskell it just means like a language which has a similar type system up to a certain point and very similar"
		},
		{
			"timestamps": {
				"from": "00:13:03,840",
				"to": "00:13:11,840"
			},
			"offsets": {
				"from": 783840,
				"to": 791840
			},
			"text": " syntax so basically like pure script is an opinionated dialect of Haskell that was created"
		},
		{
			"timestamps": {
				"from": "00:13:11,840",
				"to": "00:13:16,840"
			},
			"offsets": {
				"from": 791840,
				"to": 796840
			},
			"text": " by the first compiler was written in 2013 so like to compare it with other things that people know about like"
		},
		{
			"timestamps": {
				"from": "00:13:16,840",
				"to": "00:13:22,840"
			},
			"offsets": {
				"from": 796840,
				"to": 802840
			},
			"text": " TypeScript or no words are the same like family of functional programming languages but are sorry not TypeScript"
		},
		{
			"timestamps": {
				"from": "00:13:22,840",
				"to": "00:13:29,840"
			},
			"offsets": {
				"from": 802840,
				"to": 809840
			},
			"text": " but now but are comparatively much weaker they're roughly the same age this is not this is also not"
		},
		{
			"timestamps": {
				"from": "00:13:29,840",
				"to": "00:13:36,840"
			},
			"offsets": {
				"from": 809840,
				"to": 816840
			},
			"text": " something like new FAD, the JavaScript framework for this week and basically like the language itself"
		},
		{
			"timestamps": {
				"from": "00:13:36,840",
				"to": "00:13:41,840"
			},
			"offsets": {
				"from": 816840,
				"to": 821840
			},
			"text": " simplifies the sales a lot of concepts from Haskell that were learned over a really long period of time"
		},
		{
			"timestamps": {
				"from": "00:13:41,840",
				"to": "00:13:47,840"
			},
			"offsets": {
				"from": 821840,
				"to": 827840
			},
			"text": " and don't suffer from the kinds of backwards compatibility problems that Haskell has because it's a very old language"
		},
		{
			"timestamps": {
				"from": "00:13:47,840",
				"to": "00:13:54,840"
			},
			"offsets": {
				"from": 827840,
				"to": 834840
			},
			"text": " so lots of things are like done by it like redone and done right the first time and it's actually not even really a language itself"
		},
		{
			"timestamps": {
				"from": "00:13:54,840",
				"to": "00:13:58,840"
			},
			"offsets": {
				"from": 834840,
				"to": 838840
			},
			"text": " it's more like a language specialization that supports like multiple back ends or run types"
		},
		{
			"timestamps": {
				"from": "00:13:58,840",
				"to": "00:14:03,840"
			},
			"offsets": {
				"from": 838840,
				"to": 843840
			},
			"text": " so like the pure script language itself is just a language specification it doesn't specify the run time behavior"
		},
		{
			"timestamps": {
				"from": "00:14:03,840",
				"to": "00:14:10,840"
			},
			"offsets": {
				"from": 843840,
				"to": 850840
			},
			"text": " which means that you can technically write bindings to like the pure script core dump or whatever in any language that you want"
		},
		{
			"timestamps": {
				"from": "00:14:10,840",
				"to": "00:14:13,840"
			},
			"offsets": {
				"from": 850840,
				"to": 853840
			},
			"text": " and the most popular one is JavaScript because it needs to run the browser"
		},
		{
			"timestamps": {
				"from": "00:14:13,840",
				"to": "00:14:20,840"
			},
			"offsets": {
				"from": 853840,
				"to": 860840
			},
			"text": " and the reason why is that most of the pure script core developers were coming from web from like user interface design"
		},
		{
			"timestamps": {
				"from": "00:14:20,840",
				"to": "00:14:26,840"
			},
			"offsets": {
				"from": 860840,
				"to": 866840
			},
			"text": " and they wanted to write frameworks to write web applications in this language"
		},
		{
			"timestamps": {
				"from": "00:14:26,840",
				"to": "00:14:32,840"
			},
			"offsets": {
				"from": 866840,
				"to": 872840
			},
			"text": " but that's why it's the most sophisticated but there are others there's an Erlang one which somehow is the most advanced"
		},
		{
			"timestamps": {
				"from": "00:14:32,840",
				"to": "00:14:37,840"
			},
			"offsets": {
				"from": 872840,
				"to": 877840
			},
			"text": " but there's also the C++ and there's some like experimental work on someone for Go as well"
		},
		{
			"timestamps": {
				"from": "00:14:37,840",
				"to": "00:14:42,840"
			},
			"offsets": {
				"from": 877840,
				"to": 882840
			},
			"text": " so basically what this means is that like if you have like a large Go application in the cloud not now but in the future"
		},
		{
			"timestamps": {
				"from": "00:14:42,840",
				"to": "00:14:49,840"
			},
			"offsets": {
				"from": 882840,
				"to": 889840
			},
			"text": " but today if you have like a C++ application and you wanted to start off loading some of the core parts of the application to a more"
		},
		{
			"timestamps": {
				"from": "00:14:49,840",
				"to": "00:14:57,840"
			},
			"offsets": {
				"from": 889840,
				"to": 897840
			},
			"text": " type heavy language you can write certain parts of this thing in pure script and have it from file and link to a C++ like it earlier face the tool chain"
		},
		{
			"timestamps": {
				"from": "00:14:57,840",
				"to": "00:15:04,840"
			},
			"offsets": {
				"from": 897840,
				"to": 904840
			},
			"text": " [inaudible]"
		},
		{
			"timestamps": {
				"from": "00:15:04,840",
				"to": "00:15:07,840"
			},
			"offsets": {
				"from": 904840,
				"to": 907840
			},
			"text": " yeah I'm actually not sure if I'm over in this"
		},
		{
			"timestamps": {
				"from": "00:15:07,840",
				"to": "00:15:09,840"
			},
			"offsets": {
				"from": 907840,
				"to": 909840
			},
			"text": " oh I see this we're at the bottom of this"
		},
		{
			"timestamps": {
				"from": "00:15:09,840",
				"to": "00:15:10,840"
			},
			"offsets": {
				"from": 909840,
				"to": 910840
			},
			"text": " yeah"
		},
		{
			"timestamps": {
				"from": "00:15:10,840",
				"to": "00:15:16,840"
			},
			"offsets": {
				"from": 910840,
				"to": 916840
			},
			"text": " [inaudible]"
		},
		{
			"timestamps": {
				"from": "00:15:16,840",
				"to": "00:15:20,840"
			},
			"offsets": {
				"from": 916840,
				"to": 920840
			},
			"text": " I see how we're like somewhere in like a three dimensional red slide show right now"
		},
		{
			"timestamps": {
				"from": "00:15:20,840",
				"to": "00:15:23,840"
			},
			"offsets": {
				"from": 920840,
				"to": 923840
			},
			"text": " [laughter]"
		},
		{
			"timestamps": {
				"from": "00:15:23,840",
				"to": "00:15:33,840"
			},
			"offsets": {
				"from": 923840,
				"to": 933840
			},
			"text": " yeah so basically like the present day situation is that like I said all these things are mature for working with the standard stack of Ethereum blockchain"
		},
		{
			"timestamps": {
				"from": "00:15:33,840",
				"to": "00:15:38,840"
			},
			"offsets": {
				"from": 933840,
				"to": 938840
			},
			"text": " with Ethereum blockchain and"
		},
		{
			"timestamps": {
				"from": "00:15:38,840",
				"to": "00:15:44,840"
			},
			"offsets": {
				"from": 938840,
				"to": 944840
			},
			"text": " Solidity or something that produces an ami of the standard type of level we're used to"
		},
		{
			"timestamps": {
				"from": "00:15:44,840",
				"to": "00:15:53,840"
			},
			"offsets": {
				"from": 944840,
				"to": 953840
			},
			"text": " but the chantrell itself is kind of like marriage to Solidity at this point because it integrates soldiers part of this pipeline, build pipeline"
		},
		{
			"timestamps": {
				"from": "00:15:53,840",
				"to": "00:15:59,840"
			},
			"offsets": {
				"from": 953840,
				"to": 959840
			},
			"text": " but you know there's other things you can go in directions there that are kind of more they're newer they're kind of stable like stabilizing"
		},
		{
			"timestamps": {
				"from": "00:15:59,840",
				"to": "00:16:03,840"
			},
			"offsets": {
				"from": 959840,
				"to": 963840
			},
			"text": " but they're not really stable enough for us to really integrate with like this equilibrium support"
		},
		{
			"timestamps": {
				"from": "00:16:03,840",
				"to": "00:16:09,840"
			},
			"offsets": {
				"from": 963840,
				"to": 969840
			},
			"text": " which is like Ethereum package manager kind of like that's not about the short lots of things to do"
		},
		{
			"timestamps": {
				"from": "00:16:09,840",
				"to": "00:16:16,840"
			},
			"offsets": {
				"from": 969840,
				"to": 976840
			},
			"text": " but then there's other things like language other language support like fiber of it or whatever one else is more like"
		},
		{
			"timestamps": {
				"from": "00:16:16,840",
				"to": "00:16:21,840"
			},
			"offsets": {
				"from": 976840,
				"to": 981840
			},
			"text": " you know formality or whatever the case of the being the generates an ami though is a very embarrassing"
		},
		{
			"timestamps": {
				"from": "00:16:21,840",
				"to": "00:16:29,840"
			},
			"offsets": {
				"from": 981840,
				"to": 989840
			},
			"text": " and then here's like a comparative stack diagram in case none of that means any sense to use"
		},
		{
			"timestamps": {
				"from": "00:16:29,840",
				"to": "00:16:34,840"
			},
			"offsets": {
				"from": 989840,
				"to": 994840
			},
			"text": " so basically like on the left hand side you have like your kind of traditional stack that you know consensus"
		},
		{
			"timestamps": {
				"from": "00:16:34,840",
				"to": "00:16:41,840"
			},
			"offsets": {
				"from": 994840,
				"to": 1001840
			},
			"text": " you know that you kind of like a lot of like the work that consensus did in editing and now it's kind of like offshade shoots to other companies"
		},
		{
			"timestamps": {
				"from": "00:16:41,840",
				"to": "00:16:46,840"
			},
			"offsets": {
				"from": 1001840,
				"to": 1006840
			},
			"text": " but you know things like test RPC or like ganache or"
		},
		{
			"timestamps": {
				"from": "00:16:46,840",
				"to": "00:16:50,840"
			},
			"offsets": {
				"from": 1006840,
				"to": 1010840
			},
			"text": " going to be the same product because it's quite your truffle"
		},
		{
			"timestamps": {
				"from": "00:16:50,840",
				"to": "00:16:54,840"
			},
			"offsets": {
				"from": 1010840,
				"to": 1014840
			},
			"text": " but me and all of it is consumed by like one project sitting sorry"
		},
		{
			"timestamps": {
				"from": "00:16:54,840",
				"to": "00:17:00,840"
			},
			"offsets": {
				"from": 1014840,
				"to": 1020840
			},
			"text": " you know those kinds of like fake Ethereum layers or maybe a real Ethereum layer you know the Solidity compiler went through GIS truffle"
		},
		{
			"timestamps": {
				"from": "00:17:00,840",
				"to": "00:17:05,840"
			},
			"offsets": {
				"from": 1020840,
				"to": 1025840
			},
			"text": " and then you built all of your applications on top of that what we're advocating for is more on the right hand side"
		},
		{
			"timestamps": {
				"from": "00:17:05,840",
				"to": "00:17:12,840"
			},
			"offsets": {
				"from": 1025840,
				"to": 1032840
			},
			"text": " so there's like Ethereum and click the inches like our version of some kind of test RPC is effectively like revenue simplified"
		},
		{
			"timestamps": {
				"from": "00:17:12,840",
				"to": "00:17:19,840"
			},
			"offsets": {
				"from": 1032840,
				"to": 1039840
			},
			"text": " Docker container that runs a real Ethereum node but in a timeline and they expect to run unit tests and stuff against"
		},
		{
			"timestamps": {
				"from": "00:17:19,840",
				"to": "00:17:27,840"
			},
			"offsets": {
				"from": 1039840,
				"to": 1047840
			},
			"text": " here's web free Solidity compiler chantrell as well your adapt development so you can use slides for your television"
		},
		{
			"timestamps": {
				"from": "00:17:27,840",
				"to": "00:17:35,840"
			},
			"offsets": {
				"from": 1047840,
				"to": 1055840
			},
			"text": " so like that's part of the talk basically giving some examples of what the stuff looks like"
		},
		{
			"timestamps": {
				"from": "00:17:35,840",
				"to": "00:17:42,840"
			},
			"offsets": {
				"from": 1055840,
				"to": 1062840
			},
			"text": " and you know here is like for us you know it's like yes and fire life for some definition in the word simple fine because"
		},
		{
			"timestamps": {
				"from": "00:17:42,840",
				"to": "00:17:49,840"
			},
			"offsets": {
				"from": 1062840,
				"to": 1069840
			},
			"text": " there's like a pretty steep learning curve starting you know how to do these things but you know at some point your life gets exponentially simpler"
		},
		{
			"timestamps": {
				"from": "00:17:49,840",
				"to": "00:18:00,840"
			},
			"offsets": {
				"from": 1069840,
				"to": 1080840
			},
			"text": " it's just I don't know how I'm going to take for you individually but you kind of like yeah well basically like I just want to talk for a second"
		},
		{
			"timestamps": {
				"from": "00:18:00,840",
				"to": "00:18:04,840"
			},
			"offsets": {
				"from": 1080840,
				"to": 1084840
			},
			"text": " yeah this is kind of like more in depth than like what we were doing"
		},
		{
			"timestamps": {
				"from": "00:18:04,840",
				"to": "00:18:09,840"
			},
			"offsets": {
				"from": 1084840,
				"to": 1089840
			},
			"text": " this is more like an in-depth section of what we were talking about earlier by like some of these more concepts in like functional programming"
		},
		{
			"timestamps": {
				"from": "00:18:09,840",
				"to": "00:18:15,840"
			},
			"offsets": {
				"from": 1089840,
				"to": 1095840
			},
			"text": " illustrated through these libraries so again like period like there's this notion of purity it means they're just separate"
		},
		{
			"timestamps": {
				"from": "00:18:15,840",
				"to": "00:18:22,840"
			},
			"offsets": {
				"from": 1095840,
				"to": 1102840
			},
			"text": " there's something like a separation of time system between what's called like a factual computation or stuff that has like side effects or micro exceptions"
		},
		{
			"timestamps": {
				"from": "00:18:22,840",
				"to": "00:18:31,840"
			},
			"offsets": {
				"from": 1102840,
				"to": 1111840
			},
			"text": " or whatever it's a list of things you know like like code X like coming to and from bytes you know or byte strings whatever has the possibility for like decoding errors"
		},
		{
			"timestamps": {
				"from": "00:18:31,840",
				"to": "00:18:35,840"
			},
			"offsets": {
				"from": 1111840,
				"to": 1115840
			},
			"text": " and what happens when you have those to how far they bubble up and how much do you handle them"
		},
		{
			"timestamps": {
				"from": "00:18:35,840",
				"to": "00:18:40,840"
			},
			"offsets": {
				"from": 1115840,
				"to": 1120840
			},
			"text": " that's the kind of side effect that's like more pure in the sense that it didn't happen because of like network failure and something that just"
		},
		{
			"timestamps": {
				"from": "00:18:40,840",
				"to": "00:18:45,840"
			},
			"offsets": {
				"from": 1120840,
				"to": 1125840
			},
			"text": " you're programmed through an exception in some way it's not what you have to do with it"
		},
		{
			"timestamps": {
				"from": "00:18:45,840",
				"to": "00:18:53,840"
			},
			"offsets": {
				"from": 1125840,
				"to": 1133840
			},
			"text": " throwing other kinds of runtime exceptions or indicating errors that happen under coverable errors such as like database failures or API call failures"
		},
		{
			"timestamps": {
				"from": "00:18:53,840",
				"to": "00:18:59,840"
			},
			"offsets": {
				"from": 1133840,
				"to": 1139840
			},
			"text": " but also you know basically like improperly formatted data exceptions etc"
		},
		{
			"timestamps": {
				"from": "00:18:59,840",
				"to": "00:19:07,840"
			},
			"offsets": {
				"from": 1139840,
				"to": 1147840
			},
			"text": " also like invoking a web 3 or another network all these are all things that we need by like side effects because you communicate in that sense you communicate somehow in the real world"
		},
		{
			"timestamps": {
				"from": "00:19:07,840",
				"to": "00:19:14,840"
			},
			"offsets": {
				"from": 1147840,
				"to": 1154840
			},
			"text": " and you actually created some side effects such that if you made the same call again you would get different results depending on what you just did"
		},
		{
			"timestamps": {
				"from": "00:19:14,840",
				"to": "00:19:27,840"
			},
			"offsets": {
				"from": 1154840,
				"to": 1167840
			},
			"text": " examples of pure functions are like more kind of like you know they're everywhere but they're like somehow more difficult to come up like interesting examples because they're kind of you know situation specific"
		},
		{
			"timestamps": {
				"from": "00:19:27,840",
				"to": "00:19:34,840"
			},
			"offsets": {
				"from": 1167840,
				"to": 1174840
			},
			"text": " but like data transformations that can't fail like sorting a list for example is a pure computation because there's really nothing"
		},
		{
			"timestamps": {
				"from": "00:19:34,840",
				"to": "00:19:40,840"
			},
			"offsets": {
				"from": 1174840,
				"to": 1180840
			},
			"text": " why do you need to ask if you know the internet is sort of a bit of a sort of algorithm and it works"
		},
		{
			"timestamps": {
				"from": "00:19:40,840",
				"to": "00:19:48,840"
			},
			"offsets": {
				"from": 1180840,
				"to": 1188840
			},
			"text": " there's no unless you ask a stack over and the answer is like yeah you basically there's no way that there's no way that I can throw an exception"
		},
		{
			"timestamps": {
				"from": "00:19:48,840",
				"to": "00:19:53,840"
			},
			"offsets": {
				"from": 1188840,
				"to": 1193840
			},
			"text": " there's no way that I can call the calls for network failure there's no way that needs to be read or write from disk"
		},
		{
			"timestamps": {
				"from": "00:19:53,840",
				"to": "00:20:00,840"
			},
			"offsets": {
				"from": 1193840,
				"to": 1200840
			},
			"text": " the sorting algorithm itself is a pure data transformation from a list to a list for an example of like a pure function"
		},
		{
			"timestamps": {
				"from": "00:20:00,840",
				"to": "00:20:06,840"
			},
			"offsets": {
				"from": 1200840,
				"to": 1206840
			},
			"text": " or other like mathematical functions or operations that just basically stuff that can't possibly fail unless it's implemented wrong"
		},
		{
			"timestamps": {
				"from": "00:20:06,840",
				"to": "00:20:10,840"
			},
			"offsets": {
				"from": 1206840,
				"to": 1210840
			},
			"text": " but like there's no like random reason why it might fail"
		},
		{
			"timestamps": {
				"from": "00:20:10,840",
				"to": "00:20:22,840"
			},
			"offsets": {
				"from": 1210840,
				"to": 1222840
			},
			"text": " so like here's you know basically like starting to get into something with some of the surplus like just as like a you know ground like a common framework here like we can talk about you know private code looking private keys"
		},
		{
			"timestamps": {
				"from": "00:20:22,840",
				"to": "00:20:32,840"
			},
			"offsets": {
				"from": 1222840,
				"to": 1232840
			},
			"text": " and if you use a certain signature scheme called DSA on this particular curve people who afford to love enough levels and probably come across this"
		},
		{
			"timestamps": {
				"from": "00:20:32,840",
				"to": "00:20:41,840"
			},
			"offsets": {
				"from": 1232840,
				"to": 1241840
			},
			"text": " private key uniquely determines the public key in this framework in an address like the typical theorem address that we all talk about all the time in space"
		},
		{
			"timestamps": {
				"from": "00:20:41,840",
				"to": "00:20:48,840"
			},
			"offsets": {
				"from": 1241840,
				"to": 1248840
			},
			"text": " just like the last on the bytes of the half of the public cluster so like this is just a common framework to say that like these are the things that you can actually talk about in these"
		},
		{
			"timestamps": {
				"from": "00:20:48,840",
				"to": "00:21:02,840"
			},
			"offsets": {
				"from": 1248840,
				"to": 1262840
			},
			"text": " are probably difficult to see from the back so I try to try to do it here but like anybody you know this is basically like kind of like the parts where you know by the types of by using the types in this way you're best building a universal things you can talk about"
		},
		{
			"timestamps": {
				"from": "00:21:02,840",
				"to": "00:21:06,840"
			},
			"offsets": {
				"from": 1262840,
				"to": 1266840
			},
			"text": " so like there's private keys there's public keys in their addresses or whatever"
		},
		{
			"timestamps": {
				"from": "00:21:06,840",
				"to": "00:21:16,840"
			},
			"offsets": {
				"from": 1266840,
				"to": 1276840
			},
			"text": " one of these things at a low level they're like ice rings and forced everything at some point in the ice cream but the point is to like basically build up instructions like to do whatever language so that you know you can't confuse things like these"
		},
		{
			"timestamps": {
				"from": "00:21:16,840",
				"to": "00:21:27,840"
			},
			"offsets": {
				"from": 1276840,
				"to": 1287840
			},
			"text": " private keys even though they both refer to ice rings they're basically trying to like abstract your way like the low level things you can talk about the high level things that never play in the state of your enemies"
		},
		{
			"timestamps": {
				"from": "00:21:27,840",
				"to": "00:21:36,840"
			},
			"offsets": {
				"from": 1287840,
				"to": 1296840
			},
			"text": " and then I'd say whatever it's a hash result so it could be like an x it's usually an x string or whatever it's a certain kind of code of ice ring but it could also be whatever"
		},
		{
			"timestamps": {
				"from": "00:21:36,840",
				"to": "00:21:45,840"
			},
			"offsets": {
				"from": 1296840,
				"to": 1305840
			},
			"text": " so like the example of purity for example here like these are kind of boring functions or whatever but these are examples of different functions so these are the high level functions"
		},
		{
			"timestamps": {
				"from": "00:21:45,840",
				"to": "00:21:56,840"
			},
			"offsets": {
				"from": 1305840,
				"to": 1316840
			},
			"text": " basically a way to like unwrap things so or to you know basically to take a public key and produce a x string there's pretty much no way that I can fail because you're taking a hash result it's not a computation that fails"
		},
		{
			"timestamps": {
				"from": "00:21:56,840",
				"to": "00:22:09,840"
			},
			"offsets": {
				"from": 1316840,
				"to": 1329840
			},
			"text": " you can basically you can ask for like how to get them you know how to make a private sorry a whatever how to how to make a public key from a private key that's something that again based on the description of the museum in the last site"
		},
		{
			"timestamps": {
				"from": "00:22:09,840",
				"to": "00:22:20,840"
			},
			"offsets": {
				"from": 1329840,
				"to": 1340840
			},
			"text": " actually taking slices or whatever because you know the hashes of size you know that the slice won't fail because it's pure computations these are kind of boring right these are the ones that are in some sense"
		},
		{
			"timestamps": {
				"from": "00:22:20,840",
				"to": "00:22:34,840"
			},
			"offsets": {
				"from": 1340840,
				"to": 1354840
			},
			"text": " effectful right because like is every x string or is every vice during your x string whenever correspond to a public key probably not if it's not 20 bytes long it doesn't so there's like a potential to fail here which is encapsulated in something called like a main or option type"
		},
		{
			"timestamps": {
				"from": "00:22:34,840",
				"to": "00:22:36,840"
			},
			"offsets": {
				"from": 1354840,
				"to": 1356840
			},
			"text": " or a"
		},
		{
			"timestamps": {
				"from": "00:22:36,840",
				"to": "00:22:38,840"
			},
			"offsets": {
				"from": 1356840,
				"to": 1358840
			},
			"text": " roster type"
		},
		{
			"timestamps": {
				"from": "00:22:38,840",
				"to": "00:22:54,840"
			},
			"offsets": {
				"from": 1358840,
				"to": 1374840
			},
			"text": " can you put anything in any x string become a private key basically any number so there are cases where there's no can any add any x string correspond to address no it has to be a certain number of bias one"
		},
		{
			"timestamps": {
				"from": "00:22:54,840",
				"to": "00:23:06,840"
			},
			"offsets": {
				"from": 1374840,
				"to": 1386840
			},
			"text": " here's an example of like you know whatever encoding you know what I say like encoding certain options these are like effectful or not pure it's because basically like you look at this like yeah okay a bi encoding"
		},
		{
			"timestamps": {
				"from": "00:23:06,840",
				"to": "00:23:20,840"
			},
			"offsets": {
				"from": 1386840,
				"to": 1400840
			},
			"text": " there's a specification somewhere if you read the docs how do you talk how do you encode data that can be read by if you're smart contracted through it it's through a code x schema called a bi or something but has you in a name at all but you know basically"
		},
		{
			"timestamps": {
				"from": "00:23:20,840",
				"to": "00:23:33,840"
			},
			"offsets": {
				"from": 1400840,
				"to": 1413840
			},
			"text": " reading data type that you should be able to communicate across a contract boundary line there should be a way to turn it into some like bytes string or x string and similarly like if you wanted to code like a tool of you know a solidity"
		},
		{
			"timestamps": {
				"from": "00:23:33,840",
				"to": "00:23:46,840"
			},
			"offsets": {
				"from": 1413840,
				"to": 1426840
			},
			"text": " if you want to decode like a tool of ebm types need some way to parse hexagons into those things so this is like basically like this is a language specific idea that like you know there's some for some types out there we can code them and for some types we can do that"
		},
		{
			"timestamps": {
				"from": "00:23:46,840",
				"to": "00:24:02,840"
			},
			"offsets": {
				"from": 1426840,
				"to": 1442840
			},
			"text": " and ideally those are the same right you should be able to decode it but then like here's this idea you know like okay we have like an x string we want to parse it into something that has a particular type and we're making a constraint on this particular type that somewhere you have to find code x for this thing"
		},
		{
			"timestamps": {
				"from": "00:24:02,840",
				"to": "00:24:21,840"
			},
			"offsets": {
				"from": 1442840,
				"to": 1461840
			},
			"text": " this still might fail because like it doesn't matter that the thing has the decode instance the problem is that the thing that you're you have in hand this broad byte string might be coming from somewhere else where you it does it's not long enough or it doesn't correspond in some ways but then you're trying to decode because you made mistakes somewhere so in this second this"
		},
		{
			"timestamps": {
				"from": "00:24:21,840",
				"to": "00:24:36,840"
			},
			"offsets": {
				"from": 1461840,
				"to": 1476840
			},
			"text": " sense like this is an impure computation because it might produce the value that you're looking for it might also produce a parse error instead that you're telling you basically what we call it this is just basically saying what I just said which probably is"
		},
		{
			"timestamps": {
				"from": "00:24:36,840",
				"to": "00:25:05,840"
			},
			"offsets": {
				"from": 1476840,
				"to": 1505840
			},
			"text": " what we say is like this last computation that takes it takes a x string and runs it into either something of type parse error or the entire you're looking for it's like basically you can think about this to like resolve the effects at some point like all the effects have to come out at the end of the day the program has to type which is I/O if you get every program has this type of history of mankind and at the end of the day all of your effects have to resolve to some some basic"
		},
		{
			"timestamps": {
				"from": "00:25:05,840",
				"to": "00:25:19,840"
			},
			"offsets": {
				"from": 1505840,
				"to": 1519840
			},
			"text": " thing that the program can run it and as your program evolves as your program is like coming down the way you're basically constantly resolving effects kind of like simplifying simple things at the end of the day you end up with the one type of program system to run"
		},
		{
			"timestamps": {
				"from": "00:25:19,840",
				"to": "00:25:19,840"
			},
			"offsets": {
				"from": 1519840,
				"to": 1519840
			},
			"text": " so all of these effects systems like whether it be like an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an error in an"
		},
		{
			"timestamps": {
				"from": "00:25:19,840",
				"to": "00:25:38,840"
			},
			"offsets": {
				"from": 1519840,
				"to": 1538840
			},
			"text": " all of these effects systems like whether it be like an error in that system or a network effect system they all have to resolve today and this is part of like programming styles and it's choosing where you want to resolve it"
		},
		{
			"timestamps": {
				"from": "00:25:38,840",
				"to": "00:25:49,840"
			},
			"offsets": {
				"from": 1538840,
				"to": 1549840
			},
			"text": " so basically like you know as a specific example like this is a specific example of like this one"
		},
		{
			"timestamps": {
				"from": "00:25:49,840",
				"to": "00:25:57,840"
			},
			"offsets": {
				"from": 1549840,
				"to": 1557840
			},
			"text": " a place where this can get interesting is like okay yeah like addresses is it addresses and UVM type you can decode this if you have you have a"
		},
		{
			"timestamps": {
				"from": "00:25:57,840",
				"to": "00:26:10,840"
			},
			"offsets": {
				"from": 1557840,
				"to": 1570840
			},
			"text": " line string of a certain length you can decode it so basically like throw away the first 12 bytes or whatever take or take the last 20 bytes and try to basically just figure out if you have the right"
		},
		{
			"timestamps": {
				"from": "00:26:10,840",
				"to": "00:26:16,840"
			},
			"offsets": {
				"from": 1570840,
				"to": 1576840
			},
			"text": " sorry if you can make an address from these last 20 bytes then it should be good otherwise it should fail"
		},
		{
			"timestamps": {
				"from": "00:26:16,840",
				"to": "00:26:32,840"
			},
			"offsets": {
				"from": 1576840,
				"to": 1592840
			},
			"text": " I think this last one is maybe I did use my answer this might have been there's no way this can fail basically this is basically saying you like take the first 20 take the first 12 bytes and take the remaining 20 bytes and the only way this can fail is it does take fails or this take fails"
		},
		{
			"timestamps": {
				"from": "00:26:32,840",
				"to": "00:26:45,840"
			},
			"offsets": {
				"from": 1592840,
				"to": 1605840
			},
			"text": " and what that means is a thing you had so it wasn't long enough that's all this is saying okay cool so you can decode addresses from types or whatever that's pretty cool but like what if you know to do something that's like a little more complicated for example like in the EVM you can do something like that"
		},
		{
			"timestamps": {
				"from": "00:26:45,840",
				"to": "00:27:14,840"
			},
			"offsets": {
				"from": 1605840,
				"to": 1634840
			},
			"text": " in the EVM you also have this notion of like size to race so like you have a precise array let's say it's like a tuple of addresses right like event types of some sort of one like this is something like for example everybody's favorite event is probably the transfer event that results in your address getting more money or whatever and that's effectively like a free tuple right of like well there's two addresses there and then there's like you know whatever like a Uint in there somewhere"
		},
		{
			"timestamps": {
				"from": "00:27:14,840",
				"to": "00:27:43,840"
			},
			"offsets": {
				"from": 1634840,
				"to": 1663840
			},
			"text": " but in this sense like there's like a notion of like it also makes sense to speak about like a vector or like a vector of addresses which is like a list of addresses of a predefined link and like okay so if you can somehow communicate the predefined link to the program that you're writing it you can basically reason about it and say like okay like the only way that this thing can fail in parsing or whatever is if sorry I'll just sit down so if you're looking at like a vector"
		},
		{
			"timestamps": {
				"from": "00:27:43,840",
				"to": "00:28:01,840"
			},
			"offsets": {
				"from": 1663840,
				"to": 1681840
			},
			"text": " a predefined link to this in here of certain type A you can decode into this thing basically what you're telling what you're what you can success with decoded it is what you're telling the program is like no matter what at this point I know that this thing here is a vector of a certain life"
		},
		{
			"timestamps": {
				"from": "00:28:01,840",
				"to": "00:28:12,840"
			},
			"offsets": {
				"from": 1681840,
				"to": 1692840
			},
			"text": " you don't have to worry again about like checking the size of this thing like you pass it off to a different function that function also will know the length of this vector because it's encoded in the types of things"
		},
		{
			"timestamps": {
				"from": "00:28:12,840",
				"to": "00:28:33,840"
			},
			"offsets": {
				"from": 1692840,
				"to": 1713840
			},
			"text": " so if you can build that into like the codecs or whatever and basically what it means is that after you're able to do that do you code information from the EDM you have enough information about this in this particular case this vector so that you'll never get it when you're adding bounds and you try to do access like it's a third argument because you know that in order to try to access the third argument"
		},
		{
			"timestamps": {
				"from": "00:28:33,840",
				"to": "00:28:40,840"
			},
			"offsets": {
				"from": 1713840,
				"to": 1720840
			},
			"text": " this vector has a size of size of this thing like you will get a I will show you an example of this you will get a compile time error if you try to access something which is not there so rather than like trying to check for this everywhere try to throw some exception in case it didn't happen what you would say that happening is that like every part of your program will now be a insane it will know that this vector has to be"
		},
		{
			"timestamps": {
				"from": "00:28:40,840",
				"to": "00:29:02,840"
			},
			"offsets": {
				"from": 1720840,
				"to": 1742840
			},
			"text": " it seems like a stupid thing but then you know it is a stupid thing but then once you realize how to do this you can do it like more and more and more about this"
		},
		{
			"timestamps": {
				"from": "00:29:02,840",
				"to": "00:29:31,840"
			},
			"offsets": {
				"from": 1742840,
				"to": 1771840
			},
			"text": " this is a particular example of what I'm talking about you know statically sized vectors if you do enough like little level stuff with solidity you know how these things are encoded or whatever the first word is like the length of the thing that you're looking at and then it's followed by just a concavolution of all the arguments so I can have this link this is a you know you can't read this in the back probably but this is just the number two followed by two addresses and you'd like to be able to do that"
		},
		{
			"timestamps": {
				"from": "00:29:31,840",
				"to": "00:29:48,840"
			},
			"offsets": {
				"from": 1771840,
				"to": 1788840
			},
			"text": " and you'd like to parse this into a vector of length two this is like some type level language that is very specific to like the library that we use but basically what this is going to do is try to turn this extra into either a parse error or a vector of length two of type address and after that"
		},
		{
			"timestamps": {
				"from": "00:29:48,840",
				"to": "00:30:17,840"
			},
			"offsets": {
				"from": 1788840,
				"to": 1817840
			},
			"text": " and after that forever like you can't for example if you can't fail in this last case when you try to take the first coordinate of this array you never fail so I understand yeah so maybe the intuition here is a little bit like so when you're typically in like an inherited language or language less sophisticated type language every kind of operation you end up doing something important you'll have like a lot of it's there and they kind of like all end up at the same place because you're doing something you can't think about it"
		},
		{
			"timestamps": {
				"from": "00:30:17,840",
				"to": "00:30:33,840"
			},
			"offsets": {
				"from": 1817840,
				"to": 1833840
			},
			"text": " and doing something you can't write about whatever was coming before carry the certainty of that information at that point in your code whereas like typically by composing a lot of interactions in which the guarantees of the data is encoded in a practice way"
		},
		{
			"timestamps": {
				"from": "00:30:33,840",
				"to": "00:30:44,840"
			},
			"offsets": {
				"from": 1833840,
				"to": 1844840
			},
			"text": " you basically don't see any of these if statements or assertions in your code itself they're all packed into the type and then there's sort of the corresponding parser or whatever is for it"
		},
		{
			"timestamps": {
				"from": "00:30:44,840",
				"to": "00:30:59,840"
			},
			"offsets": {
				"from": 1844840,
				"to": 1859840
			},
			"text": " so when you're looking at an actual application code you don't see any of these like oh let me just make sure right here that I didn't like mess up all gone and it's in this sort of like places instead so that's kind of me with the intuition"
		},
		{
			"timestamps": {
				"from": "00:30:59,840",
				"to": "00:31:12,840"
			},
			"offsets": {
				"from": 1859840,
				"to": 1872840
			},
			"text": " yeah totally and then you know for going back to the effectful system for like networked computations so we previously covered just things that are like basically handling errors or exceptions or whatever"
		},
		{
			"timestamps": {
				"from": "00:31:12,840",
				"to": "00:31:28,840"
			},
			"offsets": {
				"from": 1872840,
				"to": 1888840
			},
			"text": " when you know if you're able to encapsulate like network calls particularly in context of theory whatever inside of this effect system what it kind of guarantees is that like you can't take for granted that if you run you know a computation in one place that you would get the same result as if you tried to run it"
		},
		{
			"timestamps": {
				"from": "00:31:28,840",
				"to": "00:31:35,020"
			},
			"offsets": {
				"from": 1888840,
				"to": 1895020
			},
			"text": " so what it's saying is that like where are you where you call where you make a"
		},
		{
			"timestamps": {
				"from": "00:31:35,020",
				"to": "00:31:45,840"
			},
			"offsets": {
				"from": 1895020,
				"to": 1905840
			},
			"text": " effectful calls can change the code it comes after it and so you can't just like make them where you want you need to have them sequenced in a certain way if you don't you will get a tight barrier your program will never run because it can't be applied"
		},
		{
			"timestamps": {
				"from": "00:31:45,840",
				"to": "00:31:56,840"
			},
			"offsets": {
				"from": 1905840,
				"to": 1916840
			},
			"text": " so for example like whatever there's like three effect which is in this library which manages all of the effectful computations that run against the theory of the problem"
		},
		{
			"timestamps": {
				"from": "00:31:56,840",
				"to": "00:32:23,840"
			},
			"offsets": {
				"from": 1916840,
				"to": 1943840
			},
			"text": " and there is a really really big difference between a value of type a and a value of type whatever three of a and basically like understanding this difference or at least getting used to this kind of the basis for everything that happens here so I can't tell you how to understand it but I can tell you that if you understand the difference between having a value of type address and having a type of value type with three of interests these are very very different things I can explain it to you all I can do to show you examples"
		},
		{
			"timestamps": {
				"from": "00:32:23,840",
				"to": "00:32:43,840"
			},
			"offsets": {
				"from": 1943840,
				"to": 1963840
			},
			"text": " this is an example which unfortunately is going to be really hard to read for those in the back but here's an example for test suite or whatever so here I have in highlighted so here I have highlighted all of the pure computations here which are effectively a series of flat bindings so basically like variable bindings and making the size integers and things"
		},
		{
			"timestamps": {
				"from": "00:32:43,840",
				"to": "00:33:09,840"
			},
			"offsets": {
				"from": 1963840,
				"to": 1989840
			},
			"text": " these are the things that are not effective and then actually for example this is a set up for context this is a set up to basically a new RC20 token call here is like the effectful computations are highlighted here basically it's a transfer so when you want to transfer tokens that is an effect when you do that it whether it succeeds or fails the world is forever changed because"
		},
		{
			"timestamps": {
				"from": "00:33:09,840",
				"to": "00:33:39,840"
			},
			"offsets": {
				"from": 1989840,
				"to": 2019840
			},
			"text": " you have to have a problem with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of the things that you have to do with all of"
		},
		{
			"timestamps": {
				"from": "00:33:39,840",
				"to": "00:34:09,840"
			},
			"offsets": {
				"from": 2019840,
				"to": 2049840
			},
			"text": " we're going to look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this and look at this"
		},
		{
			"timestamps": {
				"from": "00:34:09,840",
				"to": "00:34:37,840"
			},
			"offsets": {
				"from": 2049840,
				"to": 2077840
			},
			"text": " there are certain places where you're allowed to find a variable to the result of an effect and it can't be just like in a simple assertion statement like here where I bind like the recipient of this token is going to be the null address that's cool I can do that because there's no effect there's no effect here but at some point if I wanted to take the result of this transfer like the data button to from an fountain buying that to variable to use for later computation I have to do that inside of some type effects"
		},
		{
			"timestamps": {
				"from": "00:34:37,840",
				"to": "00:34:51,840"
			},
			"offsets": {
				"from": 2077840,
				"to": 2091840
			},
			"text": " but when you're saying that you insert what really like actually cause it to happen is that strict over there or is it still it will still be like lazy there and it will be something down the line will force the computation"
		},
		{
			"timestamps": {
				"from": "00:34:51,840",
				"to": "00:35:21,840"
			},
			"offsets": {
				"from": 2091840,
				"to": 2121840
			},
			"text": " so in this language the peer script is strict which means that like all these things will happen immediately but in Haskell this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this would look like this"
		},
		{
			"timestamps": {
				"from": "00:35:21,840",
				"to": "00:35:46,840"
			},
			"offsets": {
				"from": 2121840,
				"to": 2146840
			},
			"text": " time will take it depends on the thing so basically like yeah this you can go through these slides you know and ask yourself these questions like which you know continues to be slightly which part of this computation is pure which are effectful which parts can be thrown in exception which parts can be thrown in all pointer exceptions there are no because they don't exist in these languages"
		},
		{
			"timestamps": {
				"from": "00:35:46,840",
				"to": "00:36:04,840"
			},
			"offsets": {
				"from": 2146840,
				"to": 2164840
			},
			"text": " which parts can fail which parts can't fail this is become basically like self-evident from the code itself and so rather than like skimming through line by line it's starting to print statements for things to figure out like when something is going to fail I can look at this program"
		},
		{
			"timestamps": {
				"from": "00:36:04,840",
				"to": "00:36:21,840"
			},
			"offsets": {
				"from": 2164840,
				"to": 2181840
			},
			"text": " in advance and tell that this line could fail because it has an effectful computation it's my feature by network here this is a variable binding that could cause it basically as result is an effectful computation you could run later"
		},
		{
			"timestamps": {
				"from": "00:36:21,840",
				"to": "00:36:32,840"
			},
			"offsets": {
				"from": 2181840,
				"to": 2192840
			},
			"text": " there's nothing being run here it's just setting it up so there's nothing that can fail here there's nothing that can fail it in these lead lines so this test fails because of an effectful reason I know it has to take place in this line"
		},
		{
			"timestamps": {
				"from": "00:36:32,840",
				"to": "00:36:58,840"
			},
			"offsets": {
				"from": 2192840,
				"to": 2218840
			},
			"text": " there's no possible way that it can do anything else so I don't know in that sense like how you start to look at projects large large piles of code where many things are happening it's very important to basically be able to look at it and we're looking at only this this particular block I can tell that the only way that this can fail is this one this one part here"
		},
		{
			"timestamps": {
				"from": "00:36:58,840",
				"to": "00:37:15,840"
			},
			"offsets": {
				"from": 2218840,
				"to": 2235840
			},
			"text": " so what do you gain the analogy here is that like whatever like the you know the code is the program is like the type starts in the memory which is to say that like the compiler is taking in the types that you're giving to the program that you're writing whether you like or not is creating"
		},
		{
			"timestamps": {
				"from": "00:37:15,840",
				"to": "00:37:29,840"
			},
			"offsets": {
				"from": 2235840,
				"to": 2249840
			},
			"text": " it's time to like language you don't have to always write it yourself but you don't always have to annotate it and say that this thing has type whenever the program the compiler is able to figure out a lot of that for you but by typing the language itself"
		},
		{
			"timestamps": {
				"from": "00:37:29,840",
				"to": "00:37:44,840"
			},
			"offsets": {
				"from": 2249840,
				"to": 2264840
			},
			"text": " the compiler is able to operate on your on your types and to produce like certain guarantees or certain things in the same way that your program can operate on values so in the same way that your program manipulates values the compiler here is like basically reading"
		},
		{
			"timestamps": {
				"from": "00:37:44,840",
				"to": "00:37:56,840"
			},
			"offsets": {
				"from": 2264840,
				"to": 2276840
			},
			"text": " types and reasoning about those things in the same way that you were reason about Boolean logic or whatever is that your program does and the more accurate and expressive that your types are the more work that the compiler can do for you"
		},
		{
			"timestamps": {
				"from": "00:37:56,840",
				"to": "00:38:12,840"
			},
			"offsets": {
				"from": 2276840,
				"to": 2292840
			},
			"text": " so for example like the more accurate that your types are for saying like when things control exceptions and if they can't when they might fail it would be done the compiler is able to basically like tell you more and more about the possible places where your programs may be incorrectly written or where it might fail"
		},
		{
			"timestamps": {
				"from": "00:38:12,840",
				"to": "00:38:23,840"
			},
			"offsets": {
				"from": 2292840,
				"to": 2303840
			},
			"text": " the downside of this is that this kind of program is really hard but it's different than it's different than being really hard to get it right it's really hard to learn but once you learn how to do it there is not really"
		},
		{
			"timestamps": {
				"from": "00:38:23,840",
				"to": "00:38:41,840"
			},
			"offsets": {
				"from": 2303840,
				"to": 2321840
			},
			"text": " it's the kind of thing that you can't it's very difficult to implement a program improperly in this language like you have these people talk about as the old especially like oh the first time in the school program by the time I figure out how to get into a pile like a few months later it just worked the first time there was no like there was no unit test"
		},
		{
			"timestamps": {
				"from": "00:38:41,840",
				"to": "00:38:57,840"
			},
			"offsets": {
				"from": 2321840,
				"to": 2337840
			},
			"text": " it's because like it's actually somewhat well it's some of the things we express programs in these languages there is it's difficult to get a program to compile it doesn't do anything you think it's and when it does it's something actually it's it's interesting because it's somehow like"
		},
		{
			"timestamps": {
				"from": "00:38:57,840",
				"to": "00:39:10,840"
			},
			"offsets": {
				"from": 2337840,
				"to": 2350840
			},
			"text": " in some sense like it's supposed to be possible so the interesting you know parts of this library which I would tell to whatever is like whatever like the way that it does you know the way that it does parsing and what in"
		},
		{
			"timestamps": {
				"from": "00:39:10,840",
				"to": "00:39:26,840"
			},
			"offsets": {
				"from": 2350840,
				"to": 2366840
			},
			"text": " the way that it does it's like pretty cool and it's like easy to do it all at some extent so I didn't spend six months writing tests and stuff I spent like a month writing it and then it just kind of like works and it's not really the way that it's not really"
		},
		{
			"timestamps": {
				"from": "00:39:26,840",
				"to": "00:39:49,840"
			},
			"offsets": {
				"from": 2366840,
				"to": 2389840
			},
			"text": " the thing which I would say is like the most interesting thing is probably the way that it does like transit yeah so there's like a mean here for whatever I think I would say here is probably the most interesting feature that this has that is not exist in your vanilla 3.js library or whatever is something that's called like the multi filtering or something which is like basically a way to pursue"
		},
		{
			"timestamps": {
				"from": "00:39:49,840",
				"to": "00:40:16,840"
			},
			"offsets": {
				"from": 2389840,
				"to": 2416840
			},
			"text": " Ethereum logs in a particular order that you want to specify and I just the left with the remaining time before we have a few questions or whatever I would just specify like what that means so the theory of logs if you don't know or basically the way that it's a mechanism for applications to create updates to contract state so when contracts change you don't always know unless there's an event that gets fired that would tell you to go back in place with looking at it or possibly just assume the"
		},
		{
			"timestamps": {
				"from": "00:40:16,840",
				"to": "00:40:45,840"
			},
			"offsets": {
				"from": 2416840,
				"to": 2445840
			},
			"text": " the log itself to get all the information you want to know and these are consumed by some kind of like some of the filter like a web 3 filter it's a diagram about how this works it took me forever to make this a question and so like the problem statement for like this multi filtering thing for example is like you want to listen to like you want to listen to multiple events each one of them coming from one of several contracts this is very common because you have most of what we know to separate concerns you write multiple different contracts you don't have just one giant contract."
		},
		{
			"timestamps": {
				"from": "00:40:45,840",
				"to": "00:40:54,840"
			},
			"offsets": {
				"from": 2445840,
				"to": 2454840
			},
			"text": " Each one of these things is submitting different kinds of events from different addresses and you want to define specific handlers that run against each event type."
		},
		{
			"timestamps": {
				"from": "00:40:54,840",
				"to": "00:41:14,840"
			},
			"offsets": {
				"from": 2454840,
				"to": 2474840
			},
			"text": " This is most common in some cases when you're just trying to store them in some kind of cash where but it also might you know whatever you might not be the UI or something else and every time that you want to run each handler or lower its event in the event that in the event in the event that's been logged by the EEM so like in chronological order."
		},
		{
			"timestamps": {
				"from": "00:41:14,840",
				"to": "00:41:30,840"
			},
			"offsets": {
				"from": 2474840,
				"to": 2490840
			},
			"text": " So like contracts you know calling if I have one contract that is invented before its return statement makes a call somewhere in its body which causes another event to fire then like I want to resolve these things in the order that they came out and basically like a block."
		},
		{
			"timestamps": {
				"from": "00:41:30,840",
				"to": "00:41:40,840"
			},
			"offsets": {
				"from": 2490840,
				"to": 2500840
			},
			"text": " And so the use case for this which we have which probably lots of other people have is that you're building a cash for contact state which is updated or revalidated whenever certain events fire."
		},
		{
			"timestamps": {
				"from": "00:41:40,840",
				"to": "00:41:52,840"
			},
			"offsets": {
				"from": 2500840,
				"to": 2512840
			},
			"text": " So because you want to use as your back end you want to use like a relational database but you know you don't want to use like the EEM as your back end you're going to fill in cash for your application."
		},
		{
			"timestamps": {
				"from": "00:41:52,840",
				"to": "00:42:03,840"
			},
			"offsets": {
				"from": 2512840,
				"to": 2523840
			},
			"text": " There are dependencies in your events for example like an empty market contract like a token listed for sale event that indicates like oh there's a new token I can buy but that token itself refers to a token ID."
		},
		{
			"timestamps": {
				"from": "00:42:03,840",
				"to": "00:42:15,840"
			},
			"offsets": {
				"from": 2523840,
				"to": 2535840
			},
			"text": " And that token ID is you would only know that that token existed if the event that like mint new token event from the NFT contract itself and fire it in some cases."
		},
		{
			"timestamps": {
				"from": "00:42:15,840",
				"to": "00:42:24,840"
			},
			"offsets": {
				"from": 2535840,
				"to": 2544840
			},
			"text": " There's kind of like a result resolving of actions that spawn things to happen but in order to make sense of one action I might have to know that this token was minted in a different location."
		},
		{
			"timestamps": {
				"from": "00:42:24,840",
				"to": "00:42:32,840"
			},
			"offsets": {
				"from": 2544840,
				"to": 2552840
			},
			"text": " And the reason why is that you know in a relational database for example you have things like foreign key constraints that say that like this token for sale."
		},
		{
			"timestamps": {
				"from": "00:42:32,840",
				"to": "00:42:49,840"
			},
			"offsets": {
				"from": 2552840,
				"to": 2569840
			},
			"text": " This token for sale is a row in some database and that row has a column called token ID and that token ID is pointing to a token table somewhere else and if that token is not in that token table then this schema has now been invalidated because I can't talk about a token for sale unless I know about a token."
		},
		{
			"timestamps": {
				"from": "00:42:49,840",
				"to": "00:43:03,840"
			},
			"offsets": {
				"from": 2569840,
				"to": 2583840
			},
			"text": " So basically like you have created a situation in which you have foreign key constraints in a relational database that you cannot maintain unless things are processed in order to keep those foreign key relations sound."
		},
		{
			"timestamps": {
				"from": "00:43:03,840",
				"to": "00:43:14,840"
			},
			"offsets": {
				"from": 2583840,
				"to": 2594840
			},
			"text": " And so this is particularly useful if you want to not run against like a full archive node where so like if you want to run a form, yeah that's not a big problem if you have a full archive node."
		},
		{
			"timestamps": {
				"from": "00:43:14,840",
				"to": "00:43:18,840"
			},
			"offsets": {
				"from": 2594840,
				"to": 2598840
			},
			"text": " So you can do whatever contract lookups at whatever point in time you want."
		},
		{
			"timestamps": {
				"from": "00:43:18,840",
				"to": "00:43:27,840"
			},
			"offsets": {
				"from": 2598840,
				"to": 2607840
			},
			"text": " For example if I had like two different event processors one catching all the tokens that were ever minted one catching all the tokens that were for sale."
		},
		{
			"timestamps": {
				"from": "00:43:27,840",
				"to": "00:43:41,840"
			},
			"offsets": {
				"from": 2607840,
				"to": 2621840
			},
			"text": " If I don't have a full archive node whenever I get this token for sale then I better have already received this like token minted event or else I guarantee that when I like look up stuff that things are going to result."
		},
		{
			"timestamps": {
				"from": "00:43:41,840",
				"to": "00:43:50,840"
			},
			"offsets": {
				"from": 2621840,
				"to": 2630840
			},
			"text": " So I would rather try and I would talk more about this because it's an interesting problem that kind of all kinds of things that will come up to more things talk given tomorrow but that's how I'll be moving now."
		},
		{
			"timestamps": {
				"from": "00:43:50,840",
				"to": "00:43:56,840"
			},
			"offsets": {
				"from": 2630840,
				"to": 2636840
			},
			"text": " In the last case we're going to have to talk about this but if you want to talk about Cosmos and Aspen you can talk to me."
		},
		{
			"timestamps": {
				"from": "00:43:56,840",
				"to": "00:43:58,840"
			},
			"offsets": {
				"from": 2636840,
				"to": 2638840
			},
			"text": " That's it."
		},
		{
			"timestamps": {
				"from": "00:43:58,840",
				"to": "00:44:12,840"
			},
			"offsets": {
				"from": 2638840,
				"to": 2652840
			},
			"text": " [Applause]"
		}
	]
}
