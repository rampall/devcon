{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:07,000"
			},
			"offsets": {
				"from": 0,
				"to": 7000
			},
			"text": " Thank you all for coming."
		},
		{
			"timestamps": {
				"from": "00:00:07,000",
				"to": "00:00:13,000"
			},
			"offsets": {
				"from": 7000,
				"to": 13000
			},
			"text": " Myself, Shawe, Chichang, Donkred, Justin, and Vitalik, who is apparently on this floor,"
		},
		{
			"timestamps": {
				"from": "00:00:13,000",
				"to": "00:00:18,000"
			},
			"offsets": {
				"from": 13000,
				"to": 18000
			},
			"text": " will today give you a deep dive into the phase zero specification."
		},
		{
			"timestamps": {
				"from": "00:00:18,000",
				"to": "00:00:24,000"
			},
			"offsets": {
				"from": 18000,
				"to": 24000
			},
			"text": " That is the beacon chain of the Ethereum 2.0 protocol."
		},
		{
			"timestamps": {
				"from": "00:00:24,000",
				"to": "00:00:34,000"
			},
			"offsets": {
				"from": 24000,
				"to": 34000
			},
			"text": " Today we will get as technical as we can with the time permitting, and at the same time point you to portions of the spec so you can dive in deeper,"
		},
		{
			"timestamps": {
				"from": "00:00:34,000",
				"to": "00:00:42,000"
			},
			"offsets": {
				"from": 34000,
				"to": 42000
			},
			"text": " and hopefully just get you more acquainted with what's going on so that you can better technically understand the problems at hand and the solutions,"
		},
		{
			"timestamps": {
				"from": "00:00:42,000",
				"to": "00:00:46,000"
			},
			"offsets": {
				"from": 42000,
				"to": 46000
			},
			"text": " and can dig in and contribute, all that."
		},
		{
			"timestamps": {
				"from": "00:00:46,000",
				"to": "00:00:52,000"
			},
			"offsets": {
				"from": 46000,
				"to": 52000
			},
			"text": " So, we're building this thing as a theorem too."
		},
		{
			"timestamps": {
				"from": "00:00:52,000",
				"to": "00:00:55,000"
			},
			"offsets": {
				"from": 52000,
				"to": 55000
			},
			"text": " So, as we go through this, there's a sharded protocol."
		},
		{
			"timestamps": {
				"from": "00:00:55,000",
				"to": "00:00:59,000"
			},
			"offsets": {
				"from": 55000,
				"to": 59000
			},
			"text": " There are many shards connected to a central beacon chain."
		},
		{
			"timestamps": {
				"from": "00:00:59,000",
				"to": "00:01:08,000"
			},
			"offsets": {
				"from": 59000,
				"to": 68000
			},
			"text": " It also has a loose coupling to the existing Ethereum chain, which at the beginning just supports deposits coming into the beacon chain."
		},
		{
			"timestamps": {
				"from": "00:01:08,000",
				"to": "00:01:15,000"
			},
			"offsets": {
				"from": 68000,
				"to": 75000
			},
			"text": " Today, phase zero is just this pure proof of stake chain connected to the Ethereum 1 protocol."
		},
		{
			"timestamps": {
				"from": "00:01:15,000",
				"to": "00:01:18,000"
			},
			"offsets": {
				"from": 75000,
				"to": 78000
			},
			"text": " So, that is what we'll talk about today."
		},
		{
			"timestamps": {
				"from": "00:01:18,000",
				"to": "00:01:28,000"
			},
			"offsets": {
				"from": 78000,
				"to": 88000
			},
			"text": " We'll show you the scaffolding upon which shard chains will be connected, but we will not dive deep into this portion of the protocol."
		},
		{
			"timestamps": {
				"from": "00:01:28,000",
				"to": "00:01:37,000"
			},
			"offsets": {
				"from": 88000,
				"to": 97000
			},
			"text": " The beginning, what we're going to start off with today is we're going to look at some of the core building blocks of consensus."
		},
		{
			"timestamps": {
				"from": "00:01:37,000",
				"to": "00:01:47,000"
			},
			"offsets": {
				"from": 97000,
				"to": 107000
			},
			"text": " That's the CASPER-FFG protocol, the LMD Ghost Fork choice, Randomness, and BLS signatures."
		},
		{
			"timestamps": {
				"from": "00:01:47,000",
				"to": "00:01:57,000"
			},
			"offsets": {
				"from": 107000,
				"to": 117000
			},
			"text": " After that, we'll take a short break, maybe take some questions, and then we'll dive into the actual, some of the mechanics and concrete instantiation of the protocol,"
		},
		{
			"timestamps": {
				"from": "00:01:57,000",
				"to": "00:02:03,000"
			},
			"offsets": {
				"from": 117000,
				"to": 123000
			},
			"text": " the actual state transition and things and validators and things built on top of some of these components."
		},
		{
			"timestamps": {
				"from": "00:02:03,000",
				"to": "00:02:07,000"
			},
			"offsets": {
				"from": 123000,
				"to": 127000
			},
			"text": " So, FFG applied to proof of stake."
		},
		{
			"timestamps": {
				"from": "00:02:07,000",
				"to": "00:02:13,000"
			},
			"offsets": {
				"from": 127000,
				"to": 133000
			},
			"text": " So, there was a paper written probably about a year and a half ago now by Vitalik and Virgil Griffith."
		},
		{
			"timestamps": {
				"from": "00:02:13,000",
				"to": "00:02:25,000"
			},
			"offsets": {
				"from": 133000,
				"to": 145000
			},
			"text": " CASPER-FFG consensus protocol generally built to be layered upon a block proposal mechanism, the original being a proof of work mechanism,"
		},
		{
			"timestamps": {
				"from": "00:02:25,000",
				"to": "00:02:31,000"
			},
			"offsets": {
				"from": 145000,
				"to": 151000
			},
			"text": " but there's some modifications to bring this protocol to be on top of a proof of stake protocol,"
		},
		{
			"timestamps": {
				"from": "00:02:31,000",
				"to": "00:02:35,000"
			},
			"offsets": {
				"from": 151000,
				"to": 155000
			},
			"text": " and more importantly, some modifications that get us to where we need to go for this protocol."
		},
		{
			"timestamps": {
				"from": "00:02:35,000",
				"to": "00:02:46,000"
			},
			"offsets": {
				"from": 155000,
				"to": 166000
			},
			"text": " So, I'm going to go over some of those modifications, how we think about slots, checkpoints, epochs, slashing, finality, that kind of stuff."
		},
		{
			"timestamps": {
				"from": "00:02:46,000",
				"to": "00:02:52,000"
			},
			"offsets": {
				"from": 166000,
				"to": 172000
			},
			"text": " I will give you an intuition for the safety proof, but we'll not have time to dig deep into that."
		},
		{
			"timestamps": {
				"from": "00:02:52,000",
				"to": "00:02:55,000"
			},
			"offsets": {
				"from": 172000,
				"to": 175000
			},
			"text": " And we have a..."
		},
		{
			"timestamps": {
				"from": "00:02:55,000",
				"to": "00:02:58,000"
			},
			"offsets": {
				"from": 175000,
				"to": 178000
			},
			"text": " Yeah, I'll talk like that."
		},
		{
			"timestamps": {
				"from": "00:02:58,000",
				"to": "00:03:02,000"
			},
			"offsets": {
				"from": 178000,
				"to": 182000
			},
			"text": " Now I can hear myself."
		},
		{
			"timestamps": {
				"from": "00:03:02,000",
				"to": "00:03:08,000"
			},
			"offsets": {
				"from": 182000,
				"to": 188000
			},
			"text": " We will...we have a modification of the FFG protocol in a paper."
		},
		{
			"timestamps": {
				"from": "00:03:08,000",
				"to": "00:03:11,000"
			},
			"offsets": {
				"from": 188000,
				"to": 191000
			},
			"text": " It is a draft. I really wish it was going to be done by today."
		},
		{
			"timestamps": {
				"from": "00:03:11,000",
				"to": "00:03:16,000"
			},
			"offsets": {
				"from": 191000,
				"to": 196000
			},
			"text": " It's in the last round of edits, and we'll be released on archive very soon."
		},
		{
			"timestamps": {
				"from": "00:03:16,000",
				"to": "00:03:19,000"
			},
			"offsets": {
				"from": 196000,
				"to": 199000
			},
			"text": " So, hopefully this will help you read that paper when it comes up."
		},
		{
			"timestamps": {
				"from": "00:03:19,000",
				"to": "00:03:27,000"
			},
			"offsets": {
				"from": 199000,
				"to": 207000
			},
			"text": " So, traditionally, when we think about blockchain protocols, we think about blocks and block heights."
		},
		{
			"timestamps": {
				"from": "00:03:27,000",
				"to": "00:03:31,000"
			},
			"offsets": {
				"from": 207000,
				"to": 211000
			},
			"text": " And every block you build on top of another block moves us into another block height."
		},
		{
			"timestamps": {
				"from": "00:03:31,000",
				"to": "00:03:39,000"
			},
			"offsets": {
				"from": 211000,
				"to": 219000
			},
			"text": " Original FFG protocol considered block heights and actions that validators could take with respect to block heights."
		},
		{
			"timestamps": {
				"from": "00:03:39,000",
				"to": "00:03:47,000"
			},
			"offsets": {
				"from": 219000,
				"to": 227000
			},
			"text": " These heights were divided into epochs, and units of work would be done per epoch."
		},
		{
			"timestamps": {
				"from": "00:03:47,000",
				"to": "00:03:52,000"
			},
			"offsets": {
				"from": 227000,
				"to": 232000
			},
			"text": " So, essentially, a round of voting by all validators can happen per epoch."
		},
		{
			"timestamps": {
				"from": "00:03:52,000",
				"to": "00:03:58,000"
			},
			"offsets": {
				"from": 232000,
				"to": 238000
			},
			"text": " But what you can do and not do to the protocol is also kind of defined within these epochs."
		},
		{
			"timestamps": {
				"from": "00:03:58,000",
				"to": "00:04:03,000"
			},
			"offsets": {
				"from": 238000,
				"to": 243000
			},
			"text": " We have a slight modification to how we think about a chain being built."
		},
		{
			"timestamps": {
				"from": "00:04:03,000",
				"to": "00:04:09,000"
			},
			"offsets": {
				"from": 243000,
				"to": 249000
			},
			"text": " Still, we have blocks linked to each other, block by block, building a blockchain."
		},
		{
			"timestamps": {
				"from": "00:04:09,000",
				"to": "00:04:16,000"
			},
			"offsets": {
				"from": 249000,
				"to": 256000
			},
			"text": " But we have this notion of time called a slot, also embedded into this kind of overlaid on this structure."
		},
		{
			"timestamps": {
				"from": "00:04:16,000",
				"to": "00:04:21,000"
			},
			"offsets": {
				"from": 256000,
				"to": 261000
			},
			"text": " And so, what we can..."
		},
		{
			"timestamps": {
				"from": "00:04:21,000",
				"to": "00:04:29,000"
			},
			"offsets": {
				"from": 261000,
				"to": 269000
			},
			"text": " What can or cannot be done by a validator in any given time is with respect to a slot."
		},
		{
			"timestamps": {
				"from": "00:04:29,000",
				"to": "00:04:35,000"
			},
			"offsets": {
				"from": 269000,
				"to": 275000
			},
			"text": " So, my duty to propose or to a test or do any type of these messages is with respect to a slot."
		},
		{
			"timestamps": {
				"from": "00:04:35,000",
				"to": "00:04:41,000"
			},
			"offsets": {
				"from": 275000,
				"to": 281000
			},
			"text": " And so, a block... someone shows up and they propose this at slot zero, this at slot one."
		},
		{
			"timestamps": {
				"from": "00:04:41,000",
				"to": "00:04:44,000"
			},
			"offsets": {
				"from": 281000,
				"to": 284000
			},
			"text": " No one showed up at slot two, or maybe it didn't get propagated in the network."
		},
		{
			"timestamps": {
				"from": "00:04:44,000",
				"to": "00:04:48,000"
			},
			"offsets": {
				"from": 284000,
				"to": 288000
			},
			"text": " And so, the proposal at slot three built upon slot two."
		},
		{
			"timestamps": {
				"from": "00:04:48,000",
				"to": "00:04:56,000"
			},
			"offsets": {
				"from": 288000,
				"to": 296000
			},
			"text": " But the state transition, the internal mechanics of the consensus protocol and other portions of the protocol are aware of this skip."
		},
		{
			"timestamps": {
				"from": "00:04:56,000",
				"to": "00:05:03,000"
			},
			"offsets": {
				"from": 296000,
				"to": 303000
			},
			"text": " And so, instead of things being divided into strictly block heights, because this would just be a block height of three,"
		},
		{
			"timestamps": {
				"from": "00:05:03,000",
				"to": "00:05:08,000"
			},
			"offsets": {
				"from": 303000,
				"to": 308000
			},
			"text": " although much more has transpired with respect to the duties and positions of the protocol."
		},
		{
			"timestamps": {
				"from": "00:05:08,000",
				"to": "00:05:12,000"
			},
			"offsets": {
				"from": 308000,
				"to": 312000
			},
			"text": " So, instead, epochs are divided into slots."
		},
		{
			"timestamps": {
				"from": "00:05:12,000",
				"to": "00:05:16,000"
			},
			"offsets": {
				"from": 312000,
				"to": 316000
			},
			"text": " Slots, epochs in actuality are on the order of like 64 slots."
		},
		{
			"timestamps": {
				"from": "00:05:16,000",
				"to": "00:05:18,000"
			},
			"offsets": {
				"from": 316000,
				"to": 318000
			},
			"text": " This is just illustrative."
		},
		{
			"timestamps": {
				"from": "00:05:18,000",
				"to": "00:05:22,000"
			},
			"offsets": {
				"from": 318000,
				"to": 322000
			},
			"text": " So, this consensus protocol needs to be modified."
		},
		{
			"timestamps": {
				"from": "00:05:22,000",
				"to": "00:05:29,000"
			},
			"offsets": {
				"from": 322000,
				"to": 329000
			},
			"text": " FFG needs to be modified to work on top of this new kind of slot and epoch mechanism."
		},
		{
			"timestamps": {
				"from": "00:05:29,000",
				"to": "00:05:32,000"
			},
			"offsets": {
				"from": 329000,
				"to": 332000
			},
			"text": " Checkpoints."
		},
		{
			"timestamps": {
				"from": "00:05:32,000",
				"to": "00:05:36,000"
			},
			"offsets": {
				"from": 332000,
				"to": 336000
			},
			"text": " So, in CASPER FOG, we attempt to finalize checkpoints."
		},
		{
			"timestamps": {
				"from": "00:05:36,000",
				"to": "00:05:44,000"
			},
			"offsets": {
				"from": 336000,
				"to": 344000
			},
			"text": " Checkpoints are blocks at per units of time."
		},
		{
			"timestamps": {
				"from": "00:05:44,000",
				"to": "00:05:48,000"
			},
			"offsets": {
				"from": 344000,
				"to": 348000
			},
			"text": " Here, checkpoint might be this block, whereas there might be that."
		},
		{
			"timestamps": {
				"from": "00:05:48,000",
				"to": "00:05:59,000"
			},
			"offsets": {
				"from": 348000,
				"to": 359000
			},
			"text": " But importantly, because we have this notion of skipped slots, we have to define what actually a block being at a checkpoint is and means."
		},
		{
			"timestamps": {
				"from": "00:05:59,000",
				"to": "00:06:02,000"
			},
			"offsets": {
				"from": 359000,
				"to": 362000
			},
			"text": " And so, we call it in this paper coming out."
		},
		{
			"timestamps": {
				"from": "00:06:02,000",
				"to": "00:06:05,000"
			},
			"offsets": {
				"from": 362000,
				"to": 365000
			},
			"text": " It's called an epic boundary block, EBB."
		},
		{
			"timestamps": {
				"from": "00:06:05,000",
				"to": "00:06:12,000"
			},
			"offsets": {
				"from": 365000,
				"to": 372000
			},
			"text": " So, in this fork of the chain, we have the epic boundary block, which is the 0th block in that epoch, is actually B."
		},
		{
			"timestamps": {
				"from": "00:06:12,000",
				"to": "00:06:27,000"
			},
			"offsets": {
				"from": 372000,
				"to": 387000
			},
			"text": " But in this fork of the chain where a slot at slot 66 was built on top of A, the epic boundary block is actually, it's the block at the 0th slot or the most immediate block prior."
		},
		{
			"timestamps": {
				"from": "00:06:27,000",
				"to": "00:06:29,000"
			},
			"offsets": {
				"from": 387000,
				"to": 389000
			},
			"text": " So, it's actually A."
		},
		{
			"timestamps": {
				"from": "00:06:29,000",
				"to": "00:06:45,000"
			},
			"offsets": {
				"from": 389000,
				"to": 405000
			},
			"text": " So, in this version of the chain, this fork of the chain, if votes are happening and blocks are justified, if something was was checkpointed or finalized, it would actually be A at this slot."
		},
		{
			"timestamps": {
				"from": "00:06:45,000",
				"to": "00:07:02,000"
			},
			"offsets": {
				"from": 405000,
				"to": 422000
			},
			"text": " Because A can be transitioned through empty slots up until B exists, you're actually checkpointing and ultimately finalizing this tuple of A at the start of this slot."
		},
		{
			"timestamps": {
				"from": "00:07:02,000",
				"to": "00:07:09,000"
			},
			"offsets": {
				"from": 422000,
				"to": 429000
			},
			"text": " To illustrate that a little bit more, what I was implying is we have this notion of paired justification and paired finality."
		},
		{
			"timestamps": {
				"from": "00:07:09,000",
				"to": "00:07:24,000"
			},
			"offsets": {
				"from": 429000,
				"to": 444000
			},
			"text": " In the optimal case, we're always just say justifying the 0th in the optimal case, we're always justifying and finalizing all the blocks exist at all slots, then we can just always justify the 0th one here."
		},
		{
			"timestamps": {
				"from": "00:07:24,000",
				"to": "00:07:39,000"
			},
			"offsets": {
				"from": 444000,
				"to": 459000
			},
			"text": " But instead, because we can have dropped slots and skip slots, we have to have a notion of what we're actually at a given epoch, what we're actually finalizing and it turns out that we're finalizing this notion of a paired justification of a block at an epoch."
		},
		{
			"timestamps": {
				"from": "00:07:39,000",
				"to": "00:07:52,000"
			},
			"offsets": {
				"from": 459000,
				"to": 472000
			},
			"text": " So, just to illustrate that a little bit more, we have a block at epoch 1, the 0th slot at 64. But then nothing happens, like some, everyone goes offline or some massive forking happens."
		},
		{
			"timestamps": {
				"from": "00:07:52,000",
				"to": "00:08:15,000"
			},
			"offsets": {
				"from": 472000,
				"to": 495000
			},
			"text": " And the next proposal, actually in epoch 2 at slot 129, builds on top of this 64. And so, and we go on in this epoch 2 to actually justify this epoch boundary, which ended up being a block from a prior epoch, but at this slot."
		},
		{
			"timestamps": {
				"from": "00:08:15,000",
				"to": "00:08:33,000"
			},
			"offsets": {
				"from": 495000,
				"to": 513000
			},
			"text": " And so then we can go on to do further justifications and actually finalize this. And so what that does is, finality in this mechanism ends up being not only will this block, say this block is at this epoch is finalized, not only will this block never revert,"
		},
		{
			"timestamps": {
				"from": "00:08:33,000",
				"to": "00:08:54,000"
			},
			"offsets": {
				"from": 513000,
				"to": 534000
			},
			"text": " but blocks that are lower than this epoch boundary slot can also, but built upon this can also are also not valid. So for example, if someone built a block right here at slot 65, 66, but this was finalized those are considered invalid and I don't consider them a part of my for choice."
		},
		{
			"timestamps": {
				"from": "00:08:54,000",
				"to": "00:09:02,000"
			},
			"offsets": {
				"from": 534000,
				"to": 542000
			},
			"text": " So we have this notion of coupling blocks with an epoch in finality."
		},
		{
			"timestamps": {
				"from": "00:09:02,000",
				"to": "00:09:19,000"
			},
			"offsets": {
				"from": 542000,
				"to": 559000
			},
			"text": " So justification rules. Similarly to calf, calf's graph of G the original protocol, the Genesis block at epoch zero is justified. And subsequently we have justified, again, we have these pairs these block epoch pairs."
		},
		{
			"timestamps": {
				"from": "00:09:19,000",
				"to": "00:09:29,000"
			},
			"offsets": {
				"from": 559000,
				"to": 569000
			},
			"text": " Any justification pair from a source of a prior justification pair is justified."
		},
		{
			"timestamps": {
				"from": "00:09:29,000",
				"to": "00:09:40,000"
			},
			"offsets": {
				"from": 569000,
				"to": 580000
			},
			"text": " And when votes are cast, we're always specifying a source and a target. So here in this link that was created."
		},
		{
			"timestamps": {
				"from": "00:09:40,000",
				"to": "00:09:54,000"
			},
			"offsets": {
				"from": 580000,
				"to": 594000
			},
			"text": " This prior justification was the source, and this new one is the target. So we create a justified link. I think it's called a super majority link."
		},
		{
			"timestamps": {
				"from": "00:09:54,000",
				"to": "00:10:01,000"
			},
			"offsets": {
				"from": 594000,
				"to": 601000
			},
			"text": " To create these just this chain of justified blocks and a subset of them depending on the rules can be finalized."
		},
		{
			"timestamps": {
				"from": "00:10:01,000",
				"to": "00:10:08,000"
			},
			"offsets": {
				"from": 601000,
				"to": 608000
			},
			"text": " So, finality rules. I know this isn't actually so meaningful. This is taken from the paper."
		},
		{
			"timestamps": {
				"from": "00:10:08,000",
				"to": "00:10:19,000"
			},
			"offsets": {
				"from": 608000,
				"to": 619000
			},
			"text": " The finality rules in the original cast graph of G paper were essentially you had to have two epochs that were sequentially justified, where the, the lower of those two becomes finalized."
		},
		{
			"timestamps": {
				"from": "00:10:19,000",
				"to": "00:10:35,000"
			},
			"offsets": {
				"from": 619000,
				"to": 635000
			},
			"text": " Here, we actually extend the finality rules to be a little bit include a little bit more cases, where we generalize it. The original case that I just described is called the K equals one case, where we are sequentially justifying."
		},
		{
			"timestamps": {
				"from": "00:10:35,000",
				"to": "00:10:46,000"
			},
			"offsets": {
				"from": 635000,
				"to": 646000
			},
			"text": " But we can generalize this and add cases to the K equals N such that the rule becomes if we have a justification link."
		},
		{
			"timestamps": {
				"from": "00:10:46,000",
				"to": "00:10:59,000"
			},
			"offsets": {
				"from": 646000,
				"to": 659000
			},
			"text": " And here's our justification link, but all epochs contained within that justification link are also justified, then we can finalize the source of this link."
		},
		{
			"timestamps": {
				"from": "00:10:59,000",
				"to": "00:11:11,000"
			},
			"offsets": {
				"from": 659000,
				"to": 671000
			},
			"text": " So here we jump to, but we justified the center so we can finalize here. Here, we jump over over three, but we had justifications in the center, and so we can finalize the base."
		},
		{
			"timestamps": {
				"from": "00:11:11,000",
				"to": "00:11:17,000"
			},
			"offsets": {
				"from": 671000,
				"to": 677000
			},
			"text": " And the intuition here is that."
		},
		{
			"timestamps": {
				"from": "00:11:17,000",
				"to": "00:11:41,000"
			},
			"offsets": {
				"from": 677000,
				"to": 701000
			},
			"text": " Here, our justification and finality here is we can't double vote to try to finalize something exactly. And if we wanted to essentially like skirt the double vote and jump over, then we, we can't, there's a, I'll get to that in a moment, we can't surround this vote to essentially jump over."
		},
		{
			"timestamps": {
				"from": "00:11:41,000",
				"to": "00:11:50,000"
			},
			"offsets": {
				"from": 701000,
				"to": 710000
			},
			"text": " And here, we like plugged the holes, so we have a similar mechanism and we plug the whole and now we just need to prevent surrounds to avoid that."
		},
		{
			"timestamps": {
				"from": "00:11:50,000",
				"to": "00:11:54,000"
			},
			"offsets": {
				"from": 710000,
				"to": 714000
			},
			"text": " And out of the issue."
		},
		{
			"timestamps": {
				"from": "00:11:54,000",
				"to": "00:12:09,000"
			},
			"offsets": {
				"from": 714000,
				"to": 729000
			},
			"text": " In the actual theorem to protocol, we only consider the K up to K equals two case, because, and the reason that we need this is because we allow attestations to be included during the epoch that they're created on chain."
		},
		{
			"timestamps": {
				"from": "00:12:09,000",
				"to": "00:12:19,000"
			},
			"offsets": {
				"from": 729000,
				"to": 739000
			},
			"text": " Up through the next epoch. And so you have a few, if things are not performing super optimally and attestations aren't being included on each epoch every time."
		},
		{
			"timestamps": {
				"from": "00:12:19,000",
				"to": "00:12:27,000"
			},
			"offsets": {
				"from": 739000,
				"to": 747000
			},
			"text": " And they're included a little bit delayed the state of the chain and what is actually justified in the view on chain can be delayed."
		},
		{
			"timestamps": {
				"from": "00:12:27,000",
				"to": "00:12:36,000"
			},
			"offsets": {
				"from": 747000,
				"to": 756000
			},
			"text": " And so we have these cases where if we open up here's our K equals one cases, case two and case four, those are nice."
		},
		{
			"timestamps": {
				"from": "00:12:36,000",
				"to": "00:12:49,000"
			},
			"offsets": {
				"from": 756000,
				"to": 769000
			},
			"text": " But here we have these other K equals two cases where by extending the finality rules, we actually can capture finality in a few more cases."
		},
		{
			"timestamps": {
				"from": "00:12:49,000",
				"to": "00:12:59,000"
			},
			"offsets": {
				"from": 769000,
				"to": 779000
			},
			"text": " I think Justin will probably get into this a little bit later, but in the beacon state we do have these are the portions of the state that are related to finality."
		},
		{
			"timestamps": {
				"from": "00:12:59,000",
				"to": "00:13:14,000"
			},
			"offsets": {
				"from": 779000,
				"to": 794000
			},
			"text": " We track the last four just epochs, whether we justified them, and a few things about the checkpoints and with that data we can track these cases and no finality on the case of on chain."
		},
		{
			"timestamps": {
				"from": "00:13:14,000",
				"to": "00:13:24,000"
			},
			"offsets": {
				"from": 794000,
				"to": 804000
			},
			"text": " Here's this massive nasty function that processes justifications and also processes finality based upon those mechanisms."
		},
		{
			"timestamps": {
				"from": "00:13:24,000",
				"to": "00:13:41,000"
			},
			"offsets": {
				"from": 804000,
				"to": 821000
			},
			"text": " I was kind of alluding to these and I probably should have these earlier in the slides, but we, the things that keep this protocol safe is we prevent making double attestations so voting for the same target within one epoch."
		},
		{
			"timestamps": {
				"from": "00:13:41,000",
				"to": "00:13:51,000"
			},
			"offsets": {
				"from": 821000,
				"to": 831000
			},
			"text": " And we, as I said earlier, we want to prevent given any source target link here here here."
		},
		{
			"timestamps": {
				"from": "00:13:51,000",
				"to": "00:13:56,000"
			},
			"offsets": {
				"from": 831000,
				"to": 836000
			},
			"text": " We to prevent essentially getting around the no double vote."
		},
		{
			"timestamps": {
				"from": "00:13:56,000",
				"to": "00:14:05,000"
			},
			"offsets": {
				"from": 836000,
				"to": 845000
			},
			"text": " We prevent a no surround so I can't come from something earlier, jump over and then begin finalizing."
		},
		{
			"timestamps": {
				"from": "00:14:05,000",
				"to": "00:14:17,000"
			},
			"offsets": {
				"from": 845000,
				"to": 857000
			},
			"text": " Here's the actual code, you can probably get into this a little bit later, where we take attestation data can't have the same target epoch can't surround."
		},
		{
			"timestamps": {
				"from": "00:14:17,000",
				"to": "00:14:27,000"
			},
			"offsets": {
				"from": 857000,
				"to": 867000
			},
			"text": " That's that for now. Sorry that was so fast. We have a lot to cover today and that's like one of the more detailed components."
		},
		{
			"timestamps": {
				"from": "00:14:27,000",
				"to": "00:14:32,000"
			},
			"offsets": {
				"from": 867000,
				"to": 872000
			},
			"text": " Vitalik."
		},
		{
			"timestamps": {
				"from": "00:14:32,000",
				"to": "00:14:47,000"
			},
			"offsets": {
				"from": 872000,
				"to": 887000
			},
			"text": " All right, so I am going to be talking about as you can guess the LMD ghost for choice rule."
		},
		{
			"timestamps": {
				"from": "00:14:47,000",
				"to": "00:15:01,000"
			},
			"offsets": {
				"from": 887000,
				"to": 901000
			},
			"text": " So, I guess, so to start off, kind of what is LMD ghost, it's an adaptation of ghost, a.k.a. greedy, heavy, a sub observed sub tree, which is a alternative."
		},
		{
			"timestamps": {
				"from": "00:15:01,000",
				"to": "00:15:10,000"
			},
			"offsets": {
				"from": 901000,
				"to": 910000
			},
			"text": " Alternative proof of work for choice rule that some academics, you know, and some points can have you so hard developed in 2014."
		},
		{
			"timestamps": {
				"from": "00:15:10,000",
				"to": "00:15:20,000"
			},
			"offsets": {
				"from": 910000,
				"to": 920000
			},
			"text": " And it basically takes the same principles as original ghost and tries to modify them slightly and fit them into a proof of stake context."
		},
		{
			"timestamps": {
				"from": "00:15:20,000",
				"to": "00:15:38,000"
			},
			"offsets": {
				"from": 920000,
				"to": 938000
			},
			"text": " So, to start a state kind of quick intro of what ghost itself is, basically, the idea here is that if you imagine a network where there's a lot of network latency, or there's normal network latency, network latency, but blocks are very fast."
		},
		{
			"timestamps": {
				"from": "00:15:38,000",
				"to": "00:15:56,000"
			},
			"offsets": {
				"from": 938000,
				"to": 956000
			},
			"text": " So, say network latency is one second, you have a block coming every three seconds, then maybe something like a quarter of all the blocks are not going to be kind of conveniently in the same chain, right, because you might just have a block get produced and before that block gets broadcast"
		},
		{
			"timestamps": {
				"from": "00:15:56,000",
				"to": "00:16:22,000"
			},
			"offsets": {
				"from": 956000,
				"to": 982000
			},
			"text": " created at the same time. And the reason why, like, this is bad. And so in Bitcoin, they call this orphans or sales and Ethereum, we call it uncles. The reason why it's bad is because if you imagine there's an attacker, and the attacker is trying to do a 51% attack, so make an attack chain that's longer than the honest chain after some point,"
		},
		{
			"timestamps": {
				"from": "00:16:22,000",
				"to": "00:16:35,000"
			},
			"offsets": {
				"from": 982000,
				"to": 995000
			},
			"text": " then the attacker has an advantage, right, because the fork choice is a choice that looks for the longest chain. So the honest chain, one of every four blocks is not lengthening the chain, it's kind of a sister of some other block."
		},
		{
			"timestamps": {
				"from": "00:16:35,000",
				"to": "00:16:50,000"
			},
			"offsets": {
				"from": 995000,
				"to": 1010000
			},
			"text": " But on the attack chain, it's just the attacker, and so everything works perfectly. So, instead of needing to have 51% of the hash power, the attacker might only need to have 43% of the hash power, and if network latency goes higher than the percentage drops more and more,"
		},
		{
			"timestamps": {
				"from": "00:16:50,000",
				"to": "00:17:07,000"
			},
			"offsets": {
				"from": 1010000,
				"to": 1027000
			},
			"text": " and as network latency approaches infinity, the attacker can do a 51% attack with basically nothing. So, ghost fixes this, and the kind of philosophy behind this, right, is that if you imagine a chain here where, let's say, block D was built on top of block B,"
		},
		{
			"timestamps": {
				"from": "00:17:07,000",
				"to": "00:17:21,000"
			},
			"offsets": {
				"from": 1027000,
				"to": 1041000
			},
			"text": " but then this chain was block C, and then block E ended up winning, if you look at block D, block D ultimately is still a vote for B, right, it may not be a part correctly on the same chain, but D is still voting for B, whoever voted for,"
		},
		{
			"timestamps": {
				"from": "00:17:21,000",
				"to": "00:17:37,000"
			},
			"offsets": {
				"from": 1041000,
				"to": 1057000
			},
			"text": " whoever built D still thought that B is a good block to build a chain on. And so, really, you should be taking into account both D and E as blocks that support B's rightful position as part of the chain."
		},
		{
			"timestamps": {
				"from": "00:17:37,000",
				"to": "00:17:50,000"
			},
			"offsets": {
				"from": 1057000,
				"to": 1070000
			},
			"text": " So, the way that ghost works is basically, instead of looking at the longest chain, you run this kind of iterative process where you start from the root. If some block only has one child, you walk over to the child."
		},
		{
			"timestamps": {
				"from": "00:17:50,000",
				"to": "00:18:05,000"
			},
			"offsets": {
				"from": 1070000,
				"to": 1085000
			},
			"text": " If you have a block has multiple children, then you select a child whose tree of descendants is larger, right, so over here this block has no descendants, so a total of one including itself over here this block has 123456 descendants."
		},
		{
			"timestamps": {
				"from": "00:18:05,000",
				"to": "00:18:13,000"
			},
			"offsets": {
				"from": 1085000,
				"to": 1093000
			},
			"text": " And so you go over here, then you walk over here, then you have another fork, then this is the kind of heaviest sub tree again and so he is the head."
		},
		{
			"timestamps": {
				"from": "00:18:13,000",
				"to": "00:18:31,000"
			},
			"offsets": {
				"from": 1093000,
				"to": 1111000
			},
			"text": " Now, in this particular case, right, like the longest chain rule and ghost agree, but there are going to be many theoretical cases, especially when there's an active attack being attempted, when these extra blocks really do matter and they can save you from an attack."
		},
		{
			"timestamps": {
				"from": "00:18:31,000",
				"to": "00:18:51,000"
			},
			"offsets": {
				"from": 1111000,
				"to": 1131000
			},
			"text": " Now, the way that ghost applies this to a proof of state context is basically, the start off, it's very similar, except instead of looking at all blocks, it only looks at the block that is the most recent message submitted by that validator."
		},
		{
			"timestamps": {
				"from": "00:18:51,000",
				"to": "00:19:00,000"
			},
			"offsets": {
				"from": 1131000,
				"to": 1140000
			},
			"text": " So, for example, in this case, imagine you have a proof of stake chain, you have five validators, we'll call them, Alice, Alice, Bob, Charlie, David and Evan."
		},
		{
			"timestamps": {
				"from": "00:19:00,000",
				"to": "00:19:20,000"
			},
			"offsets": {
				"from": 1140000,
				"to": 1160000
			},
			"text": " And if you look at Alice, Alice created two blocks, one over here and then one over here, and Bob over here created this and this, Charlie created these two, David created this one, but then David might have dropped offline, so he's gotten nothing over here, so this is his most recent one, and Evan created two blocks, and that's his more recent one."
		},
		{
			"timestamps": {
				"from": "00:19:20,000",
				"to": "00:19:38,000"
			},
			"offsets": {
				"from": 1160000,
				"to": 1178000
			},
			"text": " So, what we do first is we only look at the most recent blocks from each individual validator, which basically means this, this, this, this, this, and we run through the exact same process, but only using those five blocks to count towards the weight."
		},
		{
			"timestamps": {
				"from": "00:19:38,000",
				"to": "00:19:49,920"
			},
			"offsets": {
				"from": 1178000,
				"to": 1189920
			},
			"text": " Right, so over here, you start from the root, one child go over here, then over here, this side, you have a score of one, and this side, you have a score of one, two, three, four, you go over here, then you go here, and then score of one, score of one,"
		},
		{
			"timestamps": {
				"from": "00:19:49,920",
				"to": "00:19:52,920"
			},
			"offsets": {
				"from": 1189920,
				"to": 1192920
			},
			"text": " score of two, go here and here, and that's the head."
		},
		{
			"timestamps": {
				"from": "00:19:52,920",
				"to": "00:20:06,920"
			},
			"offsets": {
				"from": 1192920,
				"to": 1206920
			},
			"text": " Now, for now, we're assuming a simple kind of model where what I call blocks and what I call messages are the same thing, right, and basically so in this case, blocks are serving a kind of dual purpose."
		},
		{
			"timestamps": {
				"from": "00:20:06,920",
				"to": "00:20:16,920"
			},
			"offsets": {
				"from": 1206920,
				"to": 1216920
			},
			"text": " One of them is that blocks are kind of entries in this graph structure, and your fork choice is walking along the blocks, but the other rule that blocks have is blocks are voting."
		},
		{
			"timestamps": {
				"from": "00:20:16,920",
				"to": "00:20:26,920"
			},
			"offsets": {
				"from": 1216920,
				"to": 1226920
			},
			"text": " Now, in LMD Ghost, as we use it, blocks and messages will be split, and I'll get into this and why we do this later."
		},
		{
			"timestamps": {
				"from": "00:20:26,920",
				"to": "00:20:37,920"
			},
			"offsets": {
				"from": 1226920,
				"to": 1237920
			},
			"text": " So, as in Ghost, start from the genesis, walk up the tree at each branch, choose the child that has more latest message, latest message is supporting it, and keep going until you find the head."
		},
		{
			"timestamps": {
				"from": "00:20:37,920",
				"to": "00:21:06,920"
			},
			"offsets": {
				"from": 1237920,
				"to": 1266920
			},
			"text": " So, why LMD Ghost, right, so this here we're in should bringing back an LMD Ghost as more like it actually exists in Ethereum 2.0, and what we have here is you have blocks and votes, aka attestations, as kind of two separate concepts, right, so you have a block, and then you have five votes, you have a block, or in reality, this might be could be anywhere up"
		},
		{
			"timestamps": {
				"from": "00:21:06,920",
				"to": "00:21:12,920"
			},
			"offsets": {
				"from": 1266920,
				"to": 1272920
			},
			"text": " to about 50,000 votes, then you have a block, you have a huge pile of votes, a block, a huge pile of votes."
		},
		{
			"timestamps": {
				"from": "00:21:12,920",
				"to": "00:21:27,920"
			},
			"offsets": {
				"from": 1272920,
				"to": 1287920
			},
			"text": " Now, over here, you might have two different competing blocks, and this could be because one of the blocks just got delayed, and the next proposal created the block, and this block appeared, this could be because the proposal was malicious and created two competing blocks, we don't know."
		},
		{
			"timestamps": {
				"from": "00:21:27,920",
				"to": "00:21:47,920"
			},
			"offsets": {
				"from": 1287920,
				"to": 1307920
			},
			"text": " So, now, everyone who is voting chooses either this side or this side, and if they choose this side, then this block wins, and then you keep on going, right, so the Ghost Fortress rule is going to be counting these attestations, and specifically it counts latest attestations."
		},
		{
			"timestamps": {
				"from": "00:21:47,920",
				"to": "00:22:04,920"
			},
			"offsets": {
				"from": 1307920,
				"to": 1324920
			},
			"text": " So, if this is all inside of one epoch, then there's no difference because everyone only votes once per epoch, but if you imagine that, say, this and this are two separate epochs, then maybe this attestation and this attestation come from the same validator, in which case you don't count this one, but you count this one."
		},
		{
			"timestamps": {
				"from": "00:22:04,920",
				"to": "00:22:17,920"
			},
			"offsets": {
				"from": 1324920,
				"to": 1337920
			},
			"text": " Now, in general, if a chain is progressing, then if you vote once over here, then the next vote that you make is going to be a descendant of this block, right?"
		},
		{
			"timestamps": {
				"from": "00:22:17,920",
				"to": "00:22:23,920"
			},
			"offsets": {
				"from": 1337920,
				"to": 1343920
			},
			"text": " So, most of the time, validators aren't changing their opinion, they're extending their opinion."
		},
		{
			"timestamps": {
				"from": "00:22:23,920",
				"to": "00:22:38,920"
			},
			"offsets": {
				"from": 1343920,
				"to": 1358920
			},
			"text": " So, if you made an attestation supporting this block, then you're saying, \"My opinion is this block is the best.\" If you then later make an attestation over here saying, \"My opinion, this block is the best,\" then you're not disagreeing with your opinion before, right?"
		},
		{
			"timestamps": {
				"from": "00:22:38,920",
				"to": "00:22:50,920"
			},
			"offsets": {
				"from": 1358920,
				"to": 1370920
			},
			"text": " An opinion that this block is the best is also an opinion that this block is the best, and that this block is the best, and that this block is the best, but before, you did not have an opinion on these guys, and now you do have an opinion on these guys."
		},
		{
			"timestamps": {
				"from": "00:22:50,920",
				"to": "00:23:00,920"
			},
			"offsets": {
				"from": 1370920,
				"to": 1380920
			},
			"text": " But maybe you made an attestation here, then you make this attestation, then you realize this chain wins, and so at some point later you do change your mind."
		},
		{
			"timestamps": {
				"from": "00:23:00,920",
				"to": "00:23:03,920"
			},
			"offsets": {
				"from": 1380920,
				"to": 1383920
			},
			"text": " So, like, both of these things are possible."
		},
		{
			"timestamps": {
				"from": "00:23:03,920",
				"to": "00:23:10,920"
			},
			"offsets": {
				"from": 1383920,
				"to": 1390920
			},
			"text": " Now, the reason why we do this is because this allows basically parallel confirmations, right?"
		},
		{
			"timestamps": {
				"from": "00:23:10,920",
				"to": "00:23:25,920"
			},
			"offsets": {
				"from": 1390920,
				"to": 1405920
			},
			"text": " So, in a kind of probabilistic, fortuous, role, there's this general concept of confirmations, like basically how many kind of units of information in favor of a block are there, and how many do you want to wait for to achieve a certain degree of safety?"
		},
		{
			"timestamps": {
				"from": "00:23:25,920",
				"to": "00:23:31,920"
			},
			"offsets": {
				"from": 1405920,
				"to": 1411920
			},
			"text": " In Bitcoin, you would wait for six, and that means waiting for six blocks."
		},
		{
			"timestamps": {
				"from": "00:23:31,920",
				"to": "00:23:39,920"
			},
			"offsets": {
				"from": 1411920,
				"to": 1419920
			},
			"text": " In Ethereum, like you would wait for 12, so you would wait for 12 blocks, but here, you basically get like tens of thousands of attestations happening in parallel."
		},
		{
			"timestamps": {
				"from": "00:23:39,920",
				"to": "00:23:50,920"
			},
			"offsets": {
				"from": 1419920,
				"to": 1430920
			},
			"text": " And so, you get a very high assurance that a block is like overwhelmingly likely to be included in the chain, pretty much like in the average case after one single slot."
		},
		{
			"timestamps": {
				"from": "00:23:50,920",
				"to": "00:24:00,920"
			},
			"offsets": {
				"from": 1430920,
				"to": 1440920
			},
			"text": " So, the goal here basically is to give the same level of security after 10 seconds that a traditional proof of work chain would only give after minutes or hours."
		},
		{
			"timestamps": {
				"from": "00:24:00,920",
				"to": "00:24:09,920"
			},
			"offsets": {
				"from": 1440920,
				"to": 1449920
			},
			"text": " And because you have messages happening in parallel, there's no way that all of them are like you can even possibly make all of them form a chain if you try."
		},
		{
			"timestamps": {
				"from": "00:24:09,920",
				"to": "00:24:20,920"
			},
			"offsets": {
				"from": 1449920,
				"to": 1460920
			},
			"text": " And so, a longest chain rule is not even sensible, and LMD Ghost is the obvious approach for how to take into account the information from all of these validators."
		},
		{
			"timestamps": {
				"from": "00:24:20,920",
				"to": "00:24:35,920"
			},
			"offsets": {
				"from": 1460920,
				"to": 1475920
			},
			"text": " So, why LMD Ghost? Right? So, one reason is that the longest chain rules cannot take into account information from parallel testers and ghost-based rules that do."
		},
		{
			"timestamps": {
				"from": "00:24:35,920",
				"to": "00:24:45,920"
			},
			"offsets": {
				"from": 1475920,
				"to": 1485920
			},
			"text": " Another interesting property that LMD Ghost has is it has a property that the minority can never beat the majority regardless of how many messages they sign."
		},
		{
			"timestamps": {
				"from": "00:24:45,920",
				"to": "00:25:04,920"
			},
			"offsets": {
				"from": 1485920,
				"to": 1504920
			},
			"text": " So, for example, suppose that you have a structure that looks like this, and then you have these four validators that are all on this chain, and these four validators have all agreed that this chain is best, and you have this one kind of a lone attacker."
		},
		{
			"timestamps": {
				"from": "00:25:04,920",
				"to": "00:25:08,920"
			},
			"offsets": {
				"from": 1504920,
				"to": 1508920
			},
			"text": " Now, let's suppose that ACD and you just get knocked offline, they disappear."
		},
		{
			"timestamps": {
				"from": "00:25:08,920",
				"to": "00:25:19,920"
			},
			"offsets": {
				"from": 1508920,
				"to": 1519920
			},
			"text": " Then, if you use traditional ghosts, right? Eventually, B could just make blocks, B could make blocks, B could make blocks, and eventually B's chain would be longer and B would win."
		},
		{
			"timestamps": {
				"from": "00:25:19,920",
				"to": "00:25:37,920"
			},
			"offsets": {
				"from": 1519920,
				"to": 1537920
			},
			"text": " But in LMD Ghost, if all four of these guys get knocked offline, then B could keep on making blocks, and B could keep on making blocks for a long time, but this chain is still going to continue to be the winning chain because it's not about the quantity of messages,"
		},
		{
			"timestamps": {
				"from": "00:25:37,920",
				"to": "00:25:42,920"
			},
			"offsets": {
				"from": 1537920,
				"to": 1542920
			},
			"text": " it's about the quantity of distinct supporters of one chain versus the other."
		},
		{
			"timestamps": {
				"from": "00:25:42,920",
				"to": "00:25:49,920"
			},
			"offsets": {
				"from": 1542920,
				"to": 1549920
			},
			"text": " And if these four validators don't make any new messages, then the system assumes that they're just supporting these four things forever."
		},
		{
			"timestamps": {
				"from": "00:25:49,920",
				"to": "00:26:03,920"
			},
			"offsets": {
				"from": 1549920,
				"to": 1563920
			},
			"text": " So, this kind of insight, this idea that unlike long-as-chain rules, LMD Ghost has this mechanism where if it gets into this configuration, you just can't move over to this chain,"
		},
		{
			"timestamps": {
				"from": "00:26:03,920",
				"to": "00:26:10,920"
			},
			"offsets": {
				"from": 1563920,
				"to": 1570920
			},
			"text": " it's not going to be a long-as-chain problem, but it's not going to be a long-as-chain problem."
		},
		{
			"timestamps": {
				"from": "00:26:10,920",
				"to": "00:26:20,920"
			},
			"offsets": {
				"from": 1570920,
				"to": 1580920
			},
			"text": " So, I think that's a little bit of a little bit of a little bit of a little bit of a little bit of a little bit of a little bit of a long-as-chain problem."
		},
		{
			"timestamps": {
				"from": "00:26:20,920",
				"to": "00:26:35,920"
			},
			"offsets": {
				"from": 1580920,
				"to": 1595920
			},
			"text": " So, this is interesting. Now, let's look at some edge cases of LMD Ghost, and specifically LMD Ghost's interaction with the finality gadget."
		},
		{
			"timestamps": {
				"from": "00:26:35,920",
				"to": "00:26:48,920"
			},
			"offsets": {
				"from": 1595920,
				"to": 1608920
			},
			"text": " So, saved message attacks are one kind of example of an edge case first. So, basically, here's the intuition behind the saved message attack."
		},
		{
			"timestamps": {
				"from": "00:26:48,920",
				"to": "00:27:02,920"
			},
			"offsets": {
				"from": 1608920,
				"to": 1622920
			},
			"text": " So, a validator is allowed to make a maximum of one attestation in each epoch, and the way you enforce that is that every attestation has to come with a tag that says this is the epoch I come from,"
		},
		{
			"timestamps": {
				"from": "00:27:02,920",
				"to": "00:27:08,920"
			},
			"offsets": {
				"from": 1622920,
				"to": 1628920
			},
			"text": " and if you send two distinct attestations with the same epoch tag, then you can get slashed for it."
		},
		{
			"timestamps": {
				"from": "00:27:08,920",
				"to": "00:27:17,920"
			},
			"offsets": {
				"from": 1628920,
				"to": 1637920
			},
			"text": " Now, a thing that you can do is you can say, \"Well, I'm going to just drop off line for any epochs, and now I have historical tags that I've unused,"
		},
		{
			"timestamps": {
				"from": "00:27:17,920",
				"to": "00:27:24,920"
			},
			"offsets": {
				"from": 1637920,
				"to": 1644920
			},
			"text": " and then within one epoch I can just send all of those messages with all of those tags all at once.\""
		},
		{
			"timestamps": {
				"from": "00:27:24,920",
				"to": "00:27:39,920"
			},
			"offsets": {
				"from": 1644920,
				"to": 1659920
			},
			"text": " So, a worst case, traditional ghost is not very good at handling this kind of situation. LMD Ghost is better because at least those end votes do not stack on top of each other,"
		},
		{
			"timestamps": {
				"from": "00:27:39,920",
				"to": "00:27:49,920"
			},
			"offsets": {
				"from": 1659920,
				"to": 1669920
			},
			"text": " but LMD Ghost is still imperfect because with this kind of mechanism, well, you have the ability to kind of influence, basically make the fork choice go back and forth."
		},
		{
			"timestamps": {
				"from": "00:27:49,920",
				"to": "00:27:53,920"
			},
			"offsets": {
				"from": 1669920,
				"to": 1673920
			},
			"text": " And you can say, \"I vote for you, now I vote for you, now I vote for you, now I vote for you.\""
		},
		{
			"timestamps": {
				"from": "00:27:53,920",
				"to": "00:28:01,920"
			},
			"offsets": {
				"from": 1673920,
				"to": 1681920
			},
			"text": " And you can repeat this a bunch of times in a single epoch, and this could be used for some attacks to delay liveness and delay finality."
		},
		{
			"timestamps": {
				"from": "00:28:01,920",
				"to": "00:28:12,920"
			},
			"offsets": {
				"from": 1681920,
				"to": 1692920
			},
			"text": " So, a proposed solution here is FMD Ghost, which basically says clients only look at messages kind of tagged with the current to a previous epoch,"
		},
		{
			"timestamps": {
				"from": "00:28:12,920",
				"to": "00:28:22,920"
			},
			"offsets": {
				"from": 1692920,
				"to": 1702920
			},
			"text": " and this prevents kind of saving up more than two epochs from being useful for any kind of attack."
		},
		{
			"timestamps": {
				"from": "00:28:22,920",
				"to": "00:28:32,920"
			},
			"offsets": {
				"from": 1702920,
				"to": 1712920
			},
			"text": " Interaction between LMD Ghost and FFG. So, we use both LMD Ghost and DFFG in this kind of combined way."
		},
		{
			"timestamps": {
				"from": "00:28:32,920",
				"to": "00:28:39,920"
			},
			"offsets": {
				"from": 1712920,
				"to": 1719920
			},
			"text": " Basically, LMD Ghost provides block by block consensus, and FFG provides finality."
		},
		{
			"timestamps": {
				"from": "00:28:39,920",
				"to": "00:28:43,920"
			},
			"offsets": {
				"from": 1719920,
				"to": 1723920
			},
			"text": " And you do have to kind of glue these algorithms together, right?"
		},
		{
			"timestamps": {
				"from": "00:28:43,920",
				"to": "00:28:50,920"
			},
			"offsets": {
				"from": 1723920,
				"to": 1730920
			},
			"text": " So, our actual fork choice rule basically says, first, select the last finalized block you were aware of."
		},
		{
			"timestamps": {
				"from": "00:28:50,920",
				"to": "00:28:55,920"
			},
			"offsets": {
				"from": 1730920,
				"to": 1735920
			},
			"text": " And at the beginning, this is the genesis. Eventually, you become aware of new finalized blocks."
		},
		{
			"timestamps": {
				"from": "00:28:55,920",
				"to": "00:29:03,920"
			},
			"offsets": {
				"from": 1735920,
				"to": 1743920
			},
			"text": " Second, you select the highest epoch, the most recent justified block, that's the descendant of the last finalized block."
		},
		{
			"timestamps": {
				"from": "00:29:03,920",
				"to": "00:29:08,920"
			},
			"offsets": {
				"from": 1743920,
				"to": 1748920
			},
			"text": " And then third, starting from the last justified block, you run LMD Ghost to find the head."
		},
		{
			"timestamps": {
				"from": "00:29:08,920",
				"to": "00:29:17,920"
			},
			"offsets": {
				"from": 1748920,
				"to": 1757920
			},
			"text": " So, it's basically running FFG first to figure out the last justified block, and then running LMD Ghost from there to find what the head is."
		},
		{
			"timestamps": {
				"from": "00:29:17,920",
				"to": "00:29:23,920"
			},
			"offsets": {
				"from": 1757920,
				"to": 1763920
			},
			"text": " Now, this does open room for certain kinds of, like, bounce attacks."
		},
		{
			"timestamps": {
				"from": "00:29:23,920",
				"to": "00:29:30,920"
			},
			"offsets": {
				"from": 1763920,
				"to": 1770920
			},
			"text": " So, basically, the issue here is that you might have a situation where you have one block on one side,"
		},
		{
			"timestamps": {
				"from": "00:29:30,920",
				"to": "00:29:36,920"
			},
			"offsets": {
				"from": 1770920,
				"to": 1776920
			},
			"text": " and you have a block that's winning the fork choice rule, but then you have some block over here with 65% of the votes,"
		},
		{
			"timestamps": {
				"from": "00:29:36,920",
				"to": "00:29:42,920"
			},
			"offsets": {
				"from": 1776920,
				"to": 1782920
			},
			"text": " and then the attacker has a few votes, and then the attacker waits until some block here gets to 65%,"
		},
		{
			"timestamps": {
				"from": "00:29:42,920",
				"to": "00:29:50,920"
			},
			"offsets": {
				"from": 1782920,
				"to": 1790920
			},
			"text": " and then the attacker releases a few votes here. This block becomes justified, and so suddenly the fork choice rule kind of flips over from here to here,"
		},
		{
			"timestamps": {
				"from": "00:29:50,920",
				"to": "00:30:00,920"
			},
			"offsets": {
				"from": 1790920,
				"to": 1800920
			},
			"text": " and then people build over here, and then when this block starts getting close to 65%, then this blocks at 65% the attacker releases another 5%."
		},
		{
			"timestamps": {
				"from": "00:30:00,920",
				"to": "00:30:06,920"
			},
			"offsets": {
				"from": 1800920,
				"to": 1806920
			},
			"text": " Now, this is justified. Now, this holds several moves over here, and so you can kind of bounce the chain around."
		},
		{
			"timestamps": {
				"from": "00:30:06,920",
				"to": "00:30:14,920"
			},
			"offsets": {
				"from": 1806920,
				"to": 1814920
			},
			"text": " And there's a couple of solutions that are intended to mitigate this kind of attack."
		},
		{
			"timestamps": {
				"from": "00:30:14,920",
				"to": "00:30:23,920"
			},
			"offsets": {
				"from": 1814920,
				"to": 1823920
			},
			"text": " One of them has to, basically, they all have to do with kind of delaying when new justified epochs have an effect."
		},
		{
			"timestamps": {
				"from": "00:30:23,920",
				"to": "00:30:31,920"
			},
			"offsets": {
				"from": 1823920,
				"to": 1831920
			},
			"text": " So, one of them would say, in most cases, delay until it's a delay switching until an epoch boundary."
		},
		{
			"timestamps": {
				"from": "00:30:31,920",
				"to": "00:30:38,920"
			},
			"offsets": {
				"from": 1831920,
				"to": 1838920
			},
			"text": " So, either finalization happens close to the start of an epoch, or it happens much late, or you wait until the end."
		},
		{
			"timestamps": {
				"from": "00:30:38,920",
				"to": "00:30:53,920"
			},
			"offsets": {
				"from": 1838920,
				"to": 1853920
			},
			"text": " Or another idea is that a checkpoint can only be used to, as part of the fork choice, until, like, basically, the height since the last justified epoch multiplies by 3,"
		},
		{
			"timestamps": {
				"from": "00:30:53,920",
				"to": "00:31:00,920"
			},
			"offsets": {
				"from": 1853920,
				"to": 1860920
			},
			"text": " and this ensures that there's kind of periods of 3 epochs eventually within which the fork choice is not going to change,"
		},
		{
			"timestamps": {
				"from": "00:31:00,920",
				"to": "00:31:03,920"
			},
			"offsets": {
				"from": 1860920,
				"to": 1863920
			},
			"text": " and you have the opportunity to finalize something."
		},
		{
			"timestamps": {
				"from": "00:31:03,920",
				"to": "00:31:12,920"
			},
			"offsets": {
				"from": 1863920,
				"to": 1872920
			},
			"text": " So, that, like, LMT GoStick is not really more complicated than this, right?"
		},
		{
			"timestamps": {
				"from": "00:31:12,920",
				"to": "00:31:19,920"
			},
			"offsets": {
				"from": 1872920,
				"to": 1879920
			},
			"text": " It basically is you have a block, and if that block has multiple children to figure out whether you go to one child or the other child,"
		},
		{
			"timestamps": {
				"from": "00:31:19,920",
				"to": "00:31:25,920"
			},
			"offsets": {
				"from": 1879920,
				"to": 1885920
			},
			"text": " you choose the child that has the most validators that kind of most recently supported that block,"
		},
		{
			"timestamps": {
				"from": "00:31:25,920",
				"to": "00:31:33,920"
			},
			"offsets": {
				"from": 1885920,
				"to": 1893920
			},
			"text": " and you can use that by itself as a fork choice rule, and you have a bunch of validators that are making these messages in parallel,"
		},
		{
			"timestamps": {
				"from": "00:31:33,920",
				"to": "00:31:40,920"
			},
			"offsets": {
				"from": 1893920,
				"to": 1900920
			},
			"text": " and each of those messages contributes to the fork choice rule, allowing the chain to kind of soft converge very quickly,"
		},
		{
			"timestamps": {
				"from": "00:31:40,920",
				"to": "00:31:49,920"
			},
			"offsets": {
				"from": 1900920,
				"to": 1909920
			},
			"text": " and after those messages are also simultaneously votes in FFG, and so after about one epoch, the block gets justified,"
		},
		{
			"timestamps": {
				"from": "00:31:49,920",
				"to": "00:31:58,920"
			},
			"offsets": {
				"from": 1909920,
				"to": 1918920
			},
			"text": " and then which kind of interventions it in the fork choice further, and then after one more epoch, it gets finalized."
		},
		{
			"timestamps": {
				"from": "00:31:58,920",
				"to": "00:32:06,920"
			},
			"offsets": {
				"from": 1918920,
				"to": 1926920
			},
			"text": " [applause]"
		},
		{
			"timestamps": {
				"from": "00:32:12,920",
				"to": "00:32:20,920"
			},
			"offsets": {
				"from": 1932920,
				"to": 1940920
			},
			"text": " Hi, I'm Dakar Fiest, and I'm going to talk about randomness in Ethereum 2.0."
		},
		{
			"timestamps": {
				"from": "00:32:20,920",
				"to": "00:32:23,920"
			},
			"offsets": {
				"from": 1940920,
				"to": 1943920
			},
			"text": " Oh, how do I... is there a..."
		},
		{
			"timestamps": {
				"from": "00:32:23,920",
				"to": "00:32:25,920"
			},
			"offsets": {
				"from": 1943920,
				"to": 1945920
			},
			"text": " [inaudible]"
		},
		{
			"timestamps": {
				"from": "00:32:25,920",
				"to": "00:32:26,920"
			},
			"offsets": {
				"from": 1945920,
				"to": 1946920
			},
			"text": " Huh?"
		},
		{
			"timestamps": {
				"from": "00:32:26,920",
				"to": "00:32:29,920"
			},
			"offsets": {
				"from": 1946920,
				"to": 1949920
			},
			"text": " [inaudible]"
		},
		{
			"timestamps": {
				"from": "00:32:29,920",
				"to": "00:32:31,920"
			},
			"offsets": {
				"from": 1949920,
				"to": 1951920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "00:32:31,920",
				"to": "00:32:40,920"
			},
			"offsets": {
				"from": 1951920,
				"to": 1960920
			},
			"text": " So, basically, I quickly want to summarize why randomness is such an important problem in any kind of proof-of-stake protocol,"
		},
		{
			"timestamps": {
				"from": "00:32:40,920",
				"to": "00:32:42,920"
			},
			"offsets": {
				"from": 1960920,
				"to": 1962920
			},
			"text": " and ETH 2.0."
		},
		{
			"timestamps": {
				"from": "00:32:42,920",
				"to": "00:32:48,920"
			},
			"offsets": {
				"from": 1962920,
				"to": 1968920
			},
			"text": " I'm going to talk about randomness, which is our first and, like,"
		},
		{
			"timestamps": {
				"from": "00:32:48,920",
				"to": "00:32:51,920"
			},
			"offsets": {
				"from": 1968920,
				"to": 1971920
			},
			"text": " ordinary source of randomness."
		},
		{
			"timestamps": {
				"from": "00:32:51,920",
				"to": "00:32:58,920"
			},
			"offsets": {
				"from": 1971920,
				"to": 1978920
			},
			"text": " Quickly, like, also go into the issues that this has, and why, like, in the final protocol in a few years,"
		},
		{
			"timestamps": {
				"from": "00:32:58,920",
				"to": "00:33:04,920"
			},
			"offsets": {
				"from": 1978920,
				"to": 1984920
			},
			"text": " we're going to use very valuable delay functions to improve this source of randomness."
		},
		{
			"timestamps": {
				"from": "00:33:04,920",
				"to": "00:33:10,920"
			},
			"offsets": {
				"from": 1984920,
				"to": 1990920
			},
			"text": " So why is it so important to have a good source of randomness and proof-of-stake?"
		},
		{
			"timestamps": {
				"from": "00:33:10,920",
				"to": "00:33:18,920"
			},
			"offsets": {
				"from": 1990920,
				"to": 1998920
			},
			"text": " Well, so we need to do several things randomly, and we don't have this kind of proof-of-work randomness that we have in"
		},
		{
			"timestamps": {
				"from": "00:33:18,920",
				"to": "00:33:25,920"
			},
			"offsets": {
				"from": 1998920,
				"to": 2005920
			},
			"text": " proof-of-work chains anymore, so we need to select proposals, we need to select communities,"
		},
		{
			"timestamps": {
				"from": "00:33:25,920",
				"to": "00:33:33,920"
			},
			"offsets": {
				"from": 2005920,
				"to": 2013920
			},
			"text": " and we need also, like, as an extension, like, some contracts on chain want to use randomness,"
		},
		{
			"timestamps": {
				"from": "00:33:33,920",
				"to": "00:33:37,920"
			},
			"offsets": {
				"from": 2013920,
				"to": 2017920
			},
			"text": " and we need to provide randomness for these as well."
		},
		{
			"timestamps": {
				"from": "00:33:37,920",
				"to": "00:33:48,920"
			},
			"offsets": {
				"from": 2017920,
				"to": 2028920
			},
			"text": " And so, for each of these, like, good randomness required for proposals, because we need to be fair,"
		},
		{
			"timestamps": {
				"from": "00:33:48,920",
				"to": "00:33:56,920"
			},
			"offsets": {
				"from": 2028920,
				"to": 2036920
			},
			"text": " like, we distribute rewards to them, and also, we want to protect against denial-of-service attacks."
		},
		{
			"timestamps": {
				"from": "00:33:56,920",
				"to": "00:34:05,920"
			},
			"offsets": {
				"from": 2036920,
				"to": 2045920
			},
			"text": " But it's especially important for the committees that attest to the sharp chains,"
		},
		{
			"timestamps": {
				"from": "00:34:05,920",
				"to": "00:34:16,920"
			},
			"offsets": {
				"from": 2045920,
				"to": 2056920
			},
			"text": " because if the committees are not honest, like, the beacon chain cannot check the state transitions of all the sharp chains,"
		},
		{
			"timestamps": {
				"from": "00:34:16,920",
				"to": "00:34:21,920"
			},
			"offsets": {
				"from": 2056920,
				"to": 2061920
			},
			"text": " because that's the whole point of sharding, that you don't have this huge load on the beacon chain,"
		},
		{
			"timestamps": {
				"from": "00:34:21,920",
				"to": "00:34:26,920"
			},
			"offsets": {
				"from": 2061920,
				"to": 2066920
			},
			"text": " but that means we cannot have to trust these committees, to be honest."
		},
		{
			"timestamps": {
				"from": "00:34:26,920",
				"to": "00:34:34,920"
			},
			"offsets": {
				"from": 2066920,
				"to": 2074920
			},
			"text": " And we can remedy against an incorrect vote by a committee using thought proofs, but we don't want to have too many of these."
		},
		{
			"timestamps": {
				"from": "00:34:34,920",
				"to": "00:34:44,920"
			},
			"offsets": {
				"from": 2074920,
				"to": 2084920
			},
			"text": " And finally, we also want that smart contacts can use randomness, and, yeah, some applications, like lotteries,"
		},
		{
			"timestamps": {
				"from": "00:34:44,920",
				"to": "00:34:49,920"
			},
			"offsets": {
				"from": 2084920,
				"to": 2089920
			},
			"text": " or so might attach a huge value to random numbers, and, like, if you can somehow attack them,"
		},
		{
			"timestamps": {
				"from": "00:34:49,920",
				"to": "00:34:54,920"
			},
			"offsets": {
				"from": 2089920,
				"to": 2094920
			},
			"text": " that might degrade the randomness in the whole system."
		},
		{
			"timestamps": {
				"from": "00:34:54,920",
				"to": "00:35:07,920"
			},
			"offsets": {
				"from": 2094920,
				"to": 2107920
			},
			"text": " Right, and then a bit further on the committees, why it is so important, this is, like, a very central issue there."
		},
		{
			"timestamps": {
				"from": "00:35:07,920",
				"to": "00:35:17,920"
			},
			"offsets": {
				"from": 2107920,
				"to": 2117920
			},
			"text": " Like, if the problem is that we want to minimize the probability for having a dishonest committee,"
		},
		{
			"timestamps": {
				"from": "00:35:17,920",
				"to": "00:35:24,920"
			},
			"offsets": {
				"from": 2117920,
				"to": 2124920
			},
			"text": " and, like, a bad committee could potentially create a link to an invalid or non-existent block."
		},
		{
			"timestamps": {
				"from": "00:35:24,920",
				"to": "00:35:32,920"
			},
			"offsets": {
				"from": 2124920,
				"to": 2132920
			},
			"text": " And a fraud proof would mean that you have to revert the state of the beacon chain until, like, when that happened."
		},
		{
			"timestamps": {
				"from": "00:35:32,920",
				"to": "00:35:40,920"
			},
			"offsets": {
				"from": 2132920,
				"to": 2140920
			},
			"text": " So, like, the probability, if you have a committee size of 128, then it's quite small, 5 times 10 to the minus 15."
		},
		{
			"timestamps": {
				"from": "00:35:40,920",
				"to": "00:35:48,920"
			},
			"offsets": {
				"from": 2140920,
				"to": 2148920
			},
			"text": " But this kind of, kind of, of course, completely change as soon as someone can bias the randomness that we're using."
		},
		{
			"timestamps": {
				"from": "00:35:48,920",
				"to": "00:35:56,920"
			},
			"offsets": {
				"from": 2148920,
				"to": 2156920
			},
			"text": " Right, so the idea behind run now is, let's say, like, we have n people who want to generate a random number,"
		},
		{
			"timestamps": {
				"from": "00:35:56,920",
				"to": "00:36:06,920"
			},
			"offsets": {
				"from": 2156920,
				"to": 2166920
			},
			"text": " everyone goes into a room, everyone contributes one random value, xi, you compute the x of all these values."
		},
		{
			"timestamps": {
				"from": "00:36:06,920",
				"to": "00:36:14,920"
			},
			"offsets": {
				"from": 2166920,
				"to": 2174920
			},
			"text": " Right, so that sounds like it could generate good randomness, but the problem with it is the last player can just change their value"
		},
		{
			"timestamps": {
				"from": "00:36:14,920",
				"to": "00:36:22,920"
			},
			"offsets": {
				"from": 2174920,
				"to": 2182920
			},
			"text": " after they have seen everyone else's value, and then they change their choice and, like, get whatever they want."
		},
		{
			"timestamps": {
				"from": "00:36:22,920",
				"to": "00:36:26,920"
			},
			"offsets": {
				"from": 2182920,
				"to": 2186920
			},
			"text": " Okay, so let's improve this."
		},
		{
			"timestamps": {
				"from": "00:36:26,920",
				"to": "00:36:41,920"
			},
			"offsets": {
				"from": 2186920,
				"to": 2201920
			},
			"text": " So, with commit reveal, we can start the same, they all go into a room, and they each commit to their value xi by telling everyone the hash,"
		},
		{
			"timestamps": {
				"from": "00:36:41,920",
				"to": "00:36:45,920"
			},
			"offsets": {
				"from": 2201920,
				"to": 2205920
			},
			"text": " and then they reveal their value, we compute x of those values again."
		},
		{
			"timestamps": {
				"from": "00:36:45,920",
				"to": "00:36:54,920"
			},
			"offsets": {
				"from": 2205920,
				"to": 2214920
			},
			"text": " Okay, so in this case, this cannot be manipulated because we force everyone to reveal their value because they're all in the same room."
		},
		{
			"timestamps": {
				"from": "00:36:54,920",
				"to": "00:37:05,920"
			},
			"offsets": {
				"from": 2214920,
				"to": 2225920
			},
			"text": " But in the real world, the problem is anyone can stop this process by not actually revealing their preimage, and then we can't compute this x or."
		},
		{
			"timestamps": {
				"from": "00:37:05,920",
				"to": "00:37:10,920"
			},
			"offsets": {
				"from": 2225920,
				"to": 2230920
			},
			"text": " Right, so run now basically builds on this idea."
		},
		{
			"timestamps": {
				"from": "00:37:10,920",
				"to": "00:37:27,920"
			},
			"offsets": {
				"from": 2230920,
				"to": 2247920
			},
			"text": " So we make everyone who's a validator has already commented to something, in our case it's actually their signature, because we have deterministic signature scheme, BLS."
		},
		{
			"timestamps": {
				"from": "00:37:27,920",
				"to": "00:37:39,920"
			},
			"offsets": {
				"from": 2247920,
				"to": 2259920
			},
			"text": " We can just use a signature as a reveal, everyone can check that this was the correct signature, so you sign the epoch, denoted by e here, and that's the reveals."
		},
		{
			"timestamps": {
				"from": "00:37:39,920",
				"to": "00:37:56,920"
			},
			"offsets": {
				"from": 2259920,
				"to": 2276920
			},
			"text": " And then what can of course happen is that someone does not produce a block, and so they haven't revealed their randomness, and then we cannot include them in this x or."
		},
		{
			"timestamps": {
				"from": "00:37:56,920",
				"to": "00:38:06,920"
			},
			"offsets": {
				"from": 2276920,
				"to": 2286920
			},
			"text": " Okay, so that is the basic process of run now, and this is used as a first instance to generate randomness, e is 2.0."
		},
		{
			"timestamps": {
				"from": "00:38:06,920",
				"to": "00:38:17,920"
			},
			"offsets": {
				"from": 2286920,
				"to": 2297920
			},
			"text": " It only has one problem basically, that whoever is last in an epoch can just choose to not produce a block."
		},
		{
			"timestamps": {
				"from": "00:38:17,920",
				"to": "00:38:30,920"
			},
			"offsets": {
				"from": 2297920,
				"to": 2310920
			},
			"text": " So basically what this means is, if I don't like the result of whatever this reveal that I'm going to contribute is, like I can compute whatever the mix would be."
		},
		{
			"timestamps": {
				"from": "00:38:30,920",
				"to": "00:38:37,920"
			},
			"offsets": {
				"from": 2310920,
				"to": 2317920
			},
			"text": " And then I just don't contribute, and it's as if I would get another roll of dice essentially."
		},
		{
			"timestamps": {
				"from": "00:38:37,920",
				"to": "00:38:46,920"
			},
			"offsets": {
				"from": 2317920,
				"to": 2326920
			},
			"text": " And like you can, that can be worse if you control several validators in a row of course then more bias is possible."
		},
		{
			"timestamps": {
				"from": "00:38:46,920",
				"to": "00:38:58,920"
			},
			"offsets": {
				"from": 2326920,
				"to": 2338920
			},
			"text": " So like there was one nice analysis by Vitalik, only three search where he showed that if you just have a longest chain fork choice rule, then with just 36% of the stake,"
		},
		{
			"timestamps": {
				"from": "00:38:58,920",
				"to": "00:39:07,920"
			},
			"offsets": {
				"from": 2338920,
				"to": 2347920
			},
			"text": " you can actually completely take over a chain that chooses their blocks based on run now, their block producers."
		},
		{
			"timestamps": {
				"from": "00:39:07,920",
				"to": "00:39:21,920"
			},
			"offsets": {
				"from": 2347920,
				"to": 2361920
			},
			"text": " Right, so what run now is sort of our first source of randomness in the beginning, it's obviously as I've shown not perfect, but at the moment we don't have anything better."
		},
		{
			"timestamps": {
				"from": "00:39:21,920",
				"to": "00:39:27,920"
			},
			"offsets": {
				"from": 2361920,
				"to": 2367920
			},
			"text": " So like in the future what we're going to build is honest, like so-called verifiable delay function."
		},
		{
			"timestamps": {
				"from": "00:39:27,920",
				"to": "00:39:41,920"
			},
			"offsets": {
				"from": 2367920,
				"to": 2381920
			},
			"text": " The idea is that you have a function f of x that produces a result y and a proof pi such that computing this function takes a long serial time."
		},
		{
			"timestamps": {
				"from": "00:39:41,920",
				"to": "00:39:48,920"
			},
			"offsets": {
				"from": 2381920,
				"to": 2388920
			},
			"text": " Right, so you can't speed it up by having many processors, it's like you have to run a serial on one processor."
		},
		{
			"timestamps": {
				"from": "00:39:48,920",
				"to": "00:39:56,920"
			},
			"offsets": {
				"from": 2388920,
				"to": 2396920
			},
			"text": " And then checking the result that, this result y is correct using the proof pi is fast."
		},
		{
			"timestamps": {
				"from": "00:39:56,920",
				"to": "00:40:07,920"
			},
			"offsets": {
				"from": 2396920,
				"to": 2407920
			},
			"text": " And so one example which is actually the one that we're very likely going to end up using is the squaring modulo and RSA modulo."
		},
		{
			"timestamps": {
				"from": "00:40:07,920",
				"to": "00:40:20,920"
			},
			"offsets": {
				"from": 2407920,
				"to": 2420920
			},
			"text": " So power taking many squares of x modulo m where m is p times q is like one way to construct such a verifiable delay function."
		},
		{
			"timestamps": {
				"from": "00:40:20,920",
				"to": "00:40:36,920"
			},
			"offsets": {
				"from": 2420920,
				"to": 2436920
			},
			"text": " And by using the vdf output on run now, vdf, sorry, the vdf on run now, so using the run now rather as input for the vdf, the last revealer loses the advantage and the way that works can be illustrated here."
		},
		{
			"timestamps": {
				"from": "00:40:36,920",
				"to": "00:40:43,920"
			},
			"offsets": {
				"from": 2436920,
				"to": 2443920
			},
			"text": " So basically what happens is you have this last block of an epoch that starts the vdf computation."
		},
		{
			"timestamps": {
				"from": "00:40:43,920",
				"to": "00:40:57,920"
			},
			"offsets": {
				"from": 2443920,
				"to": 2457920
			},
			"text": " And so later the vdf computation will have an output and that will be used as randomness on chain, but by that time, there will already be many more blocks."
		},
		{
			"timestamps": {
				"from": "00:40:57,920",
				"to": "00:41:10,920"
			},
			"offsets": {
				"from": 2457920,
				"to": 2470920
			},
			"text": " So the last revealer wouldn't have a chance to know how they could have influenced by not revealing their reveal."
		},
		{
			"timestamps": {
				"from": "00:41:10,920",
				"to": "00:41:14,920"
			},
			"offsets": {
				"from": 2470920,
				"to": 2474920
			},
			"text": " Yep, that's it. Thank you."
		},
		{
			"timestamps": {
				"from": "00:41:26,920",
				"to": "00:41:33,920"
			},
			"offsets": {
				"from": 2486920,
				"to": 2493920
			},
			"text": " So my next talk is BOS signature in aggregation."
		},
		{
			"timestamps": {
				"from": "00:41:33,920",
				"to": "00:41:42,920"
			},
			"offsets": {
				"from": 2493920,
				"to": 2502920
			},
			"text": " So the goal is to provide a minimal set of knowledge that make developers life easier."
		},
		{
			"timestamps": {
				"from": "00:41:42,920",
				"to": "00:41:54,920"
			},
			"offsets": {
				"from": 2502920,
				"to": 2514920
			},
			"text": " So the goal is to introduce the signature scheme on the top, but it is built on the pairing operations and curve points groups and"
		},
		{
			"timestamps": {
				"from": "00:41:54,920",
				"to": "00:42:01,920"
			},
			"offsets": {
				"from": 2514920,
				"to": 2521920
			},
			"text": " they're all built on the fields operations on the bottom."
		},
		{
			"timestamps": {
				"from": "00:42:01,920",
				"to": "00:42:14,920"
			},
			"offsets": {
				"from": 2521920,
				"to": 2534920
			},
			"text": " So, yeah, so take a way here is that when we say BOS, we might talk about two things."
		},
		{
			"timestamps": {
				"from": "00:42:14,920",
				"to": "00:42:26,920"
			},
			"offsets": {
				"from": 2534920,
				"to": 2546920
			},
			"text": " The one is the BOS signature aggregation scheme and the other is the curve parameter chosen by ZK is called BOS 12, D81 curve."
		},
		{
			"timestamps": {
				"from": "00:42:26,920",
				"to": "00:42:32,920"
			},
			"offsets": {
				"from": 2546920,
				"to": 2552920
			},
			"text": " They are different authors."
		},
		{
			"timestamps": {
				"from": "00:42:32,920",
				"to": "00:42:38,920"
			},
			"offsets": {
				"from": 2552920,
				"to": 2558920
			},
			"text": " So first I'll give a primer on how an epoch operation works."
		},
		{
			"timestamps": {
				"from": "00:42:38,920",
				"to": "00:42:43,920"
			},
			"offsets": {
				"from": 2558920,
				"to": 2563920
			},
			"text": " So you have a field number like field 13."
		},
		{
			"timestamps": {
				"from": "00:42:43,920",
				"to": "00:42:51,920"
			},
			"offsets": {
				"from": 2563920,
				"to": 2571920
			},
			"text": " That means it is operate on the prime number 13."
		},
		{
			"timestamps": {
				"from": "00:42:51,920",
				"to": "00:43:01,920"
			},
			"offsets": {
				"from": 2571920,
				"to": 2581920
			},
			"text": " And then you can define addition, subtraction, multiplication and division with this number."
		},
		{
			"timestamps": {
				"from": "00:43:01,920",
				"to": "00:43:09,920"
			},
			"offsets": {
				"from": 2581920,
				"to": 2589920
			},
			"text": " And note that the outputs are always between zero and Q minus one."
		},
		{
			"timestamps": {
				"from": "00:43:09,920",
				"to": "00:43:21,920"
			},
			"offsets": {
				"from": 2589920,
				"to": 2601920
			},
			"text": " So you have no matter how complex computation you have known on FQ, you always get the same data size."
		},
		{
			"timestamps": {
				"from": "00:43:21,920",
				"to": "00:43:34,920"
			},
			"offsets": {
				"from": 2601920,
				"to": 2614920
			},
			"text": " And you can use the PIECC library to try different parameter fields."
		},
		{
			"timestamps": {
				"from": "00:43:34,920",
				"to": "00:43:38,920"
			},
			"offsets": {
				"from": 2614920,
				"to": 2618920
			},
			"text": " And here's another primer on elliptic curves."
		},
		{
			"timestamps": {
				"from": "00:43:38,920",
				"to": "00:43:44,920"
			},
			"offsets": {
				"from": 2618920,
				"to": 2624920
			},
			"text": " When we say elliptic curves, it's an equation in this form."
		},
		{
			"timestamps": {
				"from": "00:43:44,920",
				"to": "00:43:49,920"
			},
			"offsets": {
				"from": 2624920,
				"to": 2629920
			},
			"text": " It's a y squared and x cubic."
		},
		{
			"timestamps": {
				"from": "00:43:49,920",
				"to": "00:43:52,920"
			},
			"offsets": {
				"from": 2629920,
				"to": 2632920
			},
			"text": " So you define it on a real number."
		},
		{
			"timestamps": {
				"from": "00:43:52,920",
				"to": "00:43:57,920"
			},
			"offsets": {
				"from": 2632920,
				"to": 2637920
			},
			"text": " When the xy is a real number, you see a curve shape."
		},
		{
			"timestamps": {
				"from": "00:43:57,920",
				"to": "00:44:04,920"
			},
			"offsets": {
				"from": 2637920,
				"to": 2644920
			},
			"text": " By the view defined on a finite field, it looks like scattered."
		},
		{
			"timestamps": {
				"from": "00:44:04,920",
				"to": "00:44:10,920"
			},
			"offsets": {
				"from": 2644920,
				"to": 2650920
			},
			"text": " So a point on a curve is, has an x and y coordinates."
		},
		{
			"timestamps": {
				"from": "00:44:10,920",
				"to": "00:44:15,920"
			},
			"offsets": {
				"from": 2650920,
				"to": 2655920
			},
			"text": " And usually you need to send the points over the network."
		},
		{
			"timestamps": {
				"from": "00:44:15,920",
				"to": "00:44:20,920"
			},
			"offsets": {
				"from": 2655920,
				"to": 2660920
			},
			"text": " And you can define the points on a curve."
		},
		{
			"timestamps": {
				"from": "00:44:20,920",
				"to": "00:44:25,920"
			},
			"offsets": {
				"from": 2660920,
				"to": 2665920
			},
			"text": " And you can define the points on a curve."
		},
		{
			"timestamps": {
				"from": "00:44:25,920",
				"to": "00:44:30,920"
			},
			"offsets": {
				"from": 2665920,
				"to": 2670920
			},
			"text": " And you can define the points on a curve."
		},
		{
			"timestamps": {
				"from": "00:44:30,920",
				"to": "00:44:36,920"
			},
			"offsets": {
				"from": 2670920,
				"to": 2676920
			},
			"text": " And you can define the points on a curve."
		},
		{
			"timestamps": {
				"from": "00:44:36,920",
				"to": "00:44:46,920"
			},
			"offsets": {
				"from": 2676920,
				"to": 2686920
			},
			"text": " So you can define additions of the points on the curve."
		},
		{
			"timestamps": {
				"from": "00:44:46,920",
				"to": "00:44:54,920"
			},
			"offsets": {
				"from": 2686920,
				"to": 2694920
			},
			"text": " When you want to add P to Q, you draw a straight line and intercept the curve on another point."
		},
		{
			"timestamps": {
				"from": "00:44:54,920",
				"to": "00:44:58,920"
			},
			"offsets": {
				"from": 2694920,
				"to": 2698920
			},
			"text": " And then mirror it down to find a P plus Q."
		},
		{
			"timestamps": {
				"from": "00:44:58,920",
				"to": "00:45:06,920"
			},
			"offsets": {
				"from": 2698920,
				"to": 2706920
			},
			"text": " When we have the addition of the point, you can define multiplication for a point."
		},
		{
			"timestamps": {
				"from": "00:45:06,920",
				"to": "00:45:13,920"
			},
			"offsets": {
				"from": 2706920,
				"to": 2713920
			},
			"text": " You can multiply a point like 10 times, like adding 10 times."
		},
		{
			"timestamps": {
				"from": "00:45:13,920",
				"to": "00:45:18,920"
			},
			"offsets": {
				"from": 2713920,
				"to": 2718920
			},
			"text": " This is a hard math problem that you can give."
		},
		{
			"timestamps": {
				"from": "00:45:18,920",
				"to": "00:45:20,920"
			},
			"offsets": {
				"from": 2718920,
				"to": 2720920
			},
			"text": " You have P and Q."
		},
		{
			"timestamps": {
				"from": "00:45:20,920",
				"to": "00:45:29,920"
			},
			"offsets": {
				"from": 2720920,
				"to": 2729920
			},
			"text": " And you can find 10 is really hard, so you can hide bodies in here."
		},
		{
			"timestamps": {
				"from": "00:45:29,920",
				"to": "00:45:34,920"
			},
			"offsets": {
				"from": 2729920,
				"to": 2734920
			},
			"text": " It's actually your secret key."
		},
		{
			"timestamps": {
				"from": "00:45:34,920",
				"to": "00:45:42,920"
			},
			"offsets": {
				"from": 2734920,
				"to": 2742920
			},
			"text": " And so here, let's talk about the BRS 12381 specification."
		},
		{
			"timestamps": {
				"from": "00:45:42,920",
				"to": "00:45:50,920"
			},
			"offsets": {
				"from": 2742920,
				"to": 2750920
			},
			"text": " It has a small point called G1 and a big point called G2."
		},
		{
			"timestamps": {
				"from": "00:45:50,920",
				"to": "00:45:59,920"
			},
			"offsets": {
				"from": 2750920,
				"to": 2759920
			},
			"text": " If you remember the first pyramid is they have different prime fields on the button."
		},
		{
			"timestamps": {
				"from": "00:45:59,920",
				"to": "00:46:07,920"
			},
			"offsets": {
				"from": 2759920,
				"to": 2767920
			},
			"text": " The small point has 48 bytes and the large one has 96 bytes."
		},
		{
			"timestamps": {
				"from": "00:46:07,920",
				"to": "00:46:13,920"
			},
			"offsets": {
				"from": 2767920,
				"to": 2773920
			},
			"text": " They have different elliptic curve defined."
		},
		{
			"timestamps": {
				"from": "00:46:13,920",
				"to": "00:46:21,920"
			},
			"offsets": {
				"from": 2773920,
				"to": 2781920
			},
			"text": " And note that the FQ2 is like a complex number."
		},
		{
			"timestamps": {
				"from": "00:46:21,920",
				"to": "00:46:24,920"
			},
			"offsets": {
				"from": 2781920,
				"to": 2784920
			},
			"text": " It's double the size of the small curve."
		},
		{
			"timestamps": {
				"from": "00:46:24,920",
				"to": "00:46:29,920"
			},
			"offsets": {
				"from": 2784920,
				"to": 2789920
			},
			"text": " And there's an imaginary number I there."
		},
		{
			"timestamps": {
				"from": "00:46:29,920",
				"to": "00:46:43,920"
			},
			"offsets": {
				"from": 2789920,
				"to": 2803920
			},
			"text": " And the G1 and G2 is the generator points that has a specific X and Y coordinates specified"
		},
		{
			"timestamps": {
				"from": "00:46:43,920",
				"to": "00:46:47,920"
			},
			"offsets": {
				"from": 2803920,
				"to": 2807920
			},
			"text": " for the curve."
		},
		{
			"timestamps": {
				"from": "00:46:47,920",
				"to": "00:46:53,920"
			},
			"offsets": {
				"from": 2807920,
				"to": 2813920
			},
			"text": " And so I'm color code is them."
		},
		{
			"timestamps": {
				"from": "00:46:53,920",
				"to": "00:47:01,920"
			},
			"offsets": {
				"from": 2813920,
				"to": 2821920
			},
			"text": " Don't get lost with G1 and G2."
		},
		{
			"timestamps": {
				"from": "00:47:01,920",
				"to": "00:47:09,920"
			},
			"offsets": {
				"from": 2821920,
				"to": 2829920
			},
			"text": " So pairing function is a function that takes a G1 group and G2 group."
		},
		{
			"timestamps": {
				"from": "00:47:09,920",
				"to": "00:47:19,920"
			},
			"offsets": {
				"from": 2829920,
				"to": 2839920
			},
			"text": " The magic of the pairing function is that when you like multiply a constant A or B to the group elements."
		},
		{
			"timestamps": {
				"from": "00:47:19,920",
				"to": "00:47:22,920"
			},
			"offsets": {
				"from": 2839920,
				"to": 2842920
			},
			"text": " And you can take the A/B to the shoulders."
		},
		{
			"timestamps": {
				"from": "00:47:22,920",
				"to": "00:47:30,920"
			},
			"offsets": {
				"from": 2842920,
				"to": 2850920
			},
			"text": " And that means that you can take the A/B into the first one and the second one."
		},
		{
			"timestamps": {
				"from": "00:47:30,920",
				"to": "00:47:32,920"
			},
			"offsets": {
				"from": 2850920,
				"to": 2852920
			},
			"text": " And that's rule number one."
		},
		{
			"timestamps": {
				"from": "00:47:32,920",
				"to": "00:47:41,920"
			},
			"offsets": {
				"from": 2852920,
				"to": 2861920
			},
			"text": " And rule number two is that when you are adding points in G1, adding points in G2,"
		},
		{
			"timestamps": {
				"from": "00:47:41,920",
				"to": "00:47:45,920"
			},
			"offsets": {
				"from": 2861920,
				"to": 2865920
			},
			"text": " you can like distribute them and spread them out."
		},
		{
			"timestamps": {
				"from": "00:47:45,920",
				"to": "00:47:58,920"
			},
			"offsets": {
				"from": 2865920,
				"to": 2878920
			},
			"text": " So with this construction, we can introduce how the signature scheme is built on this type of construction."
		},
		{
			"timestamps": {
				"from": "00:47:58,920",
				"to": "00:48:06,920"
			},
			"offsets": {
				"from": 2878920,
				"to": 2886920
			},
			"text": " And if you look at pairing function, there are some monies over there because it's expensive to run."
		},
		{
			"timestamps": {
				"from": "00:48:06,920",
				"to": "00:48:15,920"
			},
			"offsets": {
				"from": 2886920,
				"to": 2895920
			},
			"text": " And so it's a computational heavily function."
		},
		{
			"timestamps": {
				"from": "00:48:15,920",
				"to": "00:48:22,920"
			},
			"offsets": {
				"from": 2895920,
				"to": 2902920
			},
			"text": " So we try to minimize the times you try to run pairings."
		},
		{
			"timestamps": {
				"from": "00:48:22,920",
				"to": "00:48:28,920"
			},
			"offsets": {
				"from": 2902920,
				"to": 2908920
			},
			"text": " So here is the BLS signature scheme."
		},
		{
			"timestamps": {
				"from": "00:48:28,920",
				"to": "00:48:40,920"
			},
			"offsets": {
				"from": 2908920,
				"to": 2920920
			},
			"text": " The private key is integer, I think it like one, two, three or five."
		},
		{
			"timestamps": {
				"from": "00:48:40,920",
				"to": "00:48:47,920"
			},
			"offsets": {
				"from": 2920920,
				"to": 2927920
			},
			"text": " And to sign a message, you need to hash the message to a group point."
		},
		{
			"timestamps": {
				"from": "00:48:47,920",
				"to": "00:48:53,920"
			},
			"offsets": {
				"from": 2927920,
				"to": 2933920
			},
			"text": " And that's the, when you heard people saying the BLS standardization effort,"
		},
		{
			"timestamps": {
				"from": "00:48:53,920",
				"to": "00:48:59,920"
			},
			"offsets": {
				"from": 2933920,
				"to": 2939920
			},
			"text": " they are standardized the way we hash the message to a group two points."
		},
		{
			"timestamps": {
				"from": "00:48:59,920",
				"to": "00:49:08,920"
			},
			"offsets": {
				"from": 2939920,
				"to": 2948920
			},
			"text": " And then you multiply your hierarchy to the message and you get a signature here."
		},
		{
			"timestamps": {
				"from": "00:49:08,920",
				"to": "00:49:17,920"
			},
			"offsets": {
				"from": 2948920,
				"to": 2957920
			},
			"text": " And to verify the signature and the public key and the message, you use two pairing functions."
		},
		{
			"timestamps": {
				"from": "00:49:17,920",
				"to": "00:49:23,920"
			},
			"offsets": {
				"from": 2957920,
				"to": 2963920
			},
			"text": " And the proof is really simple. It's like you write a G1 and S on the left-hand side,"
		},
		{
			"timestamps": {
				"from": "00:49:23,920",
				"to": "00:49:31,920"
			},
			"offsets": {
				"from": 2963920,
				"to": 2971920
			},
			"text": " and then you can move the K from the right to the left and you get the expression of the right-hand side."
		},
		{
			"timestamps": {
				"from": "00:49:31,920",
				"to": "00:49:43,920"
			},
			"offsets": {
				"from": 2971920,
				"to": 2983920
			},
			"text": " And so the most powerful thing about BLS signature scheme is it can aggregate signatures and public keys."
		},
		{
			"timestamps": {
				"from": "00:49:43,920",
				"to": "00:49:49,920"
			},
			"offsets": {
				"from": 2983920,
				"to": 2989920
			},
			"text": " So this is just a curve point addition which we introduced before."
		},
		{
			"timestamps": {
				"from": "00:49:49,920",
				"to": "00:49:59,920"
			},
			"offsets": {
				"from": 2989920,
				"to": 2999920
			},
			"text": " And this is, you can aggregate three signatures and you can aggregate as many signatures as you want."
		},
		{
			"timestamps": {
				"from": "00:49:59,920",
				"to": "00:50:05,920"
			},
			"offsets": {
				"from": 2999920,
				"to": 3005920
			},
			"text": " And then verify using two pairing functions to verify."
		},
		{
			"timestamps": {
				"from": "00:50:05,920",
				"to": "00:50:11,920"
			},
			"offsets": {
				"from": 3005920,
				"to": 3011920
			},
			"text": " So, yeah, so the proof is a exercise."
		},
		{
			"timestamps": {
				"from": "00:50:11,920",
				"to": "00:50:19,920"
			},
			"offsets": {
				"from": 3011920,
				"to": 3019920
			},
			"text": " So, while you are looking at here, you are looking at scalability."
		},
		{
			"timestamps": {
				"from": "00:50:19,920",
				"to": "00:50:30,920"
			},
			"offsets": {
				"from": 3019920,
				"to": 3030920
			},
			"text": " So, this is how you can aggregate many data messages."
		},
		{
			"timestamps": {
				"from": "00:50:30,920",
				"to": "00:50:41,920"
			},
			"offsets": {
				"from": 3030920,
				"to": 3041920
			},
			"text": " So, here I present an example that's a kindly borrowed from the chancef simple serialize.com."
		},
		{
			"timestamps": {
				"from": "00:50:41,920",
				"to": "00:50:48,920"
			},
			"offsets": {
				"from": 3041920,
				"to": 3048920
			},
			"text": " So, it is a testation message and it has signatures."
		},
		{
			"timestamps": {
				"from": "00:50:48,920",
				"to": "00:50:50,920"
			},
			"offsets": {
				"from": 3048920,
				"to": 3050920
			},
			"text": " It looks like this."
		},
		{
			"timestamps": {
				"from": "00:50:50,920",
				"to": "00:50:58,920"
			},
			"offsets": {
				"from": 3050920,
				"to": 3058920
			},
			"text": " And then I hide the data part and you will see an aggregation base looks like this."
		},
		{
			"timestamps": {
				"from": "00:50:58,920",
				"to": "00:51:06,920"
			},
			"offsets": {
				"from": 3058920,
				"to": 3066920
			},
			"text": " And this is actually a record list of validator 5."
		},
		{
			"timestamps": {
				"from": "00:51:06,920",
				"to": "00:51:11,920"
			},
			"offsets": {
				"from": 3066920,
				"to": 3071920
			},
			"text": " It is your signature included in this bunch of aggregation."
		},
		{
			"timestamps": {
				"from": "00:51:11,920",
				"to": "00:51:18,920"
			},
			"offsets": {
				"from": 3071920,
				"to": 3078920
			},
			"text": " And then a client will use that information to look up public keys and to verify these signatures."
		},
		{
			"timestamps": {
				"from": "00:51:18,920",
				"to": "00:51:23,920"
			},
			"offsets": {
				"from": 3078920,
				"to": 3083920
			},
			"text": " So, yeah, that's how BLS signatures works."
		},
		{
			"timestamps": {
				"from": "00:51:23,920",
				"to": "00:51:26,920"
			},
			"offsets": {
				"from": 3083920,
				"to": 3086920
			},
			"text": " Hopefully that helps you."
		},
		{
			"timestamps": {
				"from": "00:51:26,920",
				"to": "00:51:35,920"
			},
			"offsets": {
				"from": 3086920,
				"to": 3095920
			},
			"text": " Thank you very much."
		},
		{
			"timestamps": {
				"from": "00:51:35,920",
				"to": "00:51:39,920"
			},
			"offsets": {
				"from": 3095920,
				"to": 3099920
			},
			"text": " Thank you, Vitalik, Duncan, Chichang."
		},
		{
			"timestamps": {
				"from": "00:51:39,920",
				"to": "00:51:48,920"
			},
			"offsets": {
				"from": 3099920,
				"to": 3108920
			},
			"text": " Next up was a break, but we don't have time for that because we are definitely running late already."
		},
		{
			"timestamps": {
				"from": "00:51:48,920",
				"to": "00:51:53,920"
			},
			"offsets": {
				"from": 3108920,
				"to": 3113920
			},
			"text": " We might have some time for questions at the end, but we are just going to keep driving."
		},
		{
			"timestamps": {
				"from": "00:51:53,920",
				"to": "00:51:59,920"
			},
			"offsets": {
				"from": 3113920,
				"to": 3119920
			},
			"text": " Next up, we are moving into -- these are the kind of building blocks to help you understand"
		},
		{
			"timestamps": {
				"from": "00:51:59,920",
				"to": "00:52:02,920"
			},
			"offsets": {
				"from": 3119920,
				"to": 3122920
			},
			"text": " the underlying concepts we use to construct these things."
		},
		{
			"timestamps": {
				"from": "00:52:02,920",
				"to": "00:52:07,920"
			},
			"offsets": {
				"from": 3122920,
				"to": 3127920
			},
			"text": " And now we are going to move into the more concrete instantiation of the protocol."
		},
		{
			"timestamps": {
				"from": "00:52:07,920",
				"to": "00:52:10,920"
			},
			"offsets": {
				"from": 3127920,
				"to": 3130920
			},
			"text": " So, hello everyone."
		},
		{
			"timestamps": {
				"from": "00:52:10,920",
				"to": "00:52:15,920"
			},
			"offsets": {
				"from": 3130920,
				"to": 3135920
			},
			"text": " I am sorry I am pretty sick right now."
		},
		{
			"timestamps": {
				"from": "00:52:15,920",
				"to": "00:52:22,920"
			},
			"offsets": {
				"from": 3135920,
				"to": 3142920
			},
			"text": " And so my topic is the life of the E3R and BKNCHEN validator."
		},
		{
			"timestamps": {
				"from": "00:52:22,920",
				"to": "00:52:25,920"
			},
			"offsets": {
				"from": 3142920,
				"to": 3145920
			},
			"text": " So, this is the outline of this topic."
		},
		{
			"timestamps": {
				"from": "00:52:25,920",
				"to": "00:52:30,920"
			},
			"offsets": {
				"from": 3145920,
				"to": 3150920
			},
			"text": " So we will talk about the two main factors to define the validator state."
		},
		{
			"timestamps": {
				"from": "00:52:30,920",
				"to": "00:52:41,920"
			},
			"offsets": {
				"from": 3150920,
				"to": 3161920
			},
			"text": " And then we will talk about the entry and exit keys and then the life cycle of this."
		},
		{
			"timestamps": {
				"from": "00:52:41,920",
				"to": "00:52:46,920"
			},
			"offsets": {
				"from": 3161920,
				"to": 3166920
			},
			"text": " So, the current spec defines list four status."
		},
		{
			"timestamps": {
				"from": "00:52:46,920",
				"to": "00:52:56,920"
			},
			"offsets": {
				"from": 3166920,
				"to": 3176920
			},
			"text": " There are the activation eligibility, which is the preparing stage before it actually be activated."
		},
		{
			"timestamps": {
				"from": "00:52:56,920",
				"to": "00:53:07,920"
			},
			"offsets": {
				"from": 3176920,
				"to": 3187920
			},
			"text": " And then the second one is the state that the validator is alive active and it helps to validate the state -- the blockchain."
		},
		{
			"timestamps": {
				"from": "00:53:07,920",
				"to": "00:53:17,920"
			},
			"offsets": {
				"from": 3187920,
				"to": 3197920
			},
			"text": " And then when the validator can choose to exit, then after a while they will get into the exit status."
		},
		{
			"timestamps": {
				"from": "00:53:17,920",
				"to": "00:53:24,920"
			},
			"offsets": {
				"from": 3197920,
				"to": 3204920
			},
			"text": " And finally, the BKNCHEN validator will get into the withdrawal state."
		},
		{
			"timestamps": {
				"from": "00:53:24,920",
				"to": "00:53:32,920"
			},
			"offsets": {
				"from": 3204920,
				"to": 3212920
			},
			"text": " So, here we need to know is that in the BKNCHEN phase zero, we only have withdrawal state."
		},
		{
			"timestamps": {
				"from": "00:53:32,920",
				"to": "00:53:43,920"
			},
			"offsets": {
				"from": 3212920,
				"to": 3223920
			},
			"text": " And there's -- actually, withdrawn state will be introduced in the phase two, where we have EE's, the execution environments."
		},
		{
			"timestamps": {
				"from": "00:53:43,920",
				"to": "00:53:55,920"
			},
			"offsets": {
				"from": 3223920,
				"to": 3235920
			},
			"text": " Then that's when the validator can actually withdraw their deposit to the EE, to the stretches."
		},
		{
			"timestamps": {
				"from": "00:53:55,920",
				"to": "00:54:03,920"
			},
			"offsets": {
				"from": 3235920,
				"to": 3243920
			},
			"text": " So, here is the validator's data structure from the BKNCHEN state."
		},
		{
			"timestamps": {
				"from": "00:54:03,920",
				"to": "00:54:10,920"
			},
			"offsets": {
				"from": 3243920,
				"to": 3250920
			},
			"text": " So, the validator has list information we need to know."
		},
		{
			"timestamps": {
				"from": "00:54:10,920",
				"to": "00:54:12,920"
			},
			"offsets": {
				"from": 3250920,
				"to": 3252920
			},
			"text": " It's inside the BKNCHEN state."
		},
		{
			"timestamps": {
				"from": "00:54:12,920",
				"to": "00:54:17,920"
			},
			"offsets": {
				"from": 3252920,
				"to": 3257920
			},
			"text": " So, here I highlight is the status epochs."
		},
		{
			"timestamps": {
				"from": "00:54:17,920",
				"to": "00:54:24,920"
			},
			"offsets": {
				"from": 3257920,
				"to": 3264920
			},
			"text": " So, we can see this four different state of epochs are defined here."
		},
		{
			"timestamps": {
				"from": "00:54:24,920",
				"to": "00:54:38,920"
			},
			"offsets": {
				"from": 3264920,
				"to": 3278920
			},
			"text": " And then, initially, the state epoch is set into the unsight integer of 64 bits, which is the maximum number of here."
		},
		{
			"timestamps": {
				"from": "00:54:38,920",
				"to": "00:54:45,920"
			},
			"offsets": {
				"from": 3278920,
				"to": 3285920
			},
			"text": " So, the reason is that we haven't defined this status."
		},
		{
			"timestamps": {
				"from": "00:54:45,920",
				"to": "00:54:54,920"
			},
			"offsets": {
				"from": 3285920,
				"to": 3294920
			},
			"text": " We haven't defined when this status will be happened. So, we said a very long, very long epoch."
		},
		{
			"timestamps": {
				"from": "00:54:54,920",
				"to": "00:54:57,920"
			},
			"offsets": {
				"from": 3294920,
				"to": 3297920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "00:54:57,920",
				"to": "00:55:03,920"
			},
			"offsets": {
				"from": 3297920,
				"to": 3303920
			},
			"text": " So, Stanley explained that we defined the slot and epoch."
		},
		{
			"timestamps": {
				"from": "00:55:03,920",
				"to": "00:55:08,920"
			},
			"offsets": {
				"from": 3303920,
				"to": 3308920
			},
			"text": " So, each epoch consists of 64 slots."
		},
		{
			"timestamps": {
				"from": "00:55:08,920",
				"to": "00:55:17,920"
			},
			"offsets": {
				"from": 3308920,
				"to": 3317920
			},
			"text": " And each slot is 6 seconds. So, we can use this epoch number as the timestamp here."
		},
		{
			"timestamps": {
				"from": "00:55:17,920",
				"to": "00:55:23,920"
			},
			"offsets": {
				"from": 3317920,
				"to": 3323920
			},
			"text": " So, we define that, we can see the epoch of the timeline."
		},
		{
			"timestamps": {
				"from": "00:55:23,920",
				"to": "00:55:34,920"
			},
			"offsets": {
				"from": 3323920,
				"to": 3334920
			},
			"text": " And if the data has been set to with activation eligibility epoch 100, and also the activation epoch 200."
		},
		{
			"timestamps": {
				"from": "00:55:34,920",
				"to": "00:55:49,920"
			},
			"offsets": {
				"from": 3334920,
				"to": 3349920
			},
			"text": " Then, when the time actually between two of these two epochs, for example, 150, the validator is not activated yet."
		},
		{
			"timestamps": {
				"from": "00:55:49,920",
				"to": "00:56:00,920"
			},
			"offsets": {
				"from": 3349920,
				"to": 3360920
			},
			"text": " And, sorry, when after 200 epochs, the validator will be actually active it."
		},
		{
			"timestamps": {
				"from": "00:56:00,920",
				"to": "00:56:14,920"
			},
			"offsets": {
				"from": 3360920,
				"to": 3374920
			},
			"text": " Okay. And, so, we introduced the state epochs."
		},
		{
			"timestamps": {
				"from": "00:56:14,920",
				"to": "00:56:20,920"
			},
			"offsets": {
				"from": 3374920,
				"to": 3380920
			},
			"text": " Now, there's another flag."
		},
		{
			"timestamps": {
				"from": "00:56:20,920",
				"to": "00:56:38,920"
			},
			"offsets": {
				"from": 3380920,
				"to": 3398920
			},
			"text": " Another factor that, in fact, the recongence the data state, which is called the /, which I think Danny will talk about how the data actually be / in the later session."
		},
		{
			"timestamps": {
				"from": "00:56:38,920",
				"to": "00:56:58,920"
			},
			"offsets": {
				"from": 3398920,
				"to": 3418920
			},
			"text": " So, in here, you only need to know is that a /, will be forced to exceed it, which is very reasonable because they might be something bad we have misbehaved. So, they will be forced to be /."
		},
		{
			"timestamps": {
				"from": "00:56:58,920",
				"to": "00:57:09,920"
			},
			"offsets": {
				"from": 3418920,
				"to": 3429920
			},
			"text": " Okay, then, I'm going to talk about the red limiting cues. Before that, I want to introduce the weak subjectivity."
		},
		{
			"timestamps": {
				"from": "00:57:09,920",
				"to": "00:57:16,920"
			},
			"offsets": {
				"from": 3429920,
				"to": 3436920
			},
			"text": " This is a feature of the proof of stake reduction."
		},
		{
			"timestamps": {
				"from": "00:57:16,920",
				"to": "00:57:32,920"
			},
			"offsets": {
				"from": 3436920,
				"to": 3452920
			},
			"text": " And so, if you are new validators, you got in online, and you can only trust your peers around you."
		},
		{
			"timestamps": {
				"from": "00:57:32,920",
				"to": "00:57:43,920"
			},
			"offsets": {
				"from": 3452920,
				"to": 3463920
			},
			"text": " And also, if you get offline and then be back again, you can do in the same situations that you can only trust your neighborhoods."
		},
		{
			"timestamps": {
				"from": "00:57:43,920",
				"to": "00:57:51,920"
			},
			"offsets": {
				"from": 3463920,
				"to": 3471920
			},
			"text": " So, then, how long you can be with the offline, it's introduced."
		},
		{
			"timestamps": {
				"from": "00:57:51,920",
				"to": "00:57:57,920"
			},
			"offsets": {
				"from": 3471920,
				"to": 3477920
			},
			"text": " It depends on how long it takes for the attacker to withdraw their stake."
		},
		{
			"timestamps": {
				"from": "00:57:57,920",
				"to": "00:58:07,920"
			},
			"offsets": {
				"from": 3477920,
				"to": 3487920
			},
			"text": " Then, then that's quite the exit rate is important here."
		},
		{
			"timestamps": {
				"from": "00:58:07,920",
				"to": "00:58:20,920"
			},
			"offsets": {
				"from": 3487920,
				"to": 3500920
			},
			"text": " And also, the type period we set for the data from the type it initiates, exceeds operation to it's actually be exceeded."
		},
		{
			"timestamps": {
				"from": "00:58:20,920",
				"to": "00:58:25,920"
			},
			"offsets": {
				"from": 3500920,
				"to": 3505920
			},
			"text": " That period is also important."
		},
		{
			"timestamps": {
				"from": "00:58:25,920",
				"to": "00:58:35,920"
			},
			"offsets": {
				"from": 3505920,
				"to": 3515920
			},
			"text": " So, in the BKN chain, we have two cues, which is one is the entry queue, and another one is the exit queue."
		},
		{
			"timestamps": {
				"from": "00:58:35,920",
				"to": "00:58:47,920"
			},
			"offsets": {
				"from": 3515920,
				"to": 3527920
			},
			"text": " So, let's to queue the reason why we use Q is that we need the network also the --"
		},
		{
			"timestamps": {
				"from": "00:58:47,920",
				"to": "00:58:52,920"
			},
			"offsets": {
				"from": 3527920,
				"to": 3532920
			},
			"text": " either the network and also the validator set to be as stable as it can be."
		},
		{
			"timestamps": {
				"from": "00:58:52,920",
				"to": "00:59:01,920"
			},
			"offsets": {
				"from": 3532920,
				"to": 3541920
			},
			"text": " So, we won't allow that in a short period, a lot of the validator got the initiate exceeds."
		},
		{
			"timestamps": {
				"from": "00:59:01,920",
				"to": "00:59:14,920"
			},
			"offsets": {
				"from": 3541920,
				"to": 3554920
			},
			"text": " Then the validator state will be like you can't select enough and the same state from the validator state."
		},
		{
			"timestamps": {
				"from": "00:59:14,920",
				"to": "00:59:31,920"
			},
			"offsets": {
				"from": 3554920,
				"to": 3571920
			},
			"text": " And also, it ensures that the final guarantees still remain between the two chains as long as the validator blocks are often enough."
		},
		{
			"timestamps": {
				"from": "00:59:31,920",
				"to": "00:59:37,920"
			},
			"offsets": {
				"from": 3571920,
				"to": 3577920
			},
			"text": " So, we will see how the queue is happening."
		},
		{
			"timestamps": {
				"from": "00:59:37,920",
				"to": "00:59:43,920"
			},
			"offsets": {
				"from": 3577920,
				"to": 3583920
			},
			"text": " So, this is the charade functions."
		},
		{
			"timestamps": {
				"from": "00:59:43,920",
				"to": "00:59:57,920"
			},
			"offsets": {
				"from": 3583920,
				"to": 3597920
			},
			"text": " We can see that for each epoch, the maximum number of a data can join or to exceed it is defined."
		},
		{
			"timestamps": {
				"from": "00:59:57,920",
				"to": "01:00:03,920"
			},
			"offsets": {
				"from": 3597920,
				"to": 3603920
			},
			"text": " It's based on the current active validator count."
		},
		{
			"timestamps": {
				"from": "01:00:03,920",
				"to": "01:00:15,920"
			},
			"offsets": {
				"from": 3603920,
				"to": 3615920
			},
			"text": " So, you can see that the number is set as this and the charade quotient is set to like 65,000."
		},
		{
			"timestamps": {
				"from": "01:00:15,920",
				"to": "01:00:27,920"
			},
			"offsets": {
				"from": 3615920,
				"to": 3627920
			},
			"text": " So, as you can see the number, you can estimate how many validator can be set at the same time."
		},
		{
			"timestamps": {
				"from": "01:00:27,920",
				"to": "01:00:41,920"
			},
			"offsets": {
				"from": 3627920,
				"to": 3641920
			},
			"text": " And the life cycle -- so at the beginning, the validator, they will make a deposit on the eastward chain."
		},
		{
			"timestamps": {
				"from": "01:00:41,920",
				"to": "01:00:50,920"
			},
			"offsets": {
				"from": 3641920,
				"to": 3650920
			},
			"text": " And eastward chain is the end point to get from the eastward chain to eastward."
		},
		{
			"timestamps": {
				"from": "01:00:50,920",
				"to": "01:01:00,920"
			},
			"offsets": {
				"from": 3650920,
				"to": 3660920
			},
			"text": " So, when the validator makes a deposit of the 32-easer to this deposit contract,"
		},
		{
			"timestamps": {
				"from": "01:01:00,920",
				"to": "01:01:08,920"
			},
			"offsets": {
				"from": 3660920,
				"to": 3668920
			},
			"text": " you also watch the deposit contract status from the big engine."
		},
		{
			"timestamps": {
				"from": "01:01:08,920",
				"to": "01:01:14,920"
			},
			"offsets": {
				"from": 3668920,
				"to": 3674920
			},
			"text": " So, this is a diagram here and we will show the for that one later."
		},
		{
			"timestamps": {
				"from": "01:01:14,920",
				"to": "01:01:21,920"
			},
			"offsets": {
				"from": 3674920,
				"to": 3681920
			},
			"text": " So, at the beginning, the deposit validator is here."
		},
		{
			"timestamps": {
				"from": "01:01:21,920",
				"to": "01:01:33,920"
			},
			"offsets": {
				"from": 3681920,
				"to": 3693920
			},
			"text": " And we will check online on the big engine logic that the validator has enough balance and ready to activate."
		},
		{
			"timestamps": {
				"from": "01:01:33,920",
				"to": "01:01:44,920"
			},
			"offsets": {
				"from": 3693920,
				"to": 3704920
			},
			"text": " And after four epochs and also it's the first inverse of Q, we define the charade earlier, like in that function."
		},
		{
			"timestamps": {
				"from": "01:01:44,920",
				"to": "01:01:51,920"
			},
			"offsets": {
				"from": 3704920,
				"to": 3711920
			},
			"text": " So, only the small amount of the validator can join the validator state."
		},
		{
			"timestamps": {
				"from": "01:01:51,920",
				"to": "01:01:57,920"
			},
			"offsets": {
				"from": 3711920,
				"to": 3717920
			},
			"text": " This is the entry queue here."
		},
		{
			"timestamps": {
				"from": "01:01:57,920",
				"to": "01:02:07,920"
			},
			"offsets": {
				"from": 3717920,
				"to": 3727920
			},
			"text": " Okay, and then let's take a look at the button diagram."
		},
		{
			"timestamps": {
				"from": "01:02:07,920",
				"to": "01:02:21,920"
			},
			"offsets": {
				"from": 3727920,
				"to": 3741920
			},
			"text": " So, from the -- when the validator is activated and there's two possible in this road is maybe the validator doesn't --"
		},
		{
			"timestamps": {
				"from": "01:02:21,920",
				"to": "01:02:28,920"
			},
			"offsets": {
				"from": 3741920,
				"to": 3748920
			},
			"text": " he got penalized and ties my ties and the validator balance is insufficient."
		},
		{
			"timestamps": {
				"from": "01:02:28,920",
				"to": "01:02:35,920"
			},
			"offsets": {
				"from": 3748920,
				"to": 3755920
			},
			"text": " So, in that time, the validator will be ejected."
		},
		{
			"timestamps": {
				"from": "01:02:35,920",
				"to": "01:02:41,920"
			},
			"offsets": {
				"from": 3755920,
				"to": 3761920
			},
			"text": " And another option is that the validator can volunteer --"
		},
		{
			"timestamps": {
				"from": "01:02:41,920",
				"to": "01:02:48,920"
			},
			"offsets": {
				"from": 3761920,
				"to": 3768920
			},
			"text": " the validator will exit the second road."
		},
		{
			"timestamps": {
				"from": "01:02:48,920",
				"to": "01:02:56,920"
			},
			"offsets": {
				"from": 3768920,
				"to": 3776920
			},
			"text": " So, the first road will get into -- will push the validator in the exit queue here."
		},
		{
			"timestamps": {
				"from": "01:02:56,920",
				"to": "01:03:09,920"
			},
			"offsets": {
				"from": 3776920,
				"to": 3789920
			},
			"text": " So, it's also -- it has to wait for at least four epochs and also it has to be enough room for this validator to exit."
		},
		{
			"timestamps": {
				"from": "01:03:09,920",
				"to": "01:03:21,920"
			},
			"offsets": {
				"from": 3789920,
				"to": 3801920
			},
			"text": " So, that this validator is in the state of -- it's unsashed, but it's exited."
		},
		{
			"timestamps": {
				"from": "01:03:21,920",
				"to": "01:03:31,920"
			},
			"offsets": {
				"from": 3801920,
				"to": 3811920
			},
			"text": " Okay, so -- and then after 27 hours, it will be withdrawable."
		},
		{
			"timestamps": {
				"from": "01:03:31,920",
				"to": "01:03:40,920"
			},
			"offsets": {
				"from": 3811920,
				"to": 3820920
			},
			"text": " The reason why we -- we set a delayed height between the exited and the withdrawable."
		},
		{
			"timestamps": {
				"from": "01:03:40,920",
				"to": "01:03:43,920"
			},
			"offsets": {
				"from": 3820920,
				"to": 3823920
			},
			"text": " There are three most reasons."
		},
		{
			"timestamps": {
				"from": "01:03:43,920",
				"to": "01:03:48,920"
			},
			"offsets": {
				"from": 3823920,
				"to": 3828920
			},
			"text": " One is that the validator -- after the -- it's exited."
		},
		{
			"timestamps": {
				"from": "01:03:48,920",
				"to": "01:03:57,920"
			},
			"offsets": {
				"from": 3828920,
				"to": 3837920
			},
			"text": " It's still possible that it will got -- which is the -- this road."
		},
		{
			"timestamps": {
				"from": "01:03:57,920",
				"to": "01:04:07,920"
			},
			"offsets": {
				"from": 3837920,
				"to": 3847920
			},
			"text": " And also, maybe the validator still have chance to get some -- a small amount of reward before it actually exit."
		},
		{
			"timestamps": {
				"from": "01:04:07,920",
				"to": "01:04:16,920"
			},
			"offsets": {
				"from": 3847920,
				"to": 3856920
			},
			"text": " And also, it will provide the proof of custody challenge time to be made during this period."
		},
		{
			"timestamps": {
				"from": "01:04:16,920",
				"to": "01:04:26,920"
			},
			"offsets": {
				"from": 3856920,
				"to": 3866920
			},
			"text": " Sorry, the proof of custody thing is the phase one thing that we will prepare this."
		},
		{
			"timestamps": {
				"from": "01:04:26,920",
				"to": "01:04:32,920"
			},
			"offsets": {
				"from": 3866920,
				"to": 3872920
			},
			"text": " And then let's take a look at the top diagram."
		},
		{
			"timestamps": {
				"from": "01:04:32,920",
				"to": "01:04:38,920"
			},
			"offsets": {
				"from": 3872920,
				"to": 3878920
			},
			"text": " So, the activated -- my got slashed."
		},
		{
			"timestamps": {
				"from": "01:04:38,920",
				"to": "01:04:51,920"
			},
			"offsets": {
				"from": 3878920,
				"to": 3891920
			},
			"text": " And after it got slashed, it will wait a short delay until we can -- can initiate a withdrawal operation."
		},
		{
			"timestamps": {
				"from": "01:04:51,920",
				"to": "01:04:59,920"
			},
			"offsets": {
				"from": 3891920,
				"to": 3899920
			},
			"text": " And then it got into that -- the slash and exited status."
		},
		{
			"timestamps": {
				"from": "01:04:59,920",
				"to": "01:05:07,920"
			},
			"offsets": {
				"from": 3899920,
				"to": 3907920
			},
			"text": " And after at least 36 days, it will be withdrawable."
		},
		{
			"timestamps": {
				"from": "01:05:07,920",
				"to": "01:05:20,920"
			},
			"offsets": {
				"from": 3907920,
				"to": 3920920
			},
			"text": " So, it's very -- you can see that the snatched validator has to wait for multi -- it's got punished because there is a slot in the BK."
		},
		{
			"timestamps": {
				"from": "01:05:20,920",
				"to": "01:05:25,920"
			},
			"offsets": {
				"from": 3920920,
				"to": 3925920
			},
			"text": " So, that's the full picture."
		},
		{
			"timestamps": {
				"from": "01:05:25,920",
				"to": "01:05:33,920"
			},
			"offsets": {
				"from": 3925920,
				"to": 3933920
			},
			"text": " Now, you can see how the validator be switched between those data."
		},
		{
			"timestamps": {
				"from": "01:05:33,920",
				"to": "01:05:37,920"
			},
			"offsets": {
				"from": 3933920,
				"to": 3937920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:05:37,920",
				"to": "01:05:39,920"
			},
			"offsets": {
				"from": 3937920,
				"to": 3939920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:05:39,920",
				"to": "01:05:40,920"
			},
			"offsets": {
				"from": 3939920,
				"to": 3940920
			},
			"text": " No?"
		},
		{
			"timestamps": {
				"from": "01:05:40,920",
				"to": "01:05:48,920"
			},
			"offsets": {
				"from": 3940920,
				"to": 3948920
			},
			"text": " [ Applause ]"
		},
		{
			"timestamps": {
				"from": "01:05:48,920",
				"to": "01:05:54,920"
			},
			"offsets": {
				"from": 3948920,
				"to": 3954920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:05:54,920",
				"to": "01:06:01,920"
			},
			"offsets": {
				"from": 3954920,
				"to": 3961920
			},
			"text": " So, I'm going to talk about the state transition function of the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:06:01,920",
				"to": "01:06:04,920"
			},
			"offsets": {
				"from": 3961920,
				"to": 3964920
			},
			"text": " And I encourage you to just, you know, read the specs."
		},
		{
			"timestamps": {
				"from": "01:06:04,920",
				"to": "01:06:06,920"
			},
			"offsets": {
				"from": 3964920,
				"to": 3966920
			},
			"text": " It's actually not too bad."
		},
		{
			"timestamps": {
				"from": "01:06:06,920",
				"to": "01:06:11,920"
			},
			"offsets": {
				"from": 3966920,
				"to": 3971920
			},
			"text": " It's only roughly 1,000 lines of code."
		},
		{
			"timestamps": {
				"from": "01:06:11,920",
				"to": "01:06:13,920"
			},
			"offsets": {
				"from": 3971920,
				"to": 3973920
			},
			"text": " Quite readable."
		},
		{
			"timestamps": {
				"from": "01:06:13,920",
				"to": "01:06:18,920"
			},
			"offsets": {
				"from": 3973920,
				"to": 3978920
			},
			"text": " The link up there is quite long, so I will shorten it."
		},
		{
			"timestamps": {
				"from": "01:06:18,920",
				"to": "01:06:19,920"
			},
			"offsets": {
				"from": 3978920,
				"to": 3979920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:06:19,920",
				"to": "01:06:22,920"
			},
			"offsets": {
				"from": 3979920,
				"to": 3982920
			},
			"text": " Just to give a bit of context, you know, you all know this."
		},
		{
			"timestamps": {
				"from": "01:06:22,920",
				"to": "01:06:27,920"
			},
			"offsets": {
				"from": 3982920,
				"to": 3987920
			},
			"text": " We have the beacon chain, which is kind of the system chain of the whole system, the spine."
		},
		{
			"timestamps": {
				"from": "01:06:27,920",
				"to": "01:06:31,920"
			},
			"offsets": {
				"from": 3987920,
				"to": 3991920
			},
			"text": " All the shards kind of connect to it via cross links."
		},
		{
			"timestamps": {
				"from": "01:06:31,920",
				"to": "01:06:36,920"
			},
			"offsets": {
				"from": 3991920,
				"to": 3996920
			},
			"text": " The shards come later, and I'm going to focus on the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:06:36,920",
				"to": "01:06:37,920"
			},
			"offsets": {
				"from": 3996920,
				"to": 3997920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:06:37,920",
				"to": "01:06:38,920"
			},
			"offsets": {
				"from": 3997920,
				"to": 3998920
			},
			"text": " So, we have slots."
		},
		{
			"timestamps": {
				"from": "01:06:38,920",
				"to": "01:06:39,920"
			},
			"offsets": {
				"from": 3998920,
				"to": 3999920
			},
			"text": " We know this."
		},
		{
			"timestamps": {
				"from": "01:06:39,920",
				"to": "01:06:42,920"
			},
			"offsets": {
				"from": 3999920,
				"to": 4002920
			},
			"text": " We have blocks in the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:06:42,920",
				"to": "01:06:44,920"
			},
			"offsets": {
				"from": 4002920,
				"to": 4004920
			},
			"text": " And we also have state."
		},
		{
			"timestamps": {
				"from": "01:06:44,920",
				"to": "01:06:49,920"
			},
			"offsets": {
				"from": 4004920,
				"to": 4009920
			},
			"text": " And basically, state advances for every block."
		},
		{
			"timestamps": {
				"from": "01:06:49,920",
				"to": "01:06:54,920"
			},
			"offsets": {
				"from": 4009920,
				"to": 4014920
			},
			"text": " And so, what I'd like to focus on today is, you know, what is a block?"
		},
		{
			"timestamps": {
				"from": "01:06:54,920",
				"to": "01:06:55,920"
			},
			"offsets": {
				"from": 4014920,
				"to": 4015920
			},
			"text": " What is state?"
		},
		{
			"timestamps": {
				"from": "01:06:55,920",
				"to": "01:06:59,920"
			},
			"offsets": {
				"from": 4015920,
				"to": 4019920
			},
			"text": " And what is the state transition?"
		},
		{
			"timestamps": {
				"from": "01:06:59,920",
				"to": "01:07:02,920"
			},
			"offsets": {
				"from": 4019920,
				"to": 4022920
			},
			"text": " So, this is the state transition function."
		},
		{
			"timestamps": {
				"from": "01:07:02,920",
				"to": "01:07:09,920"
			},
			"offsets": {
				"from": 4022920,
				"to": 4029920
			},
			"text": " And, you know, it takes a state, a block, returns a post state, or an error."
		},
		{
			"timestamps": {
				"from": "01:07:09,920",
				"to": "01:07:14,920"
			},
			"offsets": {
				"from": 4029920,
				"to": 4034920
			},
			"text": " So, you can just say, okay, this block is just invalid, and I'm going to abort there."
		},
		{
			"timestamps": {
				"from": "01:07:14,920",
				"to": "01:07:20,920"
			},
			"offsets": {
				"from": 4034920,
				"to": 4040920
			},
			"text": " And if it's valid, I'll give you the next version of the state."
		},
		{
			"timestamps": {
				"from": "01:07:20,920",
				"to": "01:07:23,920"
			},
			"offsets": {
				"from": 4040920,
				"to": 4043920
			},
			"text": " And in addition to slots, we have epochs."
		},
		{
			"timestamps": {
				"from": "01:07:23,920",
				"to": "01:07:28,920"
			},
			"offsets": {
				"from": 4043920,
				"to": 4048920
			},
			"text": " So, 64 slots per epoch, which is 6.4 minutes."
		},
		{
			"timestamps": {
				"from": "01:07:28,920",
				"to": "01:07:38,920"
			},
			"offsets": {
				"from": 4048920,
				"to": 4058920
			},
			"text": " And epochs are kind of important from the point of view of the state transition function, because this is where some of the kind of"
		},
		{
			"timestamps": {
				"from": "01:07:38,920",
				"to": "01:07:41,920"
			},
			"offsets": {
				"from": 4058920,
				"to": 4061920
			},
			"text": " accounting happens at the epoch boundaries."
		},
		{
			"timestamps": {
				"from": "01:07:41,920",
				"to": "01:07:45,920"
			},
			"offsets": {
				"from": 4061920,
				"to": 4065920
			},
			"text": " So, you have these state transition functions on a per block basis."
		},
		{
			"timestamps": {
				"from": "01:07:45,920",
				"to": "01:07:53,920"
			},
			"offsets": {
				"from": 4065920,
				"to": 4073920
			},
			"text": " And then you have also state transition functions that happen on a per epoch basis."
		},
		{
			"timestamps": {
				"from": "01:07:53,920",
				"to": "01:08:00,920"
			},
			"offsets": {
				"from": 4073920,
				"to": 4080920
			},
			"text": " Okay, so this is kind of a high-level overview of the various components of the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:08:00,920",
				"to": "01:08:07,920"
			},
			"offsets": {
				"from": 4080920,
				"to": 4087920
			},
			"text": " And you can kind of think of it as an organism with various organs that connect to each other."
		},
		{
			"timestamps": {
				"from": "01:08:07,920",
				"to": "01:08:11,920"
			},
			"offsets": {
				"from": 4087920,
				"to": 4091920
			},
			"text": " And you have the lungs, the heart, whatever, all these things."
		},
		{
			"timestamps": {
				"from": "01:08:11,920",
				"to": "01:08:14,920"
			},
			"offsets": {
				"from": 4091920,
				"to": 4094920
			},
			"text": " And here, they each provide kind of vital functions."
		},
		{
			"timestamps": {
				"from": "01:08:14,920",
				"to": "01:08:17,920"
			},
			"offsets": {
				"from": 4094920,
				"to": 4097920
			},
			"text": " So, you have, for example, randomness."
		},
		{
			"timestamps": {
				"from": "01:08:17,920",
				"to": "01:08:21,920"
			},
			"offsets": {
				"from": 4097920,
				"to": 4101920
			},
			"text": " You have the registry which keeps track of the validators."
		},
		{
			"timestamps": {
				"from": "01:08:21,920",
				"to": "01:08:24,920"
			},
			"offsets": {
				"from": 4101920,
				"to": 4104920
			},
			"text": " You have finality down there."
		},
		{
			"timestamps": {
				"from": "01:08:24,920",
				"to": "01:08:29,920"
			},
			"offsets": {
				"from": 4104920,
				"to": 4109920
			},
			"text": " You need deposits, of course, if you want proof of stake."
		},
		{
			"timestamps": {
				"from": "01:08:29,920",
				"to": "01:08:32,920"
			},
			"offsets": {
				"from": 4109920,
				"to": 4112920
			},
			"text": " And, yeah, everything is kind of flat."
		},
		{
			"timestamps": {
				"from": "01:08:32,920",
				"to": "01:08:39,920"
			},
			"offsets": {
				"from": 4112920,
				"to": 4119920
			},
			"text": " So, it's not like a layered system, but we do have the beacon chain and the shot data and the shot state."
		},
		{
			"timestamps": {
				"from": "01:08:39,920",
				"to": "01:08:44,920"
			},
			"offsets": {
				"from": 4119920,
				"to": 4124920
			},
			"text": " But within the beacon chain is actually quite flat and horizontal."
		},
		{
			"timestamps": {
				"from": "01:08:44,920",
				"to": "01:08:47,920"
			},
			"offsets": {
				"from": 4124920,
				"to": 4127920
			},
			"text": " And each of these things can be swapped out."
		},
		{
			"timestamps": {
				"from": "01:08:47,920",
				"to": "01:08:49,920"
			},
			"offsets": {
				"from": 4127920,
				"to": 4129920
			},
			"text": " It's very modular."
		},
		{
			"timestamps": {
				"from": "01:08:49,920",
				"to": "01:09:01,920"
			},
			"offsets": {
				"from": 4129920,
				"to": 4141920
			},
			"text": " And so, one of the goals, the roles of a designer is kind of to pick the best ingredients there and try and put them together in a harmonious system."
		},
		{
			"timestamps": {
				"from": "01:09:01,920",
				"to": "01:09:09,920"
			},
			"offsets": {
				"from": 4141920,
				"to": 4149920
			},
			"text": " And in terms of color coding, I'm going to use blue for the state and green for the blocks."
		},
		{
			"timestamps": {
				"from": "01:09:09,920",
				"to": "01:09:11,920"
			},
			"offsets": {
				"from": 4149920,
				"to": 4151920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:09:11,920",
				"to": "01:09:13,920"
			},
			"offsets": {
				"from": 4151920,
				"to": 4153920
			},
			"text": " So, what is the state?"
		},
		{
			"timestamps": {
				"from": "01:09:13,920",
				"to": "01:09:18,920"
			},
			"offsets": {
				"from": 4153920,
				"to": 4158920
			},
			"text": " Let's try and actually read the code chunk by chunk."
		},
		{
			"timestamps": {
				"from": "01:09:18,920",
				"to": "01:09:22,920"
			},
			"offsets": {
				"from": 4158920,
				"to": 4162920
			},
			"text": " So, try and understand what is in there."
		},
		{
			"timestamps": {
				"from": "01:09:22,920",
				"to": "01:09:29,920"
			},
			"offsets": {
				"from": 4162920,
				"to": 4169920
			},
			"text": " So, we have these three properties which are basically related to versioning in space and time."
		},
		{
			"timestamps": {
				"from": "01:09:29,920",
				"to": "01:09:35,920"
			},
			"offsets": {
				"from": 4169920,
				"to": 4175920
			},
			"text": " So, the genesis time tells you when the state was created."
		},
		{
			"timestamps": {
				"from": "01:09:35,920",
				"to": "01:09:40,920"
			},
			"offsets": {
				"from": 4175920,
				"to": 4180920
			},
			"text": " Slot kind of gives you a more granular notion of how much time has processed."
		},
		{
			"timestamps": {
				"from": "01:09:40,920",
				"to": "01:09:46,920"
			},
			"offsets": {
				"from": 4180920,
				"to": 4186920
			},
			"text": " And then the fork will kind of be versioning in space as opposed to versioning in time."
		},
		{
			"timestamps": {
				"from": "01:09:46,920",
				"to": "01:09:50,920"
			},
			"offsets": {
				"from": 4186920,
				"to": 4190920
			},
			"text": " So, every time we do a hard fork, we're going to update this."
		},
		{
			"timestamps": {
				"from": "01:09:50,920",
				"to": "01:09:58,920"
			},
			"offsets": {
				"from": 4190920,
				"to": 4198920
			},
			"text": " And one of the impacts that has is on the way that signatures are verified."
		},
		{
			"timestamps": {
				"from": "01:09:58,920",
				"to": "01:09:59,920"
			},
			"offsets": {
				"from": 4198920,
				"to": 4199920
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "01:09:59,920",
				"to": "01:10:02,920"
			},
			"offsets": {
				"from": 4199920,
				"to": 4202920
			},
			"text": " So, that's all basic stuff."
		},
		{
			"timestamps": {
				"from": "01:10:02,920",
				"to": "01:10:12,920"
			},
			"offsets": {
				"from": 4202920,
				"to": 4212920
			},
			"text": " More kind of basic infrastructure is the notion of root."
		},
		{
			"timestamps": {
				"from": "01:10:12,920",
				"to": "01:10:24,920"
			},
			"offsets": {
				"from": 4212920,
				"to": 4224920
			},
			"text": " So, we have state roots and block roots, which is the equivalent to what is traditionally called a block hash or an state root."
		},
		{
			"timestamps": {
				"from": "01:10:24,920",
				"to": "01:10:39,920"
			},
			"offsets": {
				"from": 4224920,
				"to": 4239920
			},
			"text": " And this is just a way of cryptographically keeping track of the various objects that we're working with and representing them in a way which is friendly to work with."
		},
		{
			"timestamps": {
				"from": "01:10:39,920",
				"to": "01:10:53,920"
			},
			"offsets": {
				"from": 4239920,
				"to": 4253920
			},
			"text": " So, the reason why we're working with roots as opposed to hashes is because the objects that we're working with are structured and we have this notion of a tree of hashes."
		},
		{
			"timestamps": {
				"from": "01:10:53,920",
				"to": "01:11:11,920"
			},
			"offsets": {
				"from": 4253920,
				"to": 4271920
			},
			"text": " So, if you're interested in a very specific property of an object, then you can access it via a miracle path for just a specific object as opposed to having to need the whole object."
		},
		{
			"timestamps": {
				"from": "01:11:11,920",
				"to": "01:11:31,920"
			},
			"offsets": {
				"from": 4271920,
				"to": 4291920
			},
			"text": " And then we have kind of the economic link to if one so we need deposits into if to the deposits come from if one and so the if to needs to be aware of if one and this is the state that is going to help us be aware of if one."
		},
		{
			"timestamps": {
				"from": "01:11:31,920",
				"to": "01:11:49,920"
			},
			"offsets": {
				"from": 4291920,
				"to": 4309920
			},
			"text": " So, we have the registry, this is going to be like probably the most important part of the state. So it's just the data structure that keeps track of all the validators, and it's by far the largest part of the state so you know this might be hundreds of"
		},
		{
			"timestamps": {
				"from": "01:11:49,920",
				"to": "01:11:57,920"
			},
			"offsets": {
				"from": 4309920,
				"to": 4317920
			},
			"text": " megabytes let's say, and the rest might be tiny just a few megabytes."
		},
		{
			"timestamps": {
				"from": "01:11:57,920",
				"to": "01:12:03,920"
			},
			"offsets": {
				"from": 4317920,
				"to": 4323920
			},
			"text": " We have some state related to shuffling and randomness."
		},
		{
			"timestamps": {
				"from": "01:12:03,920",
				"to": "01:12:09,920"
			},
			"offsets": {
				"from": 4323920,
				"to": 4329920
			},
			"text": " We have state related to slashings."
		},
		{
			"timestamps": {
				"from": "01:12:09,920",
				"to": "01:12:28,920"
			},
			"offsets": {
				"from": 4329920,
				"to": 4348920
			},
			"text": " We have state related to attestations so attestations is basically what the validators need to do that's the work that they have to do it helps advance the system and make it move forward, and this is what the validators get paid for."
		},
		{
			"timestamps": {
				"from": "01:12:28,920",
				"to": "01:12:39,920"
			},
			"offsets": {
				"from": 4348920,
				"to": 4359920
			},
			"text": " We have the cross links which is the link to the various shards, and then finally we have the finality mechanism."
		},
		{
			"timestamps": {
				"from": "01:12:39,920",
				"to": "01:12:56,920"
			},
			"offsets": {
				"from": 4359920,
				"to": 4376920
			},
			"text": " And in terms of concretely what are the modules that we've chosen here some of the keywords so we have FFG for finality, we have BLS signatures for the attestations, goes for the folk choice rule."
		},
		{
			"timestamps": {
				"from": "01:12:56,920",
				"to": "01:13:14,920"
			},
			"offsets": {
				"from": 4376920,
				"to": 4394920
			},
			"text": " We have randow for randomness, swap or not for the shuffling, we have SHA-256 as a hash function, and we have tree hashing as the way that we"
		},
		{
			"timestamps": {
				"from": "01:13:14,920",
				"to": "01:13:27,920"
			},
			"offsets": {
				"from": 4394920,
				"to": 4407920
			},
			"text": " have to make the object work."
		},
		{
			"timestamps": {
				"from": "01:13:27,920",
				"to": "01:13:41,920"
			},
			"offsets": {
				"from": 4407920,
				"to": 4421920
			},
			"text": " So let's try and understand what's in a block."
		},
		{
			"timestamps": {
				"from": "01:13:41,920",
				"to": "01:14:00,920"
			},
			"offsets": {
				"from": 4421920,
				"to": 4440920
			},
			"text": " So we have the state root, the state root, the signature, the BLS signature, and then the body which is going to be the more important part of the block."
		},
		{
			"timestamps": {
				"from": "01:14:00,920",
				"to": "01:14:13,920"
			},
			"offsets": {
				"from": 4440920,
				"to": 4453920
			},
			"text": " So let's look at the body, what's in there."
		},
		{
			"timestamps": {
				"from": "01:14:13,920",
				"to": "01:14:32,920"
			},
			"offsets": {
				"from": 4453920,
				"to": 4472920
			},
			"text": " So we have the system, one is the randomness system making progress randow, and then the other one is related to the link to if one, so trying to make that progress through voting, and then we have a graffiti which is just any data."
		},
		{
			"timestamps": {
				"from": "01:14:32,920",
				"to": "01:14:42,920"
			},
			"offsets": {
				"from": 4472920,
				"to": 4482920
			},
			"text": " So this is kind of encouraging people to innovate with putting data on the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:14:42,920",
				"to": "01:14:54,920"
			},
			"offsets": {
				"from": 4482920,
				"to": 4494920
			},
			"text": " And then we have the equivalent of a transaction, so normally in a block you'd put transactions, here it's a bit different because the transactions are not user transactions, they're system level transactions."
		},
		{
			"timestamps": {
				"from": "01:14:54,920",
				"to": "01:15:01,920"
			},
			"offsets": {
				"from": 4494920,
				"to": 4501920
			},
			"text": " So we call them operations, and we have these five different operations."
		},
		{
			"timestamps": {
				"from": "01:15:01,920",
				"to": "01:15:24,920"
			},
			"offsets": {
				"from": 4501920,
				"to": 4524920
			},
			"text": " So two are related to slashing, one is the attestations which is where the real work should happen, and then you have transactions which are related to people coming in of the system, leaving the system, or moving funds within the system."
		},
		{
			"timestamps": {
				"from": "01:15:24,920",
				"to": "01:15:27,920"
			},
			"offsets": {
				"from": 4524920,
				"to": 4527920
			},
			"text": " So these are just registry operations."
		},
		{
			"timestamps": {
				"from": "01:15:27,920",
				"to": "01:15:37,920"
			},
			"offsets": {
				"from": 4527920,
				"to": 4537920
			},
			"text": " The attestation is probably the most important, so the block contains attestations, and that's what moves the system forward."
		},
		{
			"timestamps": {
				"from": "01:15:37,920",
				"to": "01:15:52,920"
			},
			"offsets": {
				"from": 4537920,
				"to": 4552920
			},
			"text": " Okay, so I want to try and give you like the really high level of the state transition function, and I'm going to cheat a little bit, and I'm going to only present what I call the honest state transition function."
		},
		{
			"timestamps": {
				"from": "01:15:52,920",
				"to": "01:16:14,920"
			},
			"offsets": {
				"from": 4552920,
				"to": 4574920
			},
			"text": " By honest I mean that I'm going to assume that the block has been honestly constructed, so it's a valid block, and what this means in practice is that I'm going to try and tell you what are the mutations that the block will make on the state."
		},
		{
			"timestamps": {
				"from": "01:16:14,920",
				"to": "01:16:25,920"
			},
			"offsets": {
				"from": 4574920,
				"to": 4585920
			},
			"text": " So what I'm not going to tell you about is all the various ways that the state transition function can throw an error, so all the various assertions."
		},
		{
			"timestamps": {
				"from": "01:16:25,920",
				"to": "01:16:42,920"
			},
			"offsets": {
				"from": 4585920,
				"to": 4602920
			},
			"text": " And it turns out that the bulk of the complexity is actually here, but here it's really boring stuff, it's like, oh, verify that the signatures valid, verify that if you're transferring funds, you have enough funds."
		},
		{
			"timestamps": {
				"from": "01:16:42,920",
				"to": "01:16:54,920"
			},
			"offsets": {
				"from": 4602920,
				"to": 4614920
			},
			"text": " I think most of the insight actually comes here, like, just to try and understand how the state evolves, this is where it all happens."
		},
		{
			"timestamps": {
				"from": "01:16:54,920",
				"to": "01:17:10,920"
			},
			"offsets": {
				"from": 4614920,
				"to": 4630920
			},
			"text": " Okay, and so I've kind of subdivided the modules into three columns, so you have the scaffolding which is relevant pretty much for all blockchains, time, roots, and randomness."
		},
		{
			"timestamps": {
				"from": "01:17:10,920",
				"to": "01:17:19,920"
			},
			"offsets": {
				"from": 4630920,
				"to": 4639920
			},
			"text": " And then you have the registry which is one unique part to proof of stake."
		},
		{
			"timestamps": {
				"from": "01:17:19,920",
				"to": "01:17:25,920"
			},
			"offsets": {
				"from": 4639920,
				"to": 4645920
			},
			"text": " So you have things like deposits and exits."
		},
		{
			"timestamps": {
				"from": "01:17:25,920",
				"to": "01:17:42,920"
			},
			"offsets": {
				"from": 4645920,
				"to": 4662920
			},
			"text": " And then you have a final bit which is technically optional, but it's still extremely powerful related to finalization and cross links if you're on sharding."
		},
		{
			"timestamps": {
				"from": "01:17:42,920",
				"to": "01:17:52,920"
			},
			"offsets": {
				"from": 4662920,
				"to": 4672920
			},
			"text": " And also, ghost through the attestations."
		},
		{
			"timestamps": {
				"from": "01:17:52,920",
				"to": "01:18:16,920"
			},
			"offsets": {
				"from": 4672920,
				"to": 4696920
			},
			"text": " Okay, so let's go through this components one by one. So, blue is the state, green is the blocks. So, what happens at every slot, the slot number will increment, so you read the slot value and you just increment it."
		},
		{
			"timestamps": {
				"from": "01:18:16,920",
				"to": "01:18:22,920"
			},
			"offsets": {
				"from": 4696920,
				"to": 4702920
			},
			"text": " Nothing complicated here and the genesis time and the fork don't change."
		},
		{
			"timestamps": {
				"from": "01:18:22,920",
				"to": "01:18:31,920"
			},
			"offsets": {
				"from": 4702920,
				"to": 4711920
			},
			"text": " I mean, the fork will change kind of at the social consensus layer, but it doesn't change within the state transition function."
		},
		{
			"timestamps": {
				"from": "01:18:31,920",
				"to": "01:18:47,920"
			},
			"offsets": {
				"from": 4711920,
				"to": 4727920
			},
			"text": " Then you have kind of the header part of the block in green, which gets saved into data structure and also gets a mercilized into block routes."
		},
		{
			"timestamps": {
				"from": "01:18:47,920",
				"to": "01:18:59,920"
			},
			"offsets": {
				"from": 4727920,
				"to": 4739920
			},
			"text": " So the beacon chain is kind of aware of its block routes in the past, the recent block routes, and also recent state routes."
		},
		{
			"timestamps": {
				"from": "01:18:59,920",
				"to": "01:19:08,920"
			},
			"offsets": {
				"from": 4739920,
				"to": 4748920
			},
			"text": " And it will basically come build from these so-called historical routes."
		},
		{
			"timestamps": {
				"from": "01:19:08,920",
				"to": "01:19:24,920"
			},
			"offsets": {
				"from": 4748920,
				"to": 4764920
			},
			"text": " So this is a historical accumulator which allows you to go back in time arbitrarily far and provide a witness to any part of the state or any part of a block."
		},
		{
			"timestamps": {
				"from": "01:19:24,920",
				"to": "01:19:30,920"
			},
			"offsets": {
				"from": 4764920,
				"to": 4770920
			},
			"text": " And one of the cool properties of this accumulator is that the witnesses don't change over time."
		},
		{
			"timestamps": {
				"from": "01:19:30,920",
				"to": "01:19:50,920"
			},
			"offsets": {
				"from": 4770920,
				"to": 4790920
			},
			"text": " So if you have a statement saying, I know that at slot 1000, the balance of this validator was this amount, whatever proof you had, the mercil path will remain valid forever."
		},
		{
			"timestamps": {
				"from": "01:19:50,920",
				"to": "01:19:58,920"
			},
			"offsets": {
				"from": 4790920,
				"to": 4798920
			},
			"text": " And then you have the randomness, which was explained by Danghat, and this is the basic scaffolding."
		},
		{
			"timestamps": {
				"from": "01:19:58,920",
				"to": "01:20:10,920"
			},
			"offsets": {
				"from": 4798920,
				"to": 4810920
			},
			"text": " And the way that the randomness moves forward is that in every block, the green part, you exor in the reveal into the Randel mix."
		},
		{
			"timestamps": {
				"from": "01:20:10,920",
				"to": "01:20:24,920"
			},
			"offsets": {
				"from": 4810920,
				"to": 4824920
			},
			"text": " So the Randel mix just keeps on mixing in entropy, and this entropy is kept in the state, and it's sampled every epoch to do a shuffling."
		},
		{
			"timestamps": {
				"from": "01:20:24,920",
				"to": "01:20:45,920"
			},
			"offsets": {
				"from": 4824920,
				"to": 4845920
			},
			"text": " Okay, then we have the registry with the validators, and one of the things that we've done here as an optimization is we've decoupled the balances from the rest of the validator fields."
		},
		{
			"timestamps": {
				"from": "01:20:45,920",
				"to": "01:20:54,920"
			},
			"offsets": {
				"from": 4845920,
				"to": 4854920
			},
			"text": " And the reason is that the validator fields will change very infrequently, whereas the balances will change very frequently."
		},
		{
			"timestamps": {
				"from": "01:20:54,920",
				"to": "01:21:10,920"
			},
			"offsets": {
				"from": 4854920,
				"to": 4870920
			},
			"text": " So there's a high overhead to constantly be mercurizing what changes fast, and so we want to segregate in one place everything that changes fast."
		},
		{
			"timestamps": {
				"from": "01:21:10,920",
				"to": "01:21:23,920"
			},
			"offsets": {
				"from": 4870920,
				"to": 4883920
			},
			"text": " And this was covered by Shower. So in the... Let's have a quick deep dive as to what's inside these validators."
		},
		{
			"timestamps": {
				"from": "01:21:23,920",
				"to": "01:21:29,920"
			},
			"offsets": {
				"from": 4883920,
				"to": 4889920
			},
			"text": " So the validators is a list of validator objects. This is what the validator object looks like."
		},
		{
			"timestamps": {
				"from": "01:21:29,920",
				"to": "01:21:34,920"
			},
			"offsets": {
				"from": 4889920,
				"to": 4894920
			},
			"text": " It has the public key, as you'd expect. This is kind of interesting."
		},
		{
			"timestamps": {
				"from": "01:21:34,920",
				"to": "01:21:45,920"
			},
			"offsets": {
				"from": 4894920,
				"to": 4905920
			},
			"text": " It's the hash of another public key. So this other public key is meant to be your withdrawal key that you keep in cold storage."
		},
		{
			"timestamps": {
				"from": "01:21:45,920",
				"to": "01:21:57,920"
			},
			"offsets": {
				"from": 4905920,
				"to": 4917920
			},
			"text": " So as a validator you have two keys, you kind of have a hot one that you use on a day-to-day basis to sign your attestations, and then you have a cold one which you use for withdrawal and transfers."
		},
		{
			"timestamps": {
				"from": "01:21:57,920",
				"to": "01:22:04,920"
			},
			"offsets": {
				"from": 4917920,
				"to": 4924920
			},
			"text": " And so if your validator node which is online gets hacked, then the hacker cannot steal your funds."
		},
		{
			"timestamps": {
				"from": "01:22:04,920",
				"to": "01:22:13,920"
			},
			"offsets": {
				"from": 4924920,
				"to": 4933920
			},
			"text": " So that provides a nice level of protection for you."
		},
		{
			"timestamps": {
				"from": "01:22:13,920",
				"to": "01:22:18,920"
			},
			"offsets": {
				"from": 4933920,
				"to": 4938920
			},
			"text": " Okay, all of this was covered by Shower."
		},
		{
			"timestamps": {
				"from": "01:22:18,920",
				"to": "01:22:27,920"
			},
			"offsets": {
				"from": 4938920,
				"to": 4947920
			},
			"text": " Okay, so which parts of the systems interact with the registry? Well, we have the deposits."
		},
		{
			"timestamps": {
				"from": "01:22:27,920",
				"to": "01:22:43,920"
			},
			"offsets": {
				"from": 4947920,
				"to": 4963920
			},
			"text": " So every block in the beacon chain will contain a list of deposits here, and these deposits will get processed, and then that will create validator entries in the registry."
		},
		{
			"timestamps": {
				"from": "01:22:43,920",
				"to": "01:22:48,920"
			},
			"offsets": {
				"from": 4963920,
				"to": 4968920
			},
			"text": " But then the beacon chain is to know what is a valid deposit."
		},
		{
			"timestamps": {
				"from": "01:22:48,920",
				"to": "01:22:53,920"
			},
			"offsets": {
				"from": 4968920,
				"to": 4973920
			},
			"text": " And for that it needs to be aware of the if one chain. So how does that work?"
		},
		{
			"timestamps": {
				"from": "01:22:53,920",
				"to": "01:23:11,920"
			},
			"offsets": {
				"from": 4973920,
				"to": 4991920
			},
			"text": " So in every block, the block proposal will have if one data saying this is what I think is the block hash of if one around which we need to come to consensus."
		},
		{
			"timestamps": {
				"from": "01:23:11,920",
				"to": "01:23:40,920"
			},
			"offsets": {
				"from": 4991920,
				"to": 5020920
			},
			"text": " And so this data gets stored in the state as votes, and then at a certain epoch boundary, these votes are counted, and if there is a majority of votes for specific if one data, this specific if one data is updated in the state as the latest snapshot of if one."
		},
		{
			"timestamps": {
				"from": "01:23:40,920",
				"to": "01:23:47,920"
			},
			"offsets": {
				"from": 5020920,
				"to": 5027920
			},
			"text": " And the idea here basically is honest majority sampling."
		},
		{
			"timestamps": {
				"from": "01:23:47,920",
				"to": "01:24:01,920"
			},
			"offsets": {
				"from": 5027920,
				"to": 5041920
			},
			"text": " So we have the large number of validators, let's say a million validators, we have this honest assumption that at least two thirds of the active validators are honest."
		},
		{
			"timestamps": {
				"from": "01:24:01,920",
				"to": "01:24:13,920"
			},
			"offsets": {
				"from": 5041920,
				"to": 5053920
			},
			"text": " We're going to sample a thousand of them, and the way that the sampling works is over a thousand sequential slots."
		},
		{
			"timestamps": {
				"from": "01:24:13,920",
				"to": "01:24:23,920"
			},
			"offsets": {
				"from": 5053920,
				"to": 5063920
			},
			"text": " And if this randomness is good enough, then we know with high probability that at least one half of the if one voting committee will be honest."
		},
		{
			"timestamps": {
				"from": "01:24:23,920",
				"to": "01:24:45,920"
			},
			"offsets": {
				"from": 5063920,
				"to": 5085920
			},
			"text": " The voting committee being these 1000 block proposals, and so that means that if we have at least half of the votes here vote for a given piece of data, then that piece of data will be representative of reality representative of if one."
		},
		{
			"timestamps": {
				"from": "01:24:45,920",
				"to": "01:24:53,920"
			},
			"offsets": {
				"from": 5085920,
				"to": 5093920
			},
			"text": " And by the way, this honest majority idea is really useful cross-links as well."
		},
		{
			"timestamps": {
				"from": "01:24:53,920",
				"to": "01:25:00,920"
			},
			"offsets": {
				"from": 5093920,
				"to": 5100920
			},
			"text": " Okay, so now I guess comes the more interesting stuff."
		},
		{
			"timestamps": {
				"from": "01:25:00,920",
				"to": "01:25:06,920"
			},
			"offsets": {
				"from": 5100920,
				"to": 5106920
			},
			"text": " So the attestation, this is the work that the validators have to do."
		},
		{
			"timestamps": {
				"from": "01:25:06,920",
				"to": "01:25:11,920"
			},
			"offsets": {
				"from": 5106920,
				"to": 5111920
			},
			"text": " So what is inside an attestation?"
		},
		{
			"timestamps": {
				"from": "01:25:11,920",
				"to": "01:25:15,920"
			},
			"offsets": {
				"from": 5111920,
				"to": 5115920
			},
			"text": " So this is kind of the header of the attestation."
		},
		{
			"timestamps": {
				"from": "01:25:15,920",
				"to": "01:25:18,920"
			},
			"offsets": {
				"from": 5115920,
				"to": 5118920
			},
			"text": " It has a signature."
		},
		{
			"timestamps": {
				"from": "01:25:18,920",
				"to": "01:25:32,920"
			},
			"offsets": {
				"from": 5118920,
				"to": 5132920
			},
			"text": " And here it's important that we have the BLS, because we have different validators all part of the same committee that will be signing the same attestation."
		},
		{
			"timestamps": {
				"from": "01:25:32,920",
				"to": "01:25:44,920"
			},
			"offsets": {
				"from": 5132920,
				"to": 5144920
			},
			"text": " And the way that the aggregation works is that we're going to specify in the aggregation bit here, which validators have participated in the specific aggregation."
		},
		{
			"timestamps": {
				"from": "01:25:44,920",
				"to": "01:25:48,920"
			},
			"offsets": {
				"from": 5144920,
				"to": 5148920
			},
			"text": " So we have a committee, let's say of a thousand validators."
		},
		{
			"timestamps": {
				"from": "01:25:48,920",
				"to": "01:26:03,920"
			},
			"offsets": {
				"from": 5148920,
				"to": 5163920
			},
			"text": " They're ordered, and this bit list is going to be a thousand bits, each zero or one indicating that the validator was included in the aggregate signature here for this attestation."
		},
		{
			"timestamps": {
				"from": "01:26:03,920",
				"to": "01:26:08,920"
			},
			"offsets": {
				"from": 5163920,
				"to": 5168920
			},
			"text": " And then we have the data, which is going to be the body of the attestation, which is more interesting."
		},
		{
			"timestamps": {
				"from": "01:26:08,920",
				"to": "01:26:10,920"
			},
			"offsets": {
				"from": 5168920,
				"to": 5170920
			},
			"text": " And it basically has three parts."
		},
		{
			"timestamps": {
				"from": "01:26:10,920",
				"to": "01:26:18,920"
			},
			"offsets": {
				"from": 5170920,
				"to": 5178920
			},
			"text": " The attestation data, when you make an attestation as a validator, you're making three votes all in one go."
		},
		{
			"timestamps": {
				"from": "01:26:18,920",
				"to": "01:26:26,920"
			},
			"offsets": {
				"from": 5178920,
				"to": 5186920
			},
			"text": " And this is part of the reason why this is part of what I mean by harmoniously connecting the various elements."
		},
		{
			"timestamps": {
				"from": "01:26:26,920",
				"to": "01:26:30,920"
			},
			"offsets": {
				"from": 5186920,
				"to": 5190920
			},
			"text": " This is one place where we've done it."
		},
		{
			"timestamps": {
				"from": "01:26:30,920",
				"to": "01:26:44,920"
			},
			"offsets": {
				"from": 5190920,
				"to": 5204920
			},
			"text": " So when you make an attestation, you're voting for a past beacon block, and that's going to count towards the fortress rule, LMD Ghost."
		},
		{
			"timestamps": {
				"from": "01:26:44,920",
				"to": "01:26:50,920"
			},
			"offsets": {
				"from": 5204920,
				"to": 5210920
			},
			"text": " But at the same time, you're making a finality vote, an FFG vote."
		},
		{
			"timestamps": {
				"from": "01:26:50,920",
				"to": "01:26:56,920"
			},
			"offsets": {
				"from": 5210920,
				"to": 5216920
			},
			"text": " And so you're going to be voting for a source target pair."
		},
		{
			"timestamps": {
				"from": "01:26:56,920",
				"to": "01:27:00,920"
			},
			"offsets": {
				"from": 5216920,
				"to": 5220920
			},
			"text": " And so that's going to lead to justifications and finality."
		},
		{
			"timestamps": {
				"from": "01:27:00,920",
				"to": "01:27:04,920"
			},
			"offsets": {
				"from": 5220920,
				"to": 5224920
			},
			"text": " And in addition, you're voting for a crosslink."
		},
		{
			"timestamps": {
				"from": "01:27:04,920",
				"to": "01:27:08,920"
			},
			"offsets": {
				"from": 5224920,
				"to": 5228920
			},
			"text": " So as a committee, you are assigned to a specific shard."
		},
		{
			"timestamps": {
				"from": "01:27:08,920",
				"to": "01:27:19,920"
			},
			"offsets": {
				"from": 5228920,
				"to": 5239920
			},
			"text": " You're meant to download a chunk of the shard, run it, validate it, and if it's good, then make a crosslink."
		},
		{
			"timestamps": {
				"from": "01:27:19,920",
				"to": "01:27:25,920"
			},
			"offsets": {
				"from": 5239920,
				"to": 5245920
			},
			"text": " So vote for that specific chunk of shard."
		},
		{
			"timestamps": {
				"from": "01:27:25,920",
				"to": "01:27:30,920"
			},
			"offsets": {
				"from": 5245920,
				"to": 5250920
			},
			"text": " So, I mean, this was covered by Danny."
		},
		{
			"timestamps": {
				"from": "01:27:30,920",
				"to": "01:27:41,920"
			},
			"offsets": {
				"from": 5250920,
				"to": 5261920
			},
			"text": " Basically, what is a checkpoint here in the FFG vote is nothing more than a pair of an epoch and hash."
		},
		{
			"timestamps": {
				"from": "01:27:41,920",
				"to": "01:27:43,920"
			},
			"offsets": {
				"from": 5261920,
				"to": 5263920
			},
			"text": " And what is a crosslink?"
		},
		{
			"timestamps": {
				"from": "01:27:43,920",
				"to": "01:27:47,920"
			},
			"offsets": {
				"from": 5263920,
				"to": 5267920
			},
			"text": " Well, a crosslink is a small segment of a shard."
		},
		{
			"timestamps": {
				"from": "01:27:47,920",
				"to": "01:27:49,920"
			},
			"offsets": {
				"from": 5267920,
				"to": 5269920
			},
			"text": " So how do you represent that?"
		},
		{
			"timestamps": {
				"from": "01:27:49,920",
				"to": "01:27:51,920"
			},
			"offsets": {
				"from": 5269920,
				"to": 5271920
			},
			"text": " Well, you need the shard number."
		},
		{
			"timestamps": {
				"from": "01:27:51,920",
				"to": "01:27:59,920"
			},
			"offsets": {
				"from": 5271920,
				"to": 5279920
			},
			"text": " You're going to need the start of the end epoch of this chunk of shard that you're crosslinking."
		},
		{
			"timestamps": {
				"from": "01:27:59,920",
				"to": "01:28:14,920"
			},
			"offsets": {
				"from": 5279920,
				"to": 5294920
			},
			"text": " And you're going to need the data root, which is going to represent the mercurilization of the chunk that you're crosslinking."
		},
		{
			"timestamps": {
				"from": "01:28:14,920",
				"to": "01:28:24,920"
			},
			"offsets": {
				"from": 5294920,
				"to": 5304920
			},
			"text": " Okay, so in green, we have the attestations in the blocks, and then on a slot-by-slot basis, they get stored into the state."
		},
		{
			"timestamps": {
				"from": "01:28:24,920",
				"to": "01:28:30,920"
			},
			"offsets": {
				"from": 5304920,
				"to": 5310920
			},
			"text": " And they can either get stored in the previous epoch or current epoch attestations."
		},
		{
			"timestamps": {
				"from": "01:28:30,920",
				"to": "01:28:33,920"
			},
			"offsets": {
				"from": 5310920,
				"to": 5313920
			},
			"text": " So if your attestation is stale, it's very old."
		},
		{
			"timestamps": {
				"from": "01:28:33,920",
				"to": "01:28:35,920"
			},
			"offsets": {
				"from": 5313920,
				"to": 5315920
			},
			"text": " It's older than the previous epoch."
		},
		{
			"timestamps": {
				"from": "01:28:35,920",
				"to": "01:28:48,920"
			},
			"offsets": {
				"from": 5315920,
				"to": 5328920
			},
			"text": " And we don't even bother saving it in state. We only record the current and previous epoch attestations."
		},
		{
			"timestamps": {
				"from": "01:28:48,920",
				"to": "01:28:55,920"
			},
			"offsets": {
				"from": 5328920,
				"to": 5335920
			},
			"text": " And then here we have the beginnings of the finality mechanism."
		},
		{
			"timestamps": {
				"from": "01:28:55,920",
				"to": "01:29:03,920"
			},
			"offsets": {
				"from": 5335920,
				"to": 5343920
			},
			"text": " So the finality mechanism works on an epoch by epoch basis, hence the blue arrow."
		},
		{
			"timestamps": {
				"from": "01:29:03,920",
				"to": "01:29:13,920"
			},
			"offsets": {
				"from": 5343920,
				"to": 5353920
			},
			"text": " And what it does is that it is going to look at the cache of recent attestations and then count the votes."
		},
		{
			"timestamps": {
				"from": "01:29:13,920",
				"to": "01:29:27,920"
			},
			"offsets": {
				"from": 5353920,
				"to": 5367920
			},
			"text": " And if we get to this two-third threshold, then we're going to record that we have made the two-thirds threshold by modifying the justification bit"
		},
		{
			"timestamps": {
				"from": "01:29:27,920",
				"to": "01:29:39,920"
			},
			"offsets": {
				"from": 5367920,
				"to": 5379920
			},
			"text": " and also by potentially advancing the last and the previous justified epoch."
		},
		{
			"timestamps": {
				"from": "01:29:39,920",
				"to": "01:29:47,920"
			},
			"offsets": {
				"from": 5379920,
				"to": 5387920
			},
			"text": " And then if we have this so-called finality patterns of which we have for, as explained by Danny,"
		},
		{
			"timestamps": {
				"from": "01:29:47,920",
				"to": "01:29:52,920"
			},
			"offsets": {
				"from": 5387920,
				"to": 5392920
			},
			"text": " then we're also going to advance the finalized checkpoint."
		},
		{
			"timestamps": {
				"from": "01:29:52,920",
				"to": "01:30:01,920"
			},
			"offsets": {
				"from": 5392920,
				"to": 5401920
			},
			"text": " So the beacon chain is going to be aware of its last finalized checkpoint."
		},
		{
			"timestamps": {
				"from": "01:30:01,920",
				"to": "01:30:12,920"
			},
			"offsets": {
				"from": 5401920,
				"to": 5412920
			},
			"text": " And as part of this, you know, part of the safety of this mechanism is the idea of slashing the attestors that make bad votes."
		},
		{
			"timestamps": {
				"from": "01:30:12,920",
				"to": "01:30:14,920"
			},
			"offsets": {
				"from": 5412920,
				"to": 5414920
			},
			"text": " So how does this work?"
		},
		{
			"timestamps": {
				"from": "01:30:14,920",
				"to": "01:30:17,920"
			},
			"offsets": {
				"from": 5414920,
				"to": 5417920
			},
			"text": " Well, we have fraud proofs."
		},
		{
			"timestamps": {
				"from": "01:30:17,920",
				"to": "01:30:21,920"
			},
			"offsets": {
				"from": 5417920,
				"to": 5421920
			},
			"text": " We have proofs that attestors have been doing a bad job."
		},
		{
			"timestamps": {
				"from": "01:30:21,920",
				"to": "01:30:24,920"
			},
			"offsets": {
				"from": 5421920,
				"to": 5424920
			},
			"text": " These are included in blocks in green."
		},
		{
			"timestamps": {
				"from": "01:30:24,920",
				"to": "01:30:30,920"
			},
			"offsets": {
				"from": 5424920,
				"to": 5430920
			},
			"text": " And they're going to have an immediate effect, a green arrow on the registry."
		},
		{
			"timestamps": {
				"from": "01:30:30,920",
				"to": "01:30:40,920"
			},
			"offsets": {
				"from": 5430920,
				"to": 5440920
			},
			"text": " So if someone has done slasherable behavior, they will be marked as slashed immediately in the registry."
		},
		{
			"timestamps": {
				"from": "01:30:40,920",
				"to": "01:30:54,920"
			},
			"offsets": {
				"from": 5440920,
				"to": 5454920
			},
			"text": " And in addition to that, we keep track of the total amount of if that was slashed."
		},
		{
			"timestamps": {
				"from": "01:30:54,920",
				"to": "01:31:09,920"
			},
			"offsets": {
				"from": 5454920,
				"to": 5469920
			},
			"text": " And the reason we do that is because we want to have a mechanism whereby if only a few attesters do bad stuff,"
		},
		{
			"timestamps": {
				"from": "01:31:09,920",
				"to": "01:31:13,920"
			},
			"offsets": {
				"from": 5469920,
				"to": 5473920
			},
			"text": " for example, then we, they're not really jeopardizing the system."
		},
		{
			"timestamps": {
				"from": "01:31:13,920",
				"to": "01:31:15,920"
			},
			"offsets": {
				"from": 5473920,
				"to": 5475920
			},
			"text": " So we don't want to penalize them too strongly."
		},
		{
			"timestamps": {
				"from": "01:31:15,920",
				"to": "01:31:20,920"
			},
			"offsets": {
				"from": 5475920,
				"to": 5480920
			},
			"text": " But if lots of people are doing bad stuff, then the system is at risk."
		},
		{
			"timestamps": {
				"from": "01:31:20,920",
				"to": "01:31:24,920"
			},
			"offsets": {
				"from": 5480920,
				"to": 5484920
			},
			"text": " And so we want to penalize everyone to a large extent."
		},
		{
			"timestamps": {
				"from": "01:31:24,920",
				"to": "01:31:38,920"
			},
			"offsets": {
				"from": 5484920,
				"to": 5498920
			},
			"text": " And so this variable here in the state in blue is keeping track of how much bad behavior has happened in the recent past."
		},
		{
			"timestamps": {
				"from": "01:31:38,920",
				"to": "01:31:40,920"
			},
			"offsets": {
				"from": 5498920,
				"to": 5500920
			},
			"text": " And then we have the cross links."
		},
		{
			"timestamps": {
				"from": "01:31:40,920",
				"to": "01:31:51,920"
			},
			"offsets": {
				"from": 5500920,
				"to": 5511920
			},
			"text": " And this works pretty much exactly, well, very similar to this."
		},
		{
			"timestamps": {
				"from": "01:31:51,920",
				"to": "01:31:58,920"
			},
			"offsets": {
				"from": 5511920,
				"to": 5518920
			},
			"text": " So, no, it doesn't work the same."
		},
		{
			"timestamps": {
				"from": "01:31:58,920",
				"to": "01:32:06,920"
			},
			"offsets": {
				"from": 5518920,
				"to": 5526920
			},
			"text": " Oh, no, this is different, sorry."
		},
		{
			"timestamps": {
				"from": "01:32:06,920",
				"to": "01:32:14,920"
			},
			"offsets": {
				"from": 5526920,
				"to": 5534920
			},
			"text": " So this is basically is a mapping from shard to cross link."
		},
		{
			"timestamps": {
				"from": "01:32:14,920",
				"to": "01:32:20,920"
			},
			"offsets": {
				"from": 5534920,
				"to": 5540920
			},
			"text": " And it records the previous cross links or the current cross links."
		},
		{
			"timestamps": {
				"from": "01:32:20,920",
				"to": "01:32:33,920"
			},
			"offsets": {
				"from": 5540920,
				"to": 5553920
			},
			"text": " And basically, on every epoch, hence the blue arrow, we save the current cross links in the previous cross links."
		},
		{
			"timestamps": {
				"from": "01:32:33,920",
				"to": "01:32:50,920"
			},
			"offsets": {
				"from": 5553920,
				"to": 5570920
			},
			"text": " And that basically allows for the beacon chain to be aware of recent cross links across all the shards and hence for every shard to be aware through the beacon chain of the cross links on every other shard."
		},
		{
			"timestamps": {
				"from": "01:32:50,920",
				"to": "01:32:53,920"
			},
			"offsets": {
				"from": 5570920,
				"to": 5573920
			},
			"text": " And yeah, this is pretty much it."
		},
		{
			"timestamps": {
				"from": "01:32:53,920",
				"to": "01:32:59,920"
			},
			"offsets": {
				"from": 5573920,
				"to": 5579920
			},
			"text": " So we have the full kind of honest state transition function at a high level."
		},
		{
			"timestamps": {
				"from": "01:32:59,920",
				"to": "01:33:05,920"
			},
			"offsets": {
				"from": 5579920,
				"to": 5585920
			},
			"text": " Again, like made out of these modules which are replaceable, which talk to each other."
		},
		{
			"timestamps": {
				"from": "01:33:05,920",
				"to": "01:33:07,920"
			},
			"offsets": {
				"from": 5585920,
				"to": 5587920
			},
			"text": " And at the end of the day, there isn't that much happening."
		},
		{
			"timestamps": {
				"from": "01:33:07,920",
				"to": "01:33:10,920"
			},
			"offsets": {
				"from": 5587920,
				"to": 5590920
			},
			"text": " There's basic scaffolding."
		},
		{
			"timestamps": {
				"from": "01:33:10,920",
				"to": "01:33:14,920"
			},
			"offsets": {
				"from": 5590920,
				"to": 5594920
			},
			"text": " There's maintenance of the registry, which is kind of obvious stuff."
		},
		{
			"timestamps": {
				"from": "01:33:14,920",
				"to": "01:33:19,920"
			},
			"offsets": {
				"from": 5594920,
				"to": 5599920
			},
			"text": " And then there's finality, which is a very important gadget."
		},
		{
			"timestamps": {
				"from": "01:33:19,920",
				"to": "01:33:26,920"
			},
			"offsets": {
				"from": 5599920,
				"to": 5606920
			},
			"text": " And then we have this cross linking gadget for sharding."
		},
		{
			"timestamps": {
				"from": "01:33:26,920",
				"to": "01:33:27,920"
			},
			"offsets": {
				"from": 5606920,
				"to": 5607920
			},
			"text": " Okay, great."
		},
		{
			"timestamps": {
				"from": "01:33:27,920",
				"to": "01:33:32,920"
			},
			"offsets": {
				"from": 5607920,
				"to": 5612920
			},
			"text": " So that's why we're looking to launch in phase zero, but what comes afterwards?"
		},
		{
			"timestamps": {
				"from": "01:33:32,920",
				"to": "01:33:50,920"
			},
			"offsets": {
				"from": 5612920,
				"to": 5630920
			},
			"text": " We have transfers which are slated to come likely in phase one, which will basically allow for if on the beacon chain to be sellable and that will create a market for this if."
		},
		{
			"timestamps": {
				"from": "01:33:50,920",
				"to": "01:34:00,920"
			},
			"offsets": {
				"from": 5630920,
				"to": 5640920
			},
			"text": " But we also have a bunch of security upgrades that we're looking to do."
		},
		{
			"timestamps": {
				"from": "01:34:00,920",
				"to": "01:34:05,920"
			},
			"offsets": {
				"from": 5640920,
				"to": 5645920
			},
			"text": " And each of these security upgrades are optional, but they're very nice to have."
		},
		{
			"timestamps": {
				"from": "01:34:05,920",
				"to": "01:34:14,920"
			},
			"offsets": {
				"from": 5645920,
				"to": 5654920
			},
			"text": " And one of the reasons why we're not putting them upfront is because they all have fancy constructions and fancy photography."
		},
		{
			"timestamps": {
				"from": "01:34:14,920",
				"to": "01:34:31,920"
			},
			"offsets": {
				"from": 5654920,
				"to": 5671920
			},
			"text": " We have the idea of secret proposals where instead of knowing upfront who the next proposals will be, we can have a system whereby we don't know which proposals will be invited to create beacon blocks."
		},
		{
			"timestamps": {
				"from": "01:34:31,920",
				"to": "01:34:35,920"
			},
			"offsets": {
				"from": 5671920,
				"to": 5675920
			},
			"text": " And that is a way to protect ourselves against the number of service attacks."
		},
		{
			"timestamps": {
				"from": "01:34:35,920",
				"to": "01:34:44,920"
			},
			"offsets": {
				"from": 5675920,
				"to": 5684920
			},
			"text": " Because if you know who the next proposals will be, then you can target them at the networking layer."
		},
		{
			"timestamps": {
				"from": "01:34:44,920",
				"to": "01:34:52,920"
			},
			"offsets": {
				"from": 5684920,
				"to": 5692920
			},
			"text": " We have VDF randomness upgrade, which might come in phase two, might come later."
		},
		{
			"timestamps": {
				"from": "01:34:52,920",
				"to": "01:34:59,920"
			},
			"offsets": {
				"from": 5692920,
				"to": 5699920
			},
			"text": " And then we have data availability proofs."
		},
		{
			"timestamps": {
				"from": "01:34:59,920",
				"to": "01:35:06,920"
			},
			"offsets": {
				"from": 5699920,
				"to": 5706920
			},
			"text": " And one thing I didn't mention here actually is light clients in infrastructure."
		},
		{
			"timestamps": {
				"from": "01:35:06,920",
				"to": "01:35:15,920"
			},
			"offsets": {
				"from": 5706920,
				"to": 5715920
			},
			"text": " So we want to make it very easy to have beacon chain light clients and this infrastructure will come in phase one."
		},
		{
			"timestamps": {
				"from": "01:35:15,920",
				"to": "01:35:23,920"
			},
			"offsets": {
				"from": 5715920,
				"to": 5723920
			},
			"text": " And we also have a CBC ghost, which I see CBC Casper, which I have in this here."
		},
		{
			"timestamps": {
				"from": "01:35:23,920",
				"to": "01:35:35,920"
			},
			"offsets": {
				"from": 5723920,
				"to": 5735920
			},
			"text": " And then kind of two other ways in which we may upgrade the beacon chain is to have multi hashing."
		},
		{
			"timestamps": {
				"from": "01:35:35,920",
				"to": "01:35:48,920"
			},
			"offsets": {
				"from": 5735920,
				"to": 5748920
			},
			"text": " So instead of having one single hash function, Shatie 56, we might add native support for another hash function, one which could be friendly to Starks and to Starks."
		},
		{
			"timestamps": {
				"from": "01:35:48,920",
				"to": "01:36:00,920"
			},
			"offsets": {
				"from": 5748920,
				"to": 5760920
			},
			"text": " And later down the line, we're also looking to change the various cryptographic primitives, which are not quantum secure, and change them over to quantum secure equivalents."
		},
		{
			"timestamps": {
				"from": "01:36:00,920",
				"to": "01:36:10,920"
			},
			"offsets": {
				"from": 5760920,
				"to": 5770920
			},
			"text": " And so this includes BLS1231, which is not quantum secure, and also the RSA based VDF, which is not quantum secure."
		},
		{
			"timestamps": {
				"from": "01:36:10,920",
				"to": "01:36:14,920"
			},
			"offsets": {
				"from": 5770920,
				"to": 5774920
			},
			"text": " So I guess that will keep us busy for a few years."
		},
		{
			"timestamps": {
				"from": "01:36:14,920",
				"to": "01:36:17,920"
			},
			"offsets": {
				"from": 5774920,
				"to": 5777920
			},
			"text": " And yeah, that's it. Thanks."
		},
		{
			"timestamps": {
				"from": "01:36:17,920",
				"to": "01:36:24,920"
			},
			"offsets": {
				"from": 5777920,
				"to": 5784920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:36:24,920",
				"to": "01:36:26,920"
			},
			"offsets": {
				"from": 5784920,
				"to": 5786920
			},
			"text": " Thank you, Justin."
		},
		{
			"timestamps": {
				"from": "01:36:26,920",
				"to": "01:36:35,920"
			},
			"offsets": {
				"from": 5786920,
				"to": 5795920
			},
			"text": " I'm going to close it out talking about the validator duties in, or as age says, duties."
		},
		{
			"timestamps": {
				"from": "01:36:35,920",
				"to": "01:36:38,920"
			},
			"offsets": {
				"from": 5795920,
				"to": 5798920
			},
			"text": " I'm talking about the validator duties in phase zero."
		},
		{
			"timestamps": {
				"from": "01:36:38,920",
				"to": "01:36:50,920"
			},
			"offsets": {
				"from": 5798920,
				"to": 5810920
			},
			"text": " Some of this, if you actually look at the phase zero state transition spec, the validity conditions that Justin didn't go into kind of imply what a validator should be doing."
		},
		{
			"timestamps": {
				"from": "01:36:50,920",
				"to": "01:36:53,920"
			},
			"offsets": {
				"from": 5810920,
				"to": 5813920
			},
			"text": " But to make that explicit, we have the separate doc."
		},
		{
			"timestamps": {
				"from": "01:36:53,920",
				"to": "01:36:55,920"
			},
			"offsets": {
				"from": 5813920,
				"to": 5815920
			},
			"text": " And when I was compiling my slides, I thought that was a good idea."
		},
		{
			"timestamps": {
				"from": "01:36:55,920",
				"to": "01:36:59,920"
			},
			"offsets": {
				"from": 5815920,
				"to": 5819920
			},
			"text": " So I made a QR code and a tiny URL."
		},
		{
			"timestamps": {
				"from": "01:36:59,920",
				"to": "01:37:04,920"
			},
			"offsets": {
				"from": 5819920,
				"to": 5824920
			},
			"text": " So this document, which will go over some of the core components of it,"
		},
		{
			"timestamps": {
				"from": "01:37:04,920",
				"to": "01:37:10,920"
			},
			"offsets": {
				"from": 5824920,
				"to": 5830920
			},
			"text": " explain what and when a validator should be doing with respect to the beacon chain."
		},
		{
			"timestamps": {
				"from": "01:37:10,920",
				"to": "01:37:23,920"
			},
			"offsets": {
				"from": 5830920,
				"to": 5843920
			},
			"text": " The initial part of this document talks about creating public keys, initiating deposits, and a lot of that was kind of covered in showers, and just will be out of scope for this portion."
		},
		{
			"timestamps": {
				"from": "01:37:23,920",
				"to": "01:37:25,920"
			},
			"offsets": {
				"from": 5843920,
				"to": 5845920
			},
			"text": " So the tooth --"
		},
		{
			"timestamps": {
				"from": "01:37:25,920",
				"to": "01:37:28,920"
			},
			"offsets": {
				"from": 5845920,
				"to": 5848920
			},
			"text": " [Laughter]"
		},
		{
			"timestamps": {
				"from": "01:37:28,920",
				"to": "01:37:34,920"
			},
			"offsets": {
				"from": 5848920,
				"to": 5854920
			},
			"text": " The two main things that you do in phase zero is you propose blocks and you attest to blocks."
		},
		{
			"timestamps": {
				"from": "01:37:34,920",
				"to": "01:37:42,920"
			},
			"offsets": {
				"from": 5854920,
				"to": 5862920
			},
			"text": " In subsequent phases, you would do similar activity, but also on chart chains."
		},
		{
			"timestamps": {
				"from": "01:37:42,920",
				"to": "01:37:46,920"
			},
			"offsets": {
				"from": 5862920,
				"to": 5866920
			},
			"text": " So we have some stuff going on pretty much at any given slot."
		},
		{
			"timestamps": {
				"from": "01:37:46,920",
				"to": "01:37:51,920"
			},
			"offsets": {
				"from": 5866920,
				"to": 5871920
			},
			"text": " You can say, \"Am I the proposal?\" And if you are, make a block."
		},
		{
			"timestamps": {
				"from": "01:37:51,920",
				"to": "01:38:03,920"
			},
			"offsets": {
				"from": 5871920,
				"to": 5883920
			},
			"text": " This is independent of your attestation committee, your cross-link committee assignment, and it's noble within the epoch of assignment."
		},
		{
			"timestamps": {
				"from": "01:38:03,920",
				"to": "01:38:08,920"
			},
			"offsets": {
				"from": 5883920,
				"to": 5888920
			},
			"text": " You don't have a look ahead in a prior epoch, which is also different from the committee assignments."
		},
		{
			"timestamps": {
				"from": "01:38:08,920",
				"to": "01:38:15,920"
			},
			"offsets": {
				"from": 5888920,
				"to": 5895920
			},
			"text": " And the action of proposing a block is at the initial start of a slot."
		},
		{
			"timestamps": {
				"from": "01:38:15,920",
				"to": "01:38:19,920"
			},
			"offsets": {
				"from": 5895920,
				"to": 5899920
			},
			"text": " So slot 10 starts, I make my block, I give it to the world."
		},
		{
			"timestamps": {
				"from": "01:38:19,920",
				"to": "01:38:25,920"
			},
			"offsets": {
				"from": 5899920,
				"to": 5905920
			},
			"text": " And this is -- your proposal is publicly known."
		},
		{
			"timestamps": {
				"from": "01:38:25,920",
				"to": "01:38:31,920"
			},
			"offsets": {
				"from": 5905920,
				"to": 5911920
			},
			"text": " And so, as Justin talked about, secret leader elections, something that we're looking at too."
		},
		{
			"timestamps": {
				"from": "01:38:31,920",
				"to": "01:38:45,920"
			},
			"offsets": {
				"from": 5911920,
				"to": 5925920
			},
			"text": " Computing the Proposer Index is essentially taking all the validators, shuffling them, and using some of the recent randomness along with their effective balance to sample them."
		},
		{
			"timestamps": {
				"from": "01:38:45,920",
				"to": "01:38:51,920"
			},
			"offsets": {
				"from": 5925920,
				"to": 5931920
			},
			"text": " Great. So the chance of you being selected is also proportional to your balance."
		},
		{
			"timestamps": {
				"from": "01:38:51,920",
				"to": "01:39:00,920"
			},
			"offsets": {
				"from": 5931920,
				"to": 5940920
			},
			"text": " Most validators in normal operating conditions would have an effective balance, as we call, which is capped out at the max, which is capped out at 32."
		},
		{
			"timestamps": {
				"from": "01:39:00,920",
				"to": "01:39:08,920"
			},
			"offsets": {
				"from": 5940920,
				"to": 5948920
			},
			"text": " So most -- in many situations, there would be an equivalent chance of being selected for a proposal."
		},
		{
			"timestamps": {
				"from": "01:39:08,920",
				"to": "01:39:14,920"
			},
			"offsets": {
				"from": 5948920,
				"to": 5954920
			},
			"text": " So, Justin, already talked about these data structures, the Beacon Block body."
		},
		{
			"timestamps": {
				"from": "01:39:14,920",
				"to": "01:39:20,920"
			},
			"offsets": {
				"from": 5954920,
				"to": 5960920
			},
			"text": " What I do is I reveal my Randell, which is a signature upon the epoch."
		},
		{
			"timestamps": {
				"from": "01:39:20,920",
				"to": "01:39:23,920"
			},
			"offsets": {
				"from": 5960920,
				"to": 5963920
			},
			"text": " I go and find my 8th one data, which I'll show you about in a second."
		},
		{
			"timestamps": {
				"from": "01:39:23,920",
				"to": "01:39:30,920"
			},
			"offsets": {
				"from": 5963920,
				"to": 5970920
			},
			"text": " I signed some graffiti, maybe I'll vote on some proposal or I'll say things about who I am."
		},
		{
			"timestamps": {
				"from": "01:39:30,920",
				"to": "01:39:33,920"
			},
			"offsets": {
				"from": 5970920,
				"to": 5973920
			},
			"text": " And I fill in any of these operations."
		},
		{
			"timestamps": {
				"from": "01:39:33,920",
				"to": "01:39:41,920"
			},
			"offsets": {
				"from": 5973920,
				"to": 5981920
			},
			"text": " Most importantly, I'm gathering up attestations because that's how I make my block proposal worth it and profitable."
		},
		{
			"timestamps": {
				"from": "01:39:41,920",
				"to": "01:39:53,920"
			},
			"offsets": {
				"from": 5981920,
				"to": 5993920
			},
			"text": " By including high-value attestations, which are attestations that have not yet been included, attestations that are highly aggregated, so it has a lot of participants in them, and attestations that are more recent."
		},
		{
			"timestamps": {
				"from": "01:39:53,920",
				"to": "01:39:59,920"
			},
			"offsets": {
				"from": 5993920,
				"to": 5999920
			},
			"text": " By optimizing those things, I can optimize my reward."
		},
		{
			"timestamps": {
				"from": "01:39:59,920",
				"to": "01:40:06,920"
			},
			"offsets": {
				"from": 5999920,
				"to": 6006920
			},
			"text": " I think you get one-eighth of the reward that was given to attestations for attestations you received yourself."
		},
		{
			"timestamps": {
				"from": "01:40:06,920",
				"to": "01:40:15,920"
			},
			"offsets": {
				"from": 6006920,
				"to": 6015920
			},
			"text": " So, in general, by proposing, by being a good proposer, over time, you're increasing your reward by about one-eighth."
		},
		{
			"timestamps": {
				"from": "01:40:15,920",
				"to": "01:40:28,920"
			},
			"offsets": {
				"from": 6015920,
				"to": 6028920
			},
			"text": " Deposits, deposits, we come to consensus upon the eth one data, which is some past eath block, and the deposit contract deposit root."
		},
		{
			"timestamps": {
				"from": "01:40:28,920",
				"to": "01:40:37,920"
			},
			"offsets": {
				"from": 6028920,
				"to": 6037920
			},
			"text": " And this deposit root allows us to process deposits in order of making a proof against that root, a Merkle proof."
		},
		{
			"timestamps": {
				"from": "01:40:37,920",
				"to": "01:40:50,920"
			},
			"offsets": {
				"from": 6037920,
				"to": 6050920
			},
			"text": " And this number, max deposits, is -- I have to, by the rules of the protocol, include deposits, any unprocessed deposits up into that max deposit."
		},
		{
			"timestamps": {
				"from": "01:40:50,920",
				"to": "01:40:52,920"
			},
			"offsets": {
				"from": 6050920,
				"to": 6052920
			},
			"text": " So, I think that's the number 16."
		},
		{
			"timestamps": {
				"from": "01:40:52,920",
				"to": "01:40:57,920"
			},
			"offsets": {
				"from": 6052920,
				"to": 6057920
			},
			"text": " So, if there were 32 deposits that are unprocessed, I have to include 16."
		},
		{
			"timestamps": {
				"from": "01:40:57,920",
				"to": "01:40:59,920"
			},
			"offsets": {
				"from": 6057920,
				"to": 6059920
			},
			"text": " If there were two, I include the two, and then no more."
		},
		{
			"timestamps": {
				"from": "01:40:59,920",
				"to": "01:41:01,920"
			},
			"offsets": {
				"from": 6059920,
				"to": 6061920
			},
			"text": " There's zero, zero."
		},
		{
			"timestamps": {
				"from": "01:41:01,920",
				"to": "01:41:07,920"
			},
			"offsets": {
				"from": 6061920,
				"to": 6067920
			},
			"text": " I also, voluntary exits might be flying around on the network. I can pick those up, put them in."
		},
		{
			"timestamps": {
				"from": "01:41:07,920",
				"to": "01:41:13,920"
			},
			"offsets": {
				"from": 6067920,
				"to": 6073920
			},
			"text": " I'm kind of naturally incentivized to put those in because the fewer validators that exist, I'm --"
		},
		{
			"timestamps": {
				"from": "01:41:13,920",
				"to": "01:41:20,920"
			},
			"offsets": {
				"from": 6073920,
				"to": 6080920
			},
			"text": " the function's a little bit dynamic, but I get a little bit less overhead, and it's nice."
		},
		{
			"timestamps": {
				"from": "01:41:20,920",
				"to": "01:41:23,920"
			},
			"offsets": {
				"from": 6080920,
				"to": 6083920
			},
			"text": " Proposer slashings and attester slashings."
		},
		{
			"timestamps": {
				"from": "01:41:23,920",
				"to": "01:41:29,920"
			},
			"offsets": {
				"from": 6083920,
				"to": 6089920
			},
			"text": " I might also choose to be -- I might be policing the network, looking for nefarious activity."
		},
		{
			"timestamps": {
				"from": "01:41:29,920",
				"to": "01:41:38,920"
			},
			"offsets": {
				"from": 6089920,
				"to": 6098920
			},
			"text": " If I find these things, submit proof of them, I get a portion of the -- I get a smaller word, a small amount of what was slash."
		},
		{
			"timestamps": {
				"from": "01:41:38,920",
				"to": "01:41:43,920"
			},
			"offsets": {
				"from": 6098920,
				"to": 6103920
			},
			"text": " So, we can look into a little bit more into this ETH1 data."
		},
		{
			"timestamps": {
				"from": "01:41:43,920",
				"to": "01:41:48,920"
			},
			"offsets": {
				"from": 6103920,
				"to": 6108920
			},
			"text": " Essentially, what this function does is, like, what I call a pile on vote."
		},
		{
			"timestamps": {
				"from": "01:41:48,920",
				"to": "01:41:58,920"
			},
			"offsets": {
				"from": 6108920,
				"to": 6118920
			},
			"text": " Like, once I see -- we divide the voting period, the ETH1 voting period, into a number of epochs."
		},
		{
			"timestamps": {
				"from": "01:41:58,920",
				"to": "01:42:04,920"
			},
			"offsets": {
				"from": 6118920,
				"to": 6124920
			},
			"text": " If I see good votes for ETH1 data, I just pick that vote and I vote on it."
		},
		{
			"timestamps": {
				"from": "01:42:04,920",
				"to": "01:42:12,920"
			},
			"offsets": {
				"from": 6124920,
				"to": 6132920
			},
			"text": " Some of the mechanism in here is to prevent me piling on to votes that were a little bit stale."
		},
		{
			"timestamps": {
				"from": "01:42:12,920",
				"to": "01:42:18,920"
			},
			"offsets": {
				"from": 6132920,
				"to": 6138920
			},
			"text": " So, early on in the period, if it's less than the integer square root of the slots per ETH1 data period,"
		},
		{
			"timestamps": {
				"from": "01:42:18,920",
				"to": "01:42:25,920"
			},
			"offsets": {
				"from": 6138920,
				"to": 6145920
			},
			"text": " I will not pile on my vote if it looks like someone was putting in some stale information."
		},
		{
			"timestamps": {
				"from": "01:42:25,920",
				"to": "01:42:29,920"
			},
			"offsets": {
				"from": 6145920,
				"to": 6149920
			},
			"text": " But otherwise, I just vote on what the majority is and is valid."
		},
		{
			"timestamps": {
				"from": "01:42:29,920",
				"to": "01:42:37,920"
			},
			"offsets": {
				"from": 6149920,
				"to": 6157920
			},
			"text": " If there's no votes, the default, I go get my own ETH1 data."
		},
		{
			"timestamps": {
				"from": "01:42:37,920",
				"to": "01:42:47,920"
			},
			"offsets": {
				"from": 6157920,
				"to": 6167920
			},
			"text": " And what we do in this initial release is that we follow the ETH1 chain by, like, 1,000 blocks to be safe."
		},
		{
			"timestamps": {
				"from": "01:42:47,920",
				"to": "01:42:56,920"
			},
			"offsets": {
				"from": 6167920,
				"to": 6176920
			},
			"text": " This is not the ETH1 chain."
		},
		{
			"timestamps": {
				"from": "01:42:56,920",
				"to": "01:43:02,920"
			},
			"offsets": {
				"from": 6176920,
				"to": 6182920
			},
			"text": " So, this is an assumed safe distance to follow the chain."
		},
		{
			"timestamps": {
				"from": "01:43:02,920",
				"to": "01:43:06,920"
			},
			"offsets": {
				"from": 6182920,
				"to": 6186920
			},
			"text": " And so, you do have, like, an induced latency on handling deposits because of that."
		},
		{
			"timestamps": {
				"from": "01:43:06,920",
				"to": "01:43:14,920"
			},
			"offsets": {
				"from": 6186920,
				"to": 6194920
			},
			"text": " I'm not certain what the most deep reorg is ever been in ETH1, but it's not even on the order of, like, 100."
		},
		{
			"timestamps": {
				"from": "01:43:14,920",
				"to": "01:43:17,920"
			},
			"offsets": {
				"from": 6194920,
				"to": 6197920
			},
			"text": " So, assumed to be safe unless there was an attack."
		},
		{
			"timestamps": {
				"from": "01:43:17,920",
				"to": "01:43:24,920"
			},
			"offsets": {
				"from": 6197920,
				"to": 6204920
			},
			"text": " If there was an attack, maybe we should revert the ETH1 chain instead of the ETH1 chain because it was attacked."
		},
		{
			"timestamps": {
				"from": "01:43:24,920",
				"to": "01:43:27,920"
			},
			"offsets": {
				"from": 6204920,
				"to": 6207920
			},
			"text": " But that's, we'll see."
		},
		{
			"timestamps": {
				"from": "01:43:27,920",
				"to": "01:43:31,920"
			},
			"offsets": {
				"from": 6207920,
				"to": 6211920
			},
			"text": " Cool."
		},
		{
			"timestamps": {
				"from": "01:43:31,920",
				"to": "01:43:33,920"
			},
			"offsets": {
				"from": 6211920,
				"to": 6213920
			},
			"text": " Slashability of block proposals."
		},
		{
			"timestamps": {
				"from": "01:43:33,920",
				"to": "01:43:40,920"
			},
			"offsets": {
				"from": 6213920,
				"to": 6220920
			},
			"text": " It's really cheap to sign things, so we have to make it, but it's, as opposed to improve work,"
		},
		{
			"timestamps": {
				"from": "01:43:40,920",
				"to": "01:43:45,920"
			},
			"offsets": {
				"from": 6220920,
				"to": 6225920
			},
			"text": " it's very expensive to make blocks that look valid because you have to exert the computational power."
		},
		{
			"timestamps": {
				"from": "01:43:45,920",
				"to": "01:43:54,920"
			},
			"offsets": {
				"from": 6225920,
				"to": 6234920
			},
			"text": " So, if I've been chosen to make a block, I need to, the protocol needs to make that expensive so that I can't make a ton of them."
		},
		{
			"timestamps": {
				"from": "01:43:54,920",
				"to": "01:44:01,920"
			},
			"offsets": {
				"from": 6234920,
				"to": 6241920
			},
			"text": " So, essentially, we have a very simple slashing addition that is making sure that I'm not making two of the same block in the epoch."
		},
		{
			"timestamps": {
				"from": "01:44:01,920",
				"to": "01:44:09,920"
			},
			"offsets": {
				"from": 6241920,
				"to": 6249920
			},
			"text": " Actually, in a assumed release version, that's changed to me not making the same block in the same slot."
		},
		{
			"timestamps": {
				"from": "01:44:09,920",
				"to": "01:44:15,920"
			},
			"offsets": {
				"from": 6249920,
				"to": 6255920
			},
			"text": " But, essentially, it's like a no double vote, no double proposal mechanism."
		},
		{
			"timestamps": {
				"from": "01:44:15,920",
				"to": "01:44:17,920"
			},
			"offsets": {
				"from": 6255920,
				"to": 6257920
			},
			"text": " Committees."
		},
		{
			"timestamps": {
				"from": "01:44:17,920",
				"to": "01:44:21,920"
			},
			"offsets": {
				"from": 6257920,
				"to": 6261920
			},
			"text": " So, I don't know if we've explicitly talked too much about committees."
		},
		{
			"timestamps": {
				"from": "01:44:21,920",
				"to": "01:44:27,920"
			},
			"offsets": {
				"from": 6261920,
				"to": 6267920
			},
			"text": " We talked about how we shuffle the people into committees, but essentially within a given epoch,"
		},
		{
			"timestamps": {
				"from": "01:44:27,920",
				"to": "01:44:33,920"
			},
			"offsets": {
				"from": 6267920,
				"to": 6273920
			},
			"text": " every validator is assigned to exactly one slot to attest to it, to create an attestation."
		},
		{
			"timestamps": {
				"from": "01:44:33,920",
				"to": "01:44:42,920"
			},
			"offsets": {
				"from": 6273920,
				"to": 6282920
			},
			"text": " And, you know, the data structure that does all the things, it votes on the head for the for choice, votes on a cast-refugee vote, votes on a cross-link."
		},
		{
			"timestamps": {
				"from": "01:44:42,920",
				"to": "01:44:44,920"
			},
			"offsets": {
				"from": 6282920,
				"to": 6284920
			},
			"text": " It does all sorts of stuff."
		},
		{
			"timestamps": {
				"from": "01:44:44,920",
				"to": "01:44:54,920"
			},
			"offsets": {
				"from": 6284920,
				"to": 6294920
			},
			"text": " So, I can use this function to essentially query which slot I'm assigned to, what charade I'm assigned to, and I can do my duty."
		},
		{
			"timestamps": {
				"from": "01:44:54,920",
				"to": "01:45:04,920"
			},
			"offsets": {
				"from": 6294920,
				"to": 6304920
			},
			"text": " I get a look ahead of at least one epoch. So, during the current epoch, I know my assignment in the next epoch."
		},
		{
			"timestamps": {
				"from": "01:45:04,920",
				"to": "01:45:12,920"
			},
			"offsets": {
				"from": 6304920,
				"to": 6312920
			},
			"text": " This allows me to sync whatever charade I need to and kind of like get ready for my duty."
		},
		{
			"timestamps": {
				"from": "01:45:12,920",
				"to": "01:45:16,920"
			},
			"offsets": {
				"from": 6312920,
				"to": 6316920
			},
			"text": " This is actually tunable in men's seed look ahead."
		},
		{
			"timestamps": {
				"from": "01:45:16,920",
				"to": "01:45:23,920"
			},
			"offsets": {
				"from": 6316920,
				"to": 6323920
			},
			"text": " If we, for some reason, needed a longer look ahead because the overhead of sinking a charade or something was long, we could tune that constant."
		},
		{
			"timestamps": {
				"from": "01:45:23,920",
				"to": "01:45:32,920"
			},
			"offsets": {
				"from": 6323920,
				"to": 6332920
			},
			"text": " It's a trade-off between kind of the longer you have, you know, the committees, the easier it is to potentially toss or bribe or whatever."
		},
		{
			"timestamps": {
				"from": "01:45:32,920",
				"to": "01:45:37,920"
			},
			"offsets": {
				"from": 6332920,
				"to": 6337920
			},
			"text": " So, I make an attestation."
		},
		{
			"timestamps": {
				"from": "01:45:37,920",
				"to": "01:45:43,920"
			},
			"offsets": {
				"from": 6337920,
				"to": 6343920
			},
			"text": " Yeah, I had the cursor highlighted, so that's why it's green."
		},
		{
			"timestamps": {
				"from": "01:45:43,920",
				"to": "01:45:53,920"
			},
			"offsets": {
				"from": 6343920,
				"to": 6353920
			},
			"text": " So, I make this attestation. I do it at the slot, the slot I'm assigned to that time plus half of a slot duration."
		},
		{
			"timestamps": {
				"from": "01:45:53,920",
				"to": "01:46:02,920"
			},
			"offsets": {
				"from": 6353920,
				"to": 6362920
			},
			"text": " So, the idea is under optimal conditions, a proposal has created a block at the start of a slot, and by halfway through the slot, I've gotten that block."
		},
		{
			"timestamps": {
				"from": "01:46:02,920",
				"to": "01:46:05,920"
			},
			"offsets": {
				"from": 6362920,
				"to": 6365920
			},
			"text": " I see that as the state of the world, I vote on it."
		},
		{
			"timestamps": {
				"from": "01:46:05,920",
				"to": "01:46:12,920"
			},
			"offsets": {
				"from": 6365920,
				"to": 6372920
			},
			"text": " In certain not optimal conditions, I might vote on some prior block, but I can still kind of add weight as Vitalik showed in for choice,"
		},
		{
			"timestamps": {
				"from": "01:46:12,920",
				"to": "01:46:18,920"
			},
			"offsets": {
				"from": 6372920,
				"to": 6378920
			},
			"text": " and I can still manage to still keep the chain moving forward and finalize things."
		},
		{
			"timestamps": {
				"from": "01:46:18,920",
				"to": "01:46:26,920"
			},
			"offsets": {
				"from": 6378920,
				"to": 6386920
			},
			"text": " I run my fork choice, and I get, I see where the head of the chain is."
		},
		{
			"timestamps": {
				"from": "01:46:26,920",
				"to": "01:46:34,920"
			},
			"offsets": {
				"from": 6386920,
				"to": 6394920
			},
			"text": " The state relative to that head of the chain at the slot that I'm assigned to is also going to give me this information,"
		},
		{
			"timestamps": {
				"from": "01:46:34,920",
				"to": "01:46:38,920"
			},
			"offsets": {
				"from": 6394920,
				"to": 6398920
			},
			"text": " so I can actually just go into the state and say, \"Hey, what was the checkpoint?"
		},
		{
			"timestamps": {
				"from": "01:46:38,920",
				"to": "01:46:42,920"
			},
			"offsets": {
				"from": 6398920,
				"to": 6402920
			},
			"text": " What are we voting on right now?\" and just pull that information and construct this data."
		},
		{
			"timestamps": {
				"from": "01:46:42,920",
				"to": "01:46:52,920"
			},
			"offsets": {
				"from": 6402920,
				"to": 6412920
			},
			"text": " This is actually just stubbed in phase zero, but this is relative to me running the fork choice on the shart chain."
		},
		{
			"timestamps": {
				"from": "01:46:52,920",
				"to": "01:47:01,920"
			},
			"offsets": {
				"from": 6412920,
				"to": 6421920
			},
			"text": " That's not super important. That's actually what I'm going to put into the crosslink, which Justin pretty much covered."
		},
		{
			"timestamps": {
				"from": "01:47:01,920",
				"to": "01:47:07,920"
			},
			"offsets": {
				"from": 6421920,
				"to": 6427920
			},
			"text": " The fun part is that because it's phase zero and there's no shart chains, so just a zero hash."
		},
		{
			"timestamps": {
				"from": "01:47:07,920",
				"to": "01:47:10,920"
			},
			"offsets": {
				"from": 6427920,
				"to": 6430920
			},
			"text": " The custody bit."
		},
		{
			"timestamps": {
				"from": "01:47:10,920",
				"to": "01:47:19,920"
			},
			"offsets": {
				"from": 6430920,
				"to": 6439920
			},
			"text": " I just want to show you this data structure, because even though it's phase zero, we don't have any shart chains,"
		},
		{
			"timestamps": {
				"from": "01:47:19,920",
				"to": "01:47:23,920"
			},
			"offsets": {
				"from": 6439920,
				"to": 6443920
			},
			"text": " so we don't have this notion of custody games and having custody of shart data."
		},
		{
			"timestamps": {
				"from": "01:47:23,920",
				"to": "01:47:35,920"
			},
			"offsets": {
				"from": 6443920,
				"to": 6455920
			},
			"text": " There is this notion of a bit and a custody bit, which is tied to a personal secret that I have and the attestation,"
		},
		{
			"timestamps": {
				"from": "01:47:35,920",
				"to": "01:47:38,920"
			},
			"offsets": {
				"from": 6455920,
				"to": 6458920
			},
			"text": " the crosslink that I'm cross-linking."
		},
		{
			"timestamps": {
				"from": "01:47:38,920",
				"to": "01:47:42,920"
			},
			"offsets": {
				"from": 6458920,
				"to": 6462920
			},
			"text": " I'm not actually signing just the attestation data."
		},
		{
			"timestamps": {
				"from": "01:47:42,920",
				"to": "01:47:47,920"
			},
			"offsets": {
				"from": 6462920,
				"to": 6467920
			},
			"text": " I sign the attestation data with my bit, a zero or one."
		},
		{
			"timestamps": {
				"from": "01:47:47,920",
				"to": "01:47:57,920"
			},
			"offsets": {
				"from": 6467920,
				"to": 6477920
			},
			"text": " For any given committee in phase one, we'd have two versions of this aggregatable signature, the one with the zero bit"
		},
		{
			"timestamps": {
				"from": "01:47:57,920",
				"to": "01:48:04,920"
			},
			"offsets": {
				"from": 6477920,
				"to": 6484920
			},
			"text": " and the ones with the one bit. In phase zero, this is stubbed as a zero bit."
		},
		{
			"timestamps": {
				"from": "01:48:04,920",
				"to": "01:48:12,920"
			},
			"offsets": {
				"from": 6484920,
				"to": 6492920
			},
			"text": " In this outer data structure with the custody bits, we remember who participated with the aggregation bits,"
		},
		{
			"timestamps": {
				"from": "01:48:12,920",
				"to": "01:48:21,920"
			},
			"offsets": {
				"from": 6492920,
				"to": 6501920
			},
			"text": " and we remember which custody bit they participated with so that we can reconstruct the proper message to validate the signature in the future."
		},
		{
			"timestamps": {
				"from": "01:48:21,920",
				"to": "01:48:30,920"
			},
			"offsets": {
				"from": 6501920,
				"to": 6510920
			},
			"text": " In phase zero, when I'm constructing my attestation to broadcast, I flip my bit, my position in the shuffling of the committee,"
		},
		{
			"timestamps": {
				"from": "01:48:30,920",
				"to": "01:48:37,920"
			},
			"offsets": {
				"from": 6510920,
				"to": 6517920
			},
			"text": " I flip that bit, and for the custody bits, that's all zero, and I broadcast that to the network at the halfway point of the slide."
		},
		{
			"timestamps": {
				"from": "01:48:37,920",
				"to": "01:48:47,920"
			},
			"offsets": {
				"from": 6517920,
				"to": 6527920
			},
			"text": " Let's see. There are some micro, what we call micro incentives related to the creation of an attestation."
		},
		{
			"timestamps": {
				"from": "01:48:47,920",
				"to": "01:48:50,920"
			},
			"offsets": {
				"from": 6527920,
				"to": 6530920
			},
			"text": " It's pretty much the various components of what I'm doing."
		},
		{
			"timestamps": {
				"from": "01:48:50,920",
				"to": "01:48:55,920"
			},
			"offsets": {
				"from": 6530920,
				"to": 6535920
			},
			"text": " Is the head correct, correct being defined by what ends up being the canonical chain,"
		},
		{
			"timestamps": {
				"from": "01:48:55,920",
				"to": "01:49:03,920"
			},
			"offsets": {
				"from": 6535920,
				"to": 6543920
			},
			"text": " was the target of the F of G vote correct, was the source of the F of G vote correct, the crosslink."
		},
		{
			"timestamps": {
				"from": "01:49:03,920",
				"to": "01:49:09,920"
			},
			"offsets": {
				"from": 6543920,
				"to": 6549920
			},
			"text": " So pretty much any of these things that end up being canonical, if I got the vote right, I get a good reward."
		},
		{
			"timestamps": {
				"from": "01:49:09,920",
				"to": "01:49:13,920"
			},
			"offsets": {
				"from": 6549920,
				"to": 6553920
			},
			"text": " And I also get rewarded for fast inclusion."
		},
		{
			"timestamps": {
				"from": "01:49:13,920",
				"to": "01:49:21,920"
			},
			"offsets": {
				"from": 6553920,
				"to": 6561920
			},
			"text": " So the sooner the attestation gets included on chain, the more reward, and this portion of the world, reward, degrades very quickly."
		},
		{
			"timestamps": {
				"from": "01:49:21,920",
				"to": "01:49:29,920"
			},
			"offsets": {
				"from": 6561920,
				"to": 6569920
			},
			"text": " And this is so that I don't, I'm not incentivized to like, wait a little bit longer, see what everyone else is doing before I actually cast my vote."
		},
		{
			"timestamps": {
				"from": "01:49:29,920",
				"to": "01:49:34,920"
			},
			"offsets": {
				"from": 6569920,
				"to": 6574920
			},
			"text": " I want to move very quickly, get my vote in, and get maximum reward."
		},
		{
			"timestamps": {
				"from": "01:49:34,920",
				"to": "01:49:38,920"
			},
			"offsets": {
				"from": 6574920,
				"to": 6578920
			},
			"text": " This is handled in process rewards and penalties."
		},
		{
			"timestamps": {
				"from": "01:49:38,920",
				"to": "01:49:43,920"
			},
			"offsets": {
				"from": 6578920,
				"to": 6583920
			},
			"text": " This is maybe not so surprisingly after our interop session."
		},
		{
			"timestamps": {
				"from": "01:49:43,920",
				"to": "01:49:48,920"
			},
			"offsets": {
				"from": 6583920,
				"to": 6588920
			},
			"text": " This is where we found the most consensus bugs on our initial networks."
		},
		{
			"timestamps": {
				"from": "01:49:48,920",
				"to": "01:49:53,920"
			},
			"offsets": {
				"from": 6588920,
				"to": 6593920
			},
			"text": " Obviously the calculations that deal with everyone's balances was where we had bugs."
		},
		{
			"timestamps": {
				"from": "01:49:53,920",
				"to": "01:49:58,920"
			},
			"offsets": {
				"from": 6593920,
				"to": 6598920
			},
			"text": " But I've been reading it, writing some new tests and enhancing that, getting it ready."
		},
		{
			"timestamps": {
				"from": "01:49:58,920",
				"to": "01:50:06,920"
			},
			"offsets": {
				"from": 6598920,
				"to": 6606920
			},
			"text": " Slashability of attestations, these correspond to the two slashing conditions found in cast for F of G."
		},
		{
			"timestamps": {
				"from": "01:50:06,920",
				"to": "01:50:17,920"
			},
			"offsets": {
				"from": 6606920,
				"to": 6617920
			},
			"text": " Pretty much if it's not the same vote, it can't be the same epoch, essentially if you double signed an epoch, you're slashed."
		},
		{
			"timestamps": {
				"from": "01:50:17,920",
				"to": "01:50:20,920"
			},
			"offsets": {
				"from": 6617920,
				"to": 6620920
			},
			"text": " And you can't do this surround vote."
		},
		{
			"timestamps": {
				"from": "01:50:20,920",
				"to": "01:50:32,920"
			},
			"offsets": {
				"from": 6620920,
				"to": 6632920
			},
			"text": " If we have this attestation that has a source and target, we can't have a kind of a surrounding attestation that just like jumps over it."
		},
		{
			"timestamps": {
				"from": "01:50:32,920",
				"to": "01:50:35,920"
			},
			"offsets": {
				"from": 6632920,
				"to": 6635920
			},
			"text": " That's it."
		},
		{
			"timestamps": {
				"from": "01:50:35,920",
				"to": "01:50:37,920"
			},
			"offsets": {
				"from": 6635920,
				"to": 6637920
			},
			"text": " Cool."
		},
		{
			"timestamps": {
				"from": "01:50:37,920",
				"to": "01:50:38,920"
			},
			"offsets": {
				"from": 6637920,
				"to": 6638920
			},
			"text": " Yeah."
		},
		{
			"timestamps": {
				"from": "01:50:38,920",
				"to": "01:50:39,920"
			},
			"offsets": {
				"from": 6638920,
				"to": 6639920
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "01:50:39,920",
				"to": "01:50:40,920"
			},
			"offsets": {
				"from": 6639920,
				"to": 6640920
			},
			"text": " That was a long session."
		},
		{
			"timestamps": {
				"from": "01:50:40,920",
				"to": "01:50:41,920"
			},
			"offsets": {
				"from": 6640920,
				"to": 6641920
			},
			"text": " I appreciate you all being here."
		},
		{
			"timestamps": {
				"from": "01:50:41,920",
				"to": "01:50:43,920"
			},
			"offsets": {
				"from": 6641920,
				"to": 6643920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:43,920",
				"to": "01:50:45,920"
			},
			"offsets": {
				"from": 6643920,
				"to": 6645920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:45,920",
				"to": "01:50:47,920"
			},
			"offsets": {
				"from": 6645920,
				"to": 6647920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:47,920",
				"to": "01:50:49,920"
			},
			"offsets": {
				"from": 6647920,
				"to": 6649920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:49,920",
				"to": "01:50:51,920"
			},
			"offsets": {
				"from": 6649920,
				"to": 6651920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:51,920",
				"to": "01:50:53,920"
			},
			"offsets": {
				"from": 6651920,
				"to": 6653920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:53,920",
				"to": "01:50:55,920"
			},
			"offsets": {
				"from": 6653920,
				"to": 6655920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:55,920",
				"to": "01:50:57,920"
			},
			"offsets": {
				"from": 6655920,
				"to": 6657920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:57,920",
				"to": "01:50:59,920"
			},
			"offsets": {
				"from": 6657920,
				"to": 6659920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:50:59,920",
				"to": "01:51:01,920"
			},
			"offsets": {
				"from": 6659920,
				"to": 6661920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:01,920",
				"to": "01:51:03,920"
			},
			"offsets": {
				"from": 6661920,
				"to": 6663920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:03,920",
				"to": "01:51:05,920"
			},
			"offsets": {
				"from": 6663920,
				"to": 6665920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:05,920",
				"to": "01:51:07,920"
			},
			"offsets": {
				"from": 6665920,
				"to": 6667920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:07,920",
				"to": "01:51:09,920"
			},
			"offsets": {
				"from": 6667920,
				"to": 6669920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:09,920",
				"to": "01:51:11,920"
			},
			"offsets": {
				"from": 6669920,
				"to": 6671920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:11,920",
				"to": "01:51:13,920"
			},
			"offsets": {
				"from": 6671920,
				"to": 6673920
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "01:51:13,920",
				"to": "01:51:18,920"
			},
			"offsets": {
				"from": 6673920,
				"to": 6678920
			},
			"text": " [ Silence ]"
		}
	]
}
