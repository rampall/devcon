{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:02,980"
			},
			"offsets": {
				"from": 0,
				"to": 2980
			},
			"text": " [MUSIC PLAYING]"
		},
		{
			"timestamps": {
				"from": "00:00:02,980",
				"to": "00:00:14,360"
			},
			"offsets": {
				"from": 2980,
				"to": 14360
			},
			"text": " I'm Ben Mimi-Shivich."
		},
		{
			"timestamps": {
				"from": "00:00:14,360",
				"to": "00:00:16,280"
			},
			"offsets": {
				"from": 14360,
				"to": 16280
			},
			"text": " Software and smart contract engineer"
		},
		{
			"timestamps": {
				"from": "00:00:16,280",
				"to": "00:00:18,720"
			},
			"offsets": {
				"from": 16280,
				"to": 18720
			},
			"text": " being in the space since about 2018."
		},
		{
			"timestamps": {
				"from": "00:00:18,720",
				"to": "00:00:20,560"
			},
			"offsets": {
				"from": 18720,
				"to": 20560
			},
			"text": " Today, I'm basically going to do a tutorial"
		},
		{
			"timestamps": {
				"from": "00:00:20,560",
				"to": "00:00:23,440"
			},
			"offsets": {
				"from": 20560,
				"to": 23440
			},
			"text": " where we'll build through a simple blockchain indexer"
		},
		{
			"timestamps": {
				"from": "00:00:23,440",
				"to": "00:00:27,280"
			},
			"offsets": {
				"from": 23440,
				"to": 27280
			},
			"text": " and just sort of explain how indexes work, different pipelines"
		},
		{
			"timestamps": {
				"from": "00:00:27,280",
				"to": "00:00:30,240"
			},
			"offsets": {
				"from": 27280,
				"to": 30240
			},
			"text": " you can design and make, and in general, just interacting"
		},
		{
			"timestamps": {
				"from": "00:00:30,240",
				"to": "00:00:34,400"
			},
			"offsets": {
				"from": 30240,
				"to": 34400
			},
			"text": " with Geth on an sort of op-e-c level."
		},
		{
			"timestamps": {
				"from": "00:00:34,400",
				"to": "00:00:36,800"
			},
			"offsets": {
				"from": 34400,
				"to": 36800
			},
			"text": " OK, just some background quickly about me"
		},
		{
			"timestamps": {
				"from": "00:00:36,800",
				"to": "00:00:41,120"
			},
			"offsets": {
				"from": 36800,
				"to": 41120
			},
			"text": " and how I would love to run the presentation in general."
		},
		{
			"timestamps": {
				"from": "00:00:41,120",
				"to": "00:00:42,600"
			},
			"offsets": {
				"from": 41120,
				"to": 42600
			},
			"text": " Yeah, so as I mentioned before, I've"
		},
		{
			"timestamps": {
				"from": "00:00:42,600",
				"to": "00:00:44,760"
			},
			"offsets": {
				"from": 42600,
				"to": 44760
			},
			"text": " been in the space since 2018."
		},
		{
			"timestamps": {
				"from": "00:00:44,760",
				"to": "00:00:47,080"
			},
			"offsets": {
				"from": 44760,
				"to": 47080
			},
			"text": " I used to work at a consultant in Labros,"
		},
		{
			"timestamps": {
				"from": "00:00:47,080",
				"to": "00:00:50,280"
			},
			"offsets": {
				"from": 47080,
				"to": 50280
			},
			"text": " which is an Australian smart contract consultancy."
		},
		{
			"timestamps": {
				"from": "00:00:50,280",
				"to": "00:00:54,120"
			},
			"offsets": {
				"from": 50280,
				"to": 54120
			},
			"text": " And then I worked as an engineer at Tracer Dow in my Cilium,"
		},
		{
			"timestamps": {
				"from": "00:00:54,120",
				"to": "00:00:57,520"
			},
			"offsets": {
				"from": 54120,
				"to": 57520
			},
			"text": " which is a perpetual swaps protocol on Arbodram."
		},
		{
			"timestamps": {
				"from": "00:00:57,520",
				"to": "00:01:02,680"
			},
			"offsets": {
				"from": 57520,
				"to": 62680
			},
			"text": " Yeah, I was the team lead at Reputation Dow,"
		},
		{
			"timestamps": {
				"from": "00:01:02,680",
				"to": "00:01:04,920"
			},
			"offsets": {
				"from": 62680,
				"to": 64920
			},
			"text": " which was a project at my Cilium, where"
		},
		{
			"timestamps": {
				"from": "00:01:04,920",
				"to": "00:01:07,960"
			},
			"offsets": {
				"from": 64920,
				"to": 67960
			},
			"text": " we focused on indexing and monitoring Oracle systems"
		},
		{
			"timestamps": {
				"from": "00:01:07,960",
				"to": "00:01:10,800"
			},
			"offsets": {
				"from": 67960,
				"to": 70800
			},
			"text": " on chain to make sure Oracle's made--"
		},
		{
			"timestamps": {
				"from": "00:01:10,800",
				"to": "00:01:12,960"
			},
			"offsets": {
				"from": 70800,
				"to": 72960
			},
			"text": " well, essentially held accountable,"
		},
		{
			"timestamps": {
				"from": "00:01:12,960",
				"to": "00:01:16,240"
			},
			"offsets": {
				"from": 72960,
				"to": 76240
			},
			"text": " and also that they're functioning properly and accurately."
		},
		{
			"timestamps": {
				"from": "00:01:16,240",
				"to": "00:01:20,280"
			},
			"offsets": {
				"from": 76240,
				"to": 80280
			},
			"text": " So sort of just detecting errors sort of in that pipeline."
		},
		{
			"timestamps": {
				"from": "00:01:22,880",
				"to": "00:01:26,080"
			},
			"offsets": {
				"from": 82880,
				"to": 86080
			},
			"text": " So in terms of my experiencing in the indexing space,"
		},
		{
			"timestamps": {
				"from": "00:01:26,080",
				"to": "00:01:31,040"
			},
			"offsets": {
				"from": 86080,
				"to": 91040
			},
			"text": " I've been working in indexing for about two years."
		},
		{
			"timestamps": {
				"from": "00:01:31,040",
				"to": "00:01:34,840"
			},
			"offsets": {
				"from": 91040,
				"to": 94840
			},
			"text": " I'd like to know what I'm talking about, but I guess we'll see."
		},
		{
			"timestamps": {
				"from": "00:01:34,840",
				"to": "00:01:37,120"
			},
			"offsets": {
				"from": 94840,
				"to": 97120
			},
			"text": " In terms of questions, please just shoot up your hand"
		},
		{
			"timestamps": {
				"from": "00:01:37,120",
				"to": "00:01:40,400"
			},
			"offsets": {
				"from": 97120,
				"to": 100400
			},
			"text": " if you have anything as I go."
		},
		{
			"timestamps": {
				"from": "00:01:40,400",
				"to": "00:01:42,360"
			},
			"offsets": {
				"from": 100400,
				"to": 102360
			},
			"text": " OK, Etherscan."
		},
		{
			"timestamps": {
				"from": "00:01:42,360",
				"to": "00:01:46,640"
			},
			"offsets": {
				"from": 102360,
				"to": 106640
			},
			"text": " Etherscan is probably the most popular indexing tool all around."
		},
		{
			"timestamps": {
				"from": "00:01:46,640",
				"to": "00:01:49,560"
			},
			"offsets": {
				"from": 106640,
				"to": 109560
			},
			"text": " I've spent a lot of time on Etherscan."
		},
		{
			"timestamps": {
				"from": "00:01:49,560",
				"to": "00:01:51,440"
			},
			"offsets": {
				"from": 109560,
				"to": 111440
			},
			"text": " It's basically a hobby of mine."
		},
		{
			"timestamps": {
				"from": "00:01:51,440",
				"to": "00:01:55,200"
			},
			"offsets": {
				"from": 111440,
				"to": 115200
			},
			"text": " I'll click through random blocks and see if there's something fun."
		},
		{
			"timestamps": {
				"from": "00:01:55,200",
				"to": "00:01:58,200"
			},
			"offsets": {
				"from": 115200,
				"to": 118200
			},
			"text": " If you've ever accidentally sent ETH to a contract"
		},
		{
			"timestamps": {
				"from": "00:01:58,200",
				"to": "00:02:01,360"
			},
			"offsets": {
				"from": 118200,
				"to": 121360
			},
			"text": " instead of calling the function and you think nobody saw it,"
		},
		{
			"timestamps": {
				"from": "00:02:01,360",
				"to": "00:02:01,880"
			},
			"offsets": {
				"from": 121360,
				"to": 121880
			},
			"text": " I saw it."
		},
		{
			"timestamps": {
				"from": "00:02:01,880",
				"to": "00:02:08,560"
			},
			"offsets": {
				"from": 121880,
				"to": 128560
			},
			"text": " So this is one-- oh, there's a screen here."
		},
		{
			"timestamps": {
				"from": "00:02:08,560",
				"to": "00:02:12,160"
			},
			"offsets": {
				"from": 128560,
				"to": 132160
			},
			"text": " This is just one address that I found this morning in a block."
		},
		{
			"timestamps": {
				"from": "00:02:12,160",
				"to": "00:02:15,320"
			},
			"offsets": {
				"from": 132160,
				"to": 135320
			},
			"text": " And it's essentially an EOA that seems to be fanning out"
		},
		{
			"timestamps": {
				"from": "00:02:15,320",
				"to": "00:02:18,200"
			},
			"offsets": {
				"from": 135320,
				"to": 138200
			},
			"text": " ETH to a bunch of addresses extremely quickly."
		},
		{
			"timestamps": {
				"from": "00:02:18,200",
				"to": "00:02:20,920"
			},
			"offsets": {
				"from": 138200,
				"to": 140920
			},
			"text": " So it's sending out four or five transactions"
		},
		{
			"timestamps": {
				"from": "00:02:20,920",
				"to": "00:02:25,880"
			},
			"offsets": {
				"from": 140920,
				"to": 145880
			},
			"text": " trying to spread out, I think, about 0.8 ETH."
		},
		{
			"timestamps": {
				"from": "00:02:25,880",
				"to": "00:02:27,840"
			},
			"offsets": {
				"from": 145880,
				"to": 147840
			},
			"text": " But it's really worthwhile if you haven't done that"
		},
		{
			"timestamps": {
				"from": "00:02:27,840",
				"to": "00:02:30,560"
			},
			"offsets": {
				"from": 147840,
				"to": 150560
			},
			"text": " to explore what's on Etherscan and see"
		},
		{
			"timestamps": {
				"from": "00:02:30,560",
				"to": "00:02:34,680"
			},
			"offsets": {
				"from": 150560,
				"to": 154680
			},
			"text": " how interactions are happening on Jane."
		},
		{
			"timestamps": {
				"from": "00:02:34,680",
				"to": "00:02:37,200"
			},
			"offsets": {
				"from": 154680,
				"to": 157200
			},
			"text": " OK, so observability and transparency."
		},
		{
			"timestamps": {
				"from": "00:02:37,200",
				"to": "00:02:41,680"
			},
			"offsets": {
				"from": 157200,
				"to": 161680
			},
			"text": " I know at the moment, ZK and privacy and transactions"
		},
		{
			"timestamps": {
				"from": "00:02:41,680",
				"to": "00:02:43,120"
			},
			"offsets": {
				"from": 161680,
				"to": 163120
			},
			"text": " is highly important."
		},
		{
			"timestamps": {
				"from": "00:02:43,120",
				"to": "00:02:45,160"
			},
			"offsets": {
				"from": 163120,
				"to": 165160
			},
			"text": " And that's absolutely true."
		},
		{
			"timestamps": {
				"from": "00:02:45,160",
				"to": "00:02:50,400"
			},
			"offsets": {
				"from": 165160,
				"to": 170400
			},
			"text": " And if you want privacy and transactions, go for it."
		},
		{
			"timestamps": {
				"from": "00:02:50,400",
				"to": "00:02:54,720"
			},
			"offsets": {
				"from": 170400,
				"to": 174720
			},
			"text": " But on the other side, observability is also highly important."
		},
		{
			"timestamps": {
				"from": "00:02:54,720",
				"to": "00:02:58,160"
			},
			"offsets": {
				"from": 174720,
				"to": 178160
			},
			"text": " Just as a question, does anybody have any pros"
		},
		{
			"timestamps": {
				"from": "00:02:58,160",
				"to": "00:03:04,960"
			},
			"offsets": {
				"from": 178160,
				"to": 184960
			},
			"text": " that they think having transparent transactions have over ZK?"
		},
		{
			"timestamps": {
				"from": "00:03:04,960",
				"to": "00:03:07,000"
			},
			"offsets": {
				"from": 184960,
				"to": 187000
			},
			"text": " Oh, yeah."
		},
		{
			"timestamps": {
				"from": "00:03:07,000",
				"to": "00:03:08,680"
			},
			"offsets": {
				"from": 187000,
				"to": 188680
			},
			"text": " No corruption, exactly."
		},
		{
			"timestamps": {
				"from": "00:03:08,680",
				"to": "00:03:09,680"
			},
			"offsets": {
				"from": 188680,
				"to": 189680
			},
			"text": " Nice."
		},
		{
			"timestamps": {
				"from": "00:03:09,680",
				"to": "00:03:12,080"
			},
			"offsets": {
				"from": 189680,
				"to": 192080
			},
			"text": " And I'm not trying to just shield transparency."
		},
		{
			"timestamps": {
				"from": "00:03:12,080",
				"to": "00:03:12,640"
			},
			"offsets": {
				"from": 192080,
				"to": 192640
			},
			"text": " Don't worry."
		},
		{
			"timestamps": {
				"from": "00:03:12,640",
				"to": "00:03:15,720"
			},
			"offsets": {
				"from": 192640,
				"to": 195720
			},
			"text": " I don't work for the SEC or anything like that."
		},
		{
			"timestamps": {
				"from": "00:03:15,720",
				"to": "00:03:18,920"
			},
			"offsets": {
				"from": 195720,
				"to": 198920
			},
			"text": " I'm not after the taxes."
		},
		{
			"timestamps": {
				"from": "00:03:18,920",
				"to": "00:03:22,400"
			},
			"offsets": {
				"from": 198920,
				"to": 202400
			},
			"text": " But it's still highly important in certain systems."
		},
		{
			"timestamps": {
				"from": "00:03:22,400",
				"to": "00:03:26,040"
			},
			"offsets": {
				"from": 202400,
				"to": 206040
			},
			"text": " Oracle's, which I work for, don't really function on zero"
		},
		{
			"timestamps": {
				"from": "00:03:26,040",
				"to": "00:03:27,120"
			},
			"offsets": {
				"from": 206040,
				"to": 207120
			},
			"text": " knowledge."
		},
		{
			"timestamps": {
				"from": "00:03:27,120",
				"to": "00:03:29,800"
			},
			"offsets": {
				"from": 207120,
				"to": 209800
			},
			"text": " You have to know that your oracles are operating properly,"
		},
		{
			"timestamps": {
				"from": "00:03:29,800",
				"to": "00:03:33,040"
			},
			"offsets": {
				"from": 209800,
				"to": 213040
			},
			"text": " and you have to know what each Oracle is submitting."
		},
		{
			"timestamps": {
				"from": "00:03:33,040",
				"to": "00:03:35,920"
			},
			"offsets": {
				"from": 213040,
				"to": 215920
			},
			"text": " Having anonymity there reduces the accountability"
		},
		{
			"timestamps": {
				"from": "00:03:35,920",
				"to": "00:03:38,960"
			},
			"offsets": {
				"from": 215920,
				"to": 218960
			},
			"text": " of those oracles, and it can cause your systems to not"
		},
		{
			"timestamps": {
				"from": "00:03:38,960",
				"to": "00:03:40,680"
			},
			"offsets": {
				"from": 218960,
				"to": 220680
			},
			"text": " function the way you hope."
		},
		{
			"timestamps": {
				"from": "00:03:40,680",
				"to": "00:03:43,880"
			},
			"offsets": {
				"from": 220680,
				"to": 223880
			},
			"text": " If you want bad Oracle transaction"
		},
		{
			"timestamps": {
				"from": "00:03:43,880",
				"to": "00:03:46,480"
			},
			"offsets": {
				"from": 223880,
				"to": 226480
			},
			"text": " can completely crash a market, especially derivative"
		},
		{
			"timestamps": {
				"from": "00:03:46,480",
				"to": "00:03:47,480"
			},
			"offsets": {
				"from": 226480,
				"to": 227480
			},
			"text": " markets."
		},
		{
			"timestamps": {
				"from": "00:03:47,480",
				"to": "00:03:54,600"
			},
			"offsets": {
				"from": 227480,
				"to": 234600
			},
			"text": " This is actually one example here, also from this morning."
		},
		{
			"timestamps": {
				"from": "00:03:54,600",
				"to": "00:03:58,720"
			},
			"offsets": {
				"from": 234600,
				"to": 238720
			},
			"text": " So Mongo markets lost $100 million last night"
		},
		{
			"timestamps": {
				"from": "00:03:58,720",
				"to": "00:04:01,080"
			},
			"offsets": {
				"from": 238720,
				"to": 241080
			},
			"text": " because of Oracle manipulation."
		},
		{
			"timestamps": {
				"from": "00:04:01,080",
				"to": "00:04:03,880"
			},
			"offsets": {
				"from": 241080,
				"to": 243880
			},
			"text": " So making sure that you can observe what's happening"
		},
		{
			"timestamps": {
				"from": "00:04:03,880",
				"to": "00:04:06,480"
			},
			"offsets": {
				"from": 243880,
				"to": 246480
			},
			"text": " and also the exposure that those oracles have"
		},
		{
			"timestamps": {
				"from": "00:04:06,480",
				"to": "00:04:09,600"
			},
			"offsets": {
				"from": 246480,
				"to": 249600
			},
			"text": " onto the each market is very important and something"
		},
		{
			"timestamps": {
				"from": "00:04:09,600",
				"to": "00:04:12,960"
			},
			"offsets": {
				"from": 249600,
				"to": 252960
			},
			"text": " where transparency and building an indexer is highly useful."
		},
		{
			"timestamps": {
				"from": "00:04:15,800",
				"to": "00:04:18,320"
			},
			"offsets": {
				"from": 255800,
				"to": 258320
			},
			"text": " OK, what actually is an indexer?"
		},
		{
			"timestamps": {
				"from": "00:04:18,320",
				"to": "00:04:24,400"
			},
			"offsets": {
				"from": 258320,
				"to": 264400
			},
			"text": " The way I define an indexer and the way I like to think about it"
		},
		{
			"timestamps": {
				"from": "00:04:24,400",
				"to": "00:04:29,200"
			},
			"offsets": {
				"from": 264400,
				"to": 269200
			},
			"text": " is it's basically an ETL program where your back end is"
		},
		{
			"timestamps": {
				"from": "00:04:29,200",
				"to": "00:04:31,000"
			},
			"offsets": {
				"from": 269200,
				"to": 271000
			},
			"text": " communicating directly with the node."
		},
		{
			"timestamps": {
				"from": "00:04:31,000",
				"to": "00:04:33,760"
			},
			"offsets": {
				"from": 271000,
				"to": 273760
			},
			"text": " You're requesting data from the blockchain,"
		},
		{
			"timestamps": {
				"from": "00:04:33,760",
				"to": "00:04:36,960"
			},
			"offsets": {
				"from": 273760,
				"to": 276960
			},
			"text": " and you are converting that data or storing it"
		},
		{
			"timestamps": {
				"from": "00:04:36,960",
				"to": "00:04:40,400"
			},
			"offsets": {
				"from": 276960,
				"to": 280400
			},
			"text": " in a unique way that makes it more accessible or useful to you."
		},
		{
			"timestamps": {
				"from": "00:04:43,920",
				"to": "00:04:48,040"
			},
			"offsets": {
				"from": 283920,
				"to": 288040
			},
			"text": " Yeah, sorry, I'll just run into here."
		},
		{
			"timestamps": {
				"from": "00:04:48,040",
				"to": "00:04:52,080"
			},
			"offsets": {
				"from": 288040,
				"to": 292080
			},
			"text": " So why would I actually want to store it differently"
		},
		{
			"timestamps": {
				"from": "00:04:52,080",
				"to": "00:04:53,120"
			},
			"offsets": {
				"from": 292080,
				"to": 293120
			},
			"text": " than on chain?"
		},
		{
			"timestamps": {
				"from": "00:04:53,120",
				"to": "00:04:56,480"
			},
			"offsets": {
				"from": 293120,
				"to": 296480
			},
			"text": " Because the blockchain is a database in and of itself."
		},
		{
			"timestamps": {
				"from": "00:04:56,480",
				"to": "00:04:58,800"
			},
			"offsets": {
				"from": 296480,
				"to": 298800
			},
			"text": " All the data is always there."
		},
		{
			"timestamps": {
				"from": "00:04:58,800",
				"to": "00:05:00,160"
			},
			"offsets": {
				"from": 298800,
				"to": 300160
			},
			"text": " The problem becomes, though, if I want"
		},
		{
			"timestamps": {
				"from": "00:05:00,160",
				"to": "00:05:03,160"
			},
			"offsets": {
				"from": 300160,
				"to": 303160
			},
			"text": " to retrieve specific data or a range of data,"
		},
		{
			"timestamps": {
				"from": "00:05:03,160",
				"to": "00:05:06,760"
			},
			"offsets": {
				"from": 303160,
				"to": 306760
			},
			"text": " or, god forbid, create some sort of average across it."
		},
		{
			"timestamps": {
				"from": "00:05:06,760",
				"to": "00:05:08,640"
			},
			"offsets": {
				"from": 306760,
				"to": 308640
			},
			"text": " So if I wanted to do that, I might"
		},
		{
			"timestamps": {
				"from": "00:05:08,640",
				"to": "00:05:11,480"
			},
			"offsets": {
				"from": 308640,
				"to": 311480
			},
			"text": " have to make hundreds of e-calls to process one"
		},
		{
			"timestamps": {
				"from": "00:05:11,480",
				"to": "00:05:16,520"
			},
			"offsets": {
				"from": 311480,
				"to": 316520
			},
			"text": " transactional one event that I define on chain."
		},
		{
			"timestamps": {
				"from": "00:05:16,520",
				"to": "00:05:20,240"
			},
			"offsets": {
				"from": 316520,
				"to": 320240
			},
			"text": " So one really popular reason to make an indexer, which"
		},
		{
			"timestamps": {
				"from": "00:05:20,240",
				"to": "00:05:22,320"
			},
			"offsets": {
				"from": 320240,
				"to": 322320
			},
			"text": " a lot of now op-ec sort of services,"
		},
		{
			"timestamps": {
				"from": "00:05:22,320",
				"to": "00:05:24,480"
			},
			"offsets": {
				"from": 322320,
				"to": 324480
			},
			"text": " like alchemy and Coinbase support,"
		},
		{
			"timestamps": {
				"from": "00:05:24,480",
				"to": "00:05:27,640"
			},
			"offsets": {
				"from": 324480,
				"to": 327640
			},
			"text": " is to fetch the transaction history of an address."
		},
		{
			"timestamps": {
				"from": "00:05:27,640",
				"to": "00:05:30,600"
			},
			"offsets": {
				"from": 327640,
				"to": 330600
			},
			"text": " That is not possible directly when"
		},
		{
			"timestamps": {
				"from": "00:05:30,600",
				"to": "00:05:32,800"
			},
			"offsets": {
				"from": 330600,
				"to": 332800
			},
			"text": " you're directly interacting with the node."
		},
		{
			"timestamps": {
				"from": "00:05:32,800",
				"to": "00:05:35,400"
			},
			"offsets": {
				"from": 332800,
				"to": 335400
			},
			"text": " You would have to pass through every single block"
		},
		{
			"timestamps": {
				"from": "00:05:35,400",
				"to": "00:05:38,920"
			},
			"offsets": {
				"from": 335400,
				"to": 338920
			},
			"text": " that address has made a transaction on,"
		},
		{
			"timestamps": {
				"from": "00:05:38,920",
				"to": "00:05:41,880"
			},
			"offsets": {
				"from": 338920,
				"to": 341880
			},
			"text": " and then manually look at those transactions."
		},
		{
			"timestamps": {
				"from": "00:05:41,880",
				"to": "00:05:46,880"
			},
			"offsets": {
				"from": 341880,
				"to": 346880
			},
			"text": " Another really good reason is non-affemoral data on the chain."
		},
		{
			"timestamps": {
				"from": "00:05:46,880",
				"to": "00:05:50,560"
			},
			"offsets": {
				"from": 346880,
				"to": 350560
			},
			"text": " So mempool data and a thing that you run through as a test"
		},
		{
			"timestamps": {
				"from": "00:05:50,560",
				"to": "00:05:53,680"
			},
			"offsets": {
				"from": 350560,
				"to": 353680
			},
			"text": " as an ETH call doesn't stay on the blockchain forever."
		},
		{
			"timestamps": {
				"from": "00:05:53,680",
				"to": "00:05:56,840"
			},
			"offsets": {
				"from": 353680,
				"to": 356840
			},
			"text": " Mempool data in particular is highly useful for arbitrage"
		},
		{
			"timestamps": {
				"from": "00:05:56,840",
				"to": "00:06:00,160"
			},
			"offsets": {
				"from": 356840,
				"to": 360160
			},
			"text": " strategy, but there's actually no consistent history"
		},
		{
			"timestamps": {
				"from": "00:06:00,160",
				"to": "00:06:01,880"
			},
			"offsets": {
				"from": 360160,
				"to": 361880
			},
			"text": " of the mempool."
		},
		{
			"timestamps": {
				"from": "00:06:01,880",
				"to": "00:06:05,040"
			},
			"offsets": {
				"from": 361880,
				"to": 365040
			},
			"text": " Obviously, mempool also differs from node to node."
		},
		{
			"timestamps": {
				"from": "00:06:05,040",
				"to": "00:06:08,520"
			},
			"offsets": {
				"from": 365040,
				"to": 368520
			},
			"text": " But having a history from a range of nodes is highly useful"
		},
		{
			"timestamps": {
				"from": "00:06:08,520",
				"to": "00:06:10,800"
			},
			"offsets": {
				"from": 368520,
				"to": 370800
			},
			"text": " if you want to sort of background strategies"
		},
		{
			"timestamps": {
				"from": "00:06:10,800",
				"to": "00:06:17,080"
			},
			"offsets": {
				"from": 370800,
				"to": 377080
			},
			"text": " that you could have done if you're an arbitrage error."
		},
		{
			"timestamps": {
				"from": "00:06:17,080",
				"to": "00:06:18,880"
			},
			"offsets": {
				"from": 377080,
				"to": 378880
			},
			"text": " Yeah, also a gas estimation as well."
		},
		{
			"timestamps": {
				"from": "00:06:18,880",
				"to": "00:06:22,560"
			},
			"offsets": {
				"from": 378880,
				"to": 382560
			},
			"text": " If you're making ETH calls that don't actually go through chain,"
		},
		{
			"timestamps": {
				"from": "00:06:22,560",
				"to": "00:06:25,440"
			},
			"offsets": {
				"from": 382560,
				"to": 385440
			},
			"text": " you want to have a history of how your contracts will look"
		},
		{
			"timestamps": {
				"from": "00:06:25,440",
				"to": "00:06:28,320"
			},
			"offsets": {
				"from": 385440,
				"to": 388320
			},
			"text": " when they're finally deployed, creating a mini-indexer."
		},
		{
			"timestamps": {
				"from": "00:06:28,320",
				"to": "00:06:31,080"
			},
			"offsets": {
				"from": 388320,
				"to": 391080
			},
			"text": " The runs of your local host non-contract node"
		},
		{
			"timestamps": {
				"from": "00:06:31,080",
				"to": "00:06:35,000"
			},
			"offsets": {
				"from": 391080,
				"to": 395000
			},
			"text": " is absolutely a valid option."
		},
		{
			"timestamps": {
				"from": "00:06:35,000",
				"to": "00:06:39,480"
			},
			"offsets": {
				"from": 395000,
				"to": 399480
			},
			"text": " Now I just want to quickly break down a log that"
		},
		{
			"timestamps": {
				"from": "00:06:39,480",
				"to": "00:06:42,120"
			},
			"offsets": {
				"from": 399480,
				"to": 402120
			},
			"text": " happens on chain quite frequently."
		},
		{
			"timestamps": {
				"from": "00:06:42,120",
				"to": "00:06:45,000"
			},
			"offsets": {
				"from": 402120,
				"to": 405000
			},
			"text": " So this is what happens when a chain link oracle"
		},
		{
			"timestamps": {
				"from": "00:06:45,000",
				"to": "00:06:48,520"
			},
			"offsets": {
				"from": 405000,
				"to": 408520
			},
			"text": " submits-- well, lots of chain link oracles actually--"
		},
		{
			"timestamps": {
				"from": "00:06:48,520",
				"to": "00:06:52,280"
			},
			"offsets": {
				"from": 408520,
				"to": 412280
			},
			"text": " submit an answer for a price feed on chain."
		},
		{
			"timestamps": {
				"from": "00:06:52,280",
				"to": "00:06:54,560"
			},
			"offsets": {
				"from": 412280,
				"to": 414560
			},
			"text": " So this is the decoded version."
		},
		{
			"timestamps": {
				"from": "00:06:54,560",
				"to": "00:06:58,400"
			},
			"offsets": {
				"from": 414560,
				"to": 418400
			},
			"text": " I'll show you the encoded version a little bit later on."
		},
		{
			"timestamps": {
				"from": "00:06:58,400",
				"to": "00:07:02,680"
			},
			"offsets": {
				"from": 418400,
				"to": 422680
			},
			"text": " But even here, not everything is super obvious to the i, right?"
		},
		{
			"timestamps": {
				"from": "00:07:02,680",
				"to": "00:07:04,320"
			},
			"offsets": {
				"from": 422680,
				"to": 424320
			},
			"text": " So you have the answer at the top,"
		},
		{
			"timestamps": {
				"from": "00:07:04,320",
				"to": "00:07:08,360"
			},
			"offsets": {
				"from": 424320,
				"to": 428360
			},
			"text": " which is obviously the new value that price feed will have."
		},
		{
			"timestamps": {
				"from": "00:07:08,360",
				"to": "00:07:10,360"
			},
			"offsets": {
				"from": 428360,
				"to": 430360
			},
			"text": " For those curious, this is the price of one inch."
		},
		{
			"timestamps": {
				"from": "00:07:10,360",
				"to": "00:07:15,720"
			},
			"offsets": {
				"from": 430360,
				"to": 435720
			},
			"text": " But there's other points that are really confusing, right?"
		},
		{
			"timestamps": {
				"from": "00:07:15,720",
				"to": "00:07:18,840"
			},
			"offsets": {
				"from": 435720,
				"to": 438840
			},
			"text": " If you look, there's observations where you have what"
		},
		{
			"timestamps": {
				"from": "00:07:18,840",
				"to": "00:07:21,360"
			},
			"offsets": {
				"from": 438840,
				"to": 441360
			},
			"text": " seems to appear as an inter-ray rate."
		},
		{
			"timestamps": {
				"from": "00:07:21,360",
				"to": "00:07:24,600"
			},
			"offsets": {
				"from": 441360,
				"to": 444600
			},
			"text": " And you have observers, which is just this confusing byte"
		},
		{
			"timestamps": {
				"from": "00:07:24,600",
				"to": "00:07:26,440"
			},
			"offsets": {
				"from": 444600,
				"to": 446440
			},
			"text": " array with a weird name."
		},
		{
			"timestamps": {
				"from": "00:07:26,440",
				"to": "00:07:29,440"
			},
			"offsets": {
				"from": 446440,
				"to": 449440
			},
			"text": " You have raw report context."
		},
		{
			"timestamps": {
				"from": "00:07:29,440",
				"to": "00:07:31,320"
			},
			"offsets": {
				"from": 449440,
				"to": 451320
			},
			"text": " Let's sort of just look at what's going on."
		},
		{
			"timestamps": {
				"from": "00:07:31,320",
				"to": "00:07:34,560"
			},
			"offsets": {
				"from": 451320,
				"to": 454560
			},
			"text": " [SOUND OF RUMBLING]"
		},
		{
			"timestamps": {
				"from": "00:07:34,560",
				"to": "00:07:37,240"
			},
			"offsets": {
				"from": 454560,
				"to": 457240
			},
			"text": " OK, so step one to creating any indexer,"
		},
		{
			"timestamps": {
				"from": "00:07:37,240",
				"to": "00:07:42,680"
			},
			"offsets": {
				"from": 457240,
				"to": 462680
			},
			"text": " creating any indexer, sorry, or sort of observation solution"
		},
		{
			"timestamps": {
				"from": "00:07:42,680",
				"to": "00:07:45,080"
			},
			"offsets": {
				"from": 462680,
				"to": 465080
			},
			"text": " is first you have to understand the contracts"
		},
		{
			"timestamps": {
				"from": "00:07:45,080",
				"to": "00:07:46,800"
			},
			"offsets": {
				"from": 465080,
				"to": 466800
			},
			"text": " that you're working with."
		},
		{
			"timestamps": {
				"from": "00:07:46,800",
				"to": "00:07:49,840"
			},
			"offsets": {
				"from": 466800,
				"to": 469840
			},
			"text": " What your ETL really does and what it should aim to do"
		},
		{
			"timestamps": {
				"from": "00:07:49,840",
				"to": "00:07:52,920"
			},
			"offsets": {
				"from": 469840,
				"to": 472920
			},
			"text": " is to take this raw, like, hex data on chain"
		},
		{
			"timestamps": {
				"from": "00:07:52,920",
				"to": "00:07:56,080"
			},
			"offsets": {
				"from": 472920,
				"to": 476080
			},
			"text": " and give it new meaning or new accessibility."
		},
		{
			"timestamps": {
				"from": "00:07:56,080",
				"to": "00:07:58,000"
			},
			"offsets": {
				"from": 476080,
				"to": 478000
			},
			"text": " And to do that, you have to know what the contracts are"
		},
		{
			"timestamps": {
				"from": "00:07:58,000",
				"to": "00:07:59,200"
			},
			"offsets": {
				"from": 478000,
				"to": 479200
			},
			"text": " doing already."
		},
		{
			"timestamps": {
				"from": "00:07:59,200",
				"to": "00:08:01,600"
			},
			"offsets": {
				"from": 479200,
				"to": 481600
			},
			"text": " Just copying the data across isn't really enough."
		},
		{
			"timestamps": {
				"from": "00:08:01,600",
				"to": "00:08:07,560"
			},
			"offsets": {
				"from": 481600,
				"to": 487560
			},
			"text": " So sort of on that talk, on that point, sorry,"
		},
		{
			"timestamps": {
				"from": "00:08:07,560",
				"to": "00:08:10,440"
			},
			"offsets": {
				"from": 487560,
				"to": 490440
			},
			"text": " I'll just quickly explain how OCR works."
		},
		{
			"timestamps": {
				"from": "00:08:10,440",
				"to": "00:08:14,680"
			},
			"offsets": {
				"from": 490440,
				"to": 494680
			},
			"text": " That was the chain link log that we just looked at previously."
		},
		{
			"timestamps": {
				"from": "00:08:14,680",
				"to": "00:08:16,720"
			},
			"offsets": {
				"from": 494680,
				"to": 496720
			},
			"text": " So how chain link operates nowadays"
		},
		{
			"timestamps": {
				"from": "00:08:16,720",
				"to": "00:08:18,520"
			},
			"offsets": {
				"from": 496720,
				"to": 498520
			},
			"text": " is that also I don't work for chain link."
		},
		{
			"timestamps": {
				"from": "00:08:18,520",
				"to": "00:08:22,000"
			},
			"offsets": {
				"from": 498520,
				"to": 502000
			},
			"text": " I just want to say."
		},
		{
			"timestamps": {
				"from": "00:08:22,000",
				"to": "00:08:26,200"
			},
			"offsets": {
				"from": 502000,
				"to": 506200
			},
			"text": " How chain link operates now is that most of the aggregation"
		},
		{
			"timestamps": {
				"from": "00:08:26,200",
				"to": "00:08:28,600"
			},
			"offsets": {
				"from": 506200,
				"to": 508600
			},
			"text": " and collection of data happens off chain."
		},
		{
			"timestamps": {
				"from": "00:08:28,600",
				"to": "00:08:31,760"
			},
			"offsets": {
				"from": 508600,
				"to": 511760
			},
			"text": " So a price deviation will happen."
		},
		{
			"timestamps": {
				"from": "00:08:31,760",
				"to": "00:08:34,880"
			},
			"offsets": {
				"from": 511760,
				"to": 514880
			},
			"text": " All these nodes will look at their different APIs."
		},
		{
			"timestamps": {
				"from": "00:08:34,880",
				"to": "00:08:38,000"
			},
			"offsets": {
				"from": 514880,
				"to": 518000
			},
			"text": " And they'll send all of the answers to a single node."
		},
		{
			"timestamps": {
				"from": "00:08:38,000",
				"to": "00:08:41,440"
			},
			"offsets": {
				"from": 518000,
				"to": 521440
			},
			"text": " And then this node will submit all of these answers"
		},
		{
			"timestamps": {
				"from": "00:08:41,440",
				"to": "00:08:43,840"
			},
			"offsets": {
				"from": 521440,
				"to": 523840
			},
			"text": " and the final aggregated answer on chain"
		},
		{
			"timestamps": {
				"from": "00:08:43,840",
				"to": "00:08:48,600"
			},
			"offsets": {
				"from": 523840,
				"to": 528600
			},
			"text": " on the half of everybody else who's supporting that price feed."
		},
		{
			"timestamps": {
				"from": "00:08:48,600",
				"to": "00:08:55,280"
			},
			"offsets": {
				"from": 528600,
				"to": 535280
			},
			"text": " So sort of knowing that, I'll also just"
		},
		{
			"timestamps": {
				"from": "00:08:55,280",
				"to": "00:08:57,120"
			},
			"offsets": {
				"from": 535280,
				"to": 537120
			},
			"text": " go through a simple timeline."
		},
		{
			"timestamps": {
				"from": "00:08:57,120",
				"to": "00:09:00,320"
			},
			"offsets": {
				"from": 537120,
				"to": 540320
			},
			"text": " So as an example, say I have a chain link feed that's"
		},
		{
			"timestamps": {
				"from": "00:09:00,320",
				"to": "00:09:02,560"
			},
			"offsets": {
				"from": 540320,
				"to": 542560
			},
			"text": " monitoring the price of Ethereum."
		},
		{
			"timestamps": {
				"from": "00:09:02,560",
				"to": "00:09:05,840"
			},
			"offsets": {
				"from": 542560,
				"to": 545840
			},
			"text": " When the price of Ethereum dips by a certain percentage,"
		},
		{
			"timestamps": {
				"from": "00:09:05,840",
				"to": "00:09:07,560"
			},
			"offsets": {
				"from": 545840,
				"to": 547560
			},
			"text": " all the chain link nodes will know,"
		},
		{
			"timestamps": {
				"from": "00:09:07,560",
				"to": "00:09:10,560"
			},
			"offsets": {
				"from": 547560,
				"to": 550560
			},
			"text": " and they'll start a new round."
		},
		{
			"timestamps": {
				"from": "00:09:10,560",
				"to": "00:09:13,680"
			},
			"offsets": {
				"from": 550560,
				"to": 553680
			},
			"text": " Every single chain link node will then send an answer"
		},
		{
			"timestamps": {
				"from": "00:09:13,680",
				"to": "00:09:16,840"
			},
			"offsets": {
				"from": 553680,
				"to": 556840
			},
			"text": " that they've collected from their APIs to a leader."
		},
		{
			"timestamps": {
				"from": "00:09:16,840",
				"to": "00:09:18,600"
			},
			"offsets": {
				"from": 556840,
				"to": 558600
			},
			"text": " That leader will aggregate that answer,"
		},
		{
			"timestamps": {
				"from": "00:09:18,600",
				"to": "00:09:21,000"
			},
			"offsets": {
				"from": 558600,
				"to": 561000
			},
			"text": " normally taking a medium of some sort."
		},
		{
			"timestamps": {
				"from": "00:09:21,000",
				"to": "00:09:24,080"
			},
			"offsets": {
				"from": 561000,
				"to": 564080
			},
			"text": " He'll pass this along to the elected transmitter for that round."
		},
		{
			"timestamps": {
				"from": "00:09:24,080",
				"to": "00:09:27,440"
			},
			"offsets": {
				"from": 564080,
				"to": 567440
			},
			"text": " And then that transmitter will send off a message on chain,"
		},
		{
			"timestamps": {
				"from": "00:09:27,440",
				"to": "00:09:29,920"
			},
			"offsets": {
				"from": 567440,
				"to": 569920
			},
			"text": " containing all the information that everybody submitted"
		},
		{
			"timestamps": {
				"from": "00:09:29,920",
				"to": "00:09:33,080"
			},
			"offsets": {
				"from": 569920,
				"to": 573080
			},
			"text": " individually, as well as the final answer."
		},
		{
			"timestamps": {
				"from": "00:09:33,080",
				"to": "00:09:34,640"
			},
			"offsets": {
				"from": 573080,
				"to": 574640
			},
			"text": " And why I sort of went through this"
		},
		{
			"timestamps": {
				"from": "00:09:34,640",
				"to": "00:09:38,040"
			},
			"offsets": {
				"from": 574640,
				"to": 578040
			},
			"text": " is by knowing this information, knowing how the system works,"
		},
		{
			"timestamps": {
				"from": "00:09:38,040",
				"to": "00:09:40,520"
			},
			"offsets": {
				"from": 578040,
				"to": 580520
			},
			"text": " we can now make sense of the log that we looked at earlier."
		},
		{
			"timestamps": {
				"from": "00:09:40,520",
				"to": "00:09:48,640"
			},
			"offsets": {
				"from": 580520,
				"to": 588640
			},
			"text": " OK, so believe it or not, this observers array right here,"
		},
		{
			"timestamps": {
				"from": "00:09:48,640",
				"to": "00:09:52,200"
			},
			"offsets": {
				"from": 588640,
				"to": 592200
			},
			"text": " byte array, is actually a list of the addresses"
		},
		{
			"timestamps": {
				"from": "00:09:52,200",
				"to": "00:09:55,800"
			},
			"offsets": {
				"from": 592200,
				"to": 595800
			},
			"text": " that each of these observations come from."
		},
		{
			"timestamps": {
				"from": "00:09:55,800",
				"to": "00:10:01,280"
			},
			"offsets": {
				"from": 595800,
				"to": 601280
			},
			"text": " So all those numbers, there's a corresponding oracle address"
		},
		{
			"timestamps": {
				"from": "00:10:01,280",
				"to": "00:10:04,280"
			},
			"offsets": {
				"from": 601280,
				"to": 604280
			},
			"text": " of the oracle that submitted that answer."
		},
		{
			"timestamps": {
				"from": "00:10:04,280",
				"to": "00:10:07,560"
			},
			"offsets": {
				"from": 604280,
				"to": 607560
			},
			"text": " And that answer is the number that they thought is true."
		},
		{
			"timestamps": {
				"from": "00:10:07,560",
				"to": "00:10:12,080"
			},
			"offsets": {
				"from": 607560,
				"to": 612080
			},
			"text": " Another thing to note is that number is very large."
		},
		{
			"timestamps": {
				"from": "00:10:12,080",
				"to": "00:10:14,680"
			},
			"offsets": {
				"from": 612080,
				"to": 614680
			},
			"text": " Yeah, if that number was exactly how it is,"
		},
		{
			"timestamps": {
				"from": "00:10:14,680",
				"to": "00:10:18,560"
			},
			"offsets": {
				"from": 614680,
				"to": 618560
			},
			"text": " I would be retired as holding like 51 inch tokens."
		},
		{
			"timestamps": {
				"from": "00:10:18,560",
				"to": "00:10:20,880"
			},
			"offsets": {
				"from": 618560,
				"to": 620880
			},
			"text": " But here I am."
		},
		{
			"timestamps": {
				"from": "00:10:20,880",
				"to": "00:10:24,120"
			},
			"offsets": {
				"from": 620880,
				"to": 624120
			},
			"text": " So this is sort of another step we have to overcome."
		},
		{
			"timestamps": {
				"from": "00:10:24,120",
				"to": "00:10:26,000"
			},
			"offsets": {
				"from": 624120,
				"to": 626000
			},
			"text": " So we're sort of missing more information,"
		},
		{
			"timestamps": {
				"from": "00:10:26,000",
				"to": "00:10:28,600"
			},
			"offsets": {
				"from": 626000,
				"to": 628600
			},
			"text": " but we know it's available somewhere within the contract."
		},
		{
			"timestamps": {
				"from": "00:10:28,600",
				"to": "00:10:34,200"
			},
			"offsets": {
				"from": 628600,
				"to": 634200
			},
			"text": " So this information is available through a view function"
		},
		{
			"timestamps": {
				"from": "00:10:34,200",
				"to": "00:10:36,080"
			},
			"offsets": {
				"from": 634200,
				"to": 636080
			},
			"text": " in the chain link aggregator contract"
		},
		{
			"timestamps": {
				"from": "00:10:36,080",
				"to": "00:10:41,840"
			},
			"offsets": {
				"from": 636080,
				"to": 641840
			},
			"text": " called transmitters, which returns a list of the addresses"
		},
		{
			"timestamps": {
				"from": "00:10:41,840",
				"to": "00:10:46,240"
			},
			"offsets": {
				"from": 641840,
				"to": 646240
			},
			"text": " of each oracle that is supplying that contract with data."
		},
		{
			"timestamps": {
				"from": "00:10:46,240",
				"to": "00:10:48,480"
			},
			"offsets": {
				"from": 646240,
				"to": 648480
			},
			"text": " And there's another function called decimals, which"
		},
		{
			"timestamps": {
				"from": "00:10:48,480",
				"to": "00:10:52,720"
			},
			"offsets": {
				"from": 648480,
				"to": 652720
			},
			"text": " tells us by how much I should divide those numbers,"
		},
		{
			"timestamps": {
				"from": "00:10:52,720",
				"to": "00:10:57,720"
			},
			"offsets": {
				"from": 652720,
				"to": 657720
			},
			"text": " those observations to get the accurate human readable price"
		},
		{
			"timestamps": {
				"from": "00:10:57,720",
				"to": "00:11:00,200"
			},
			"offsets": {
				"from": 657720,
				"to": 660200
			},
			"text": " of one inch in this case."
		},
		{
			"timestamps": {
				"from": "00:11:00,200",
				"to": "00:11:03,520"
			},
			"offsets": {
				"from": 660200,
				"to": 663520
			},
			"text": " The problem though is that these variables can change"
		},
		{
			"timestamps": {
				"from": "00:11:03,520",
				"to": "00:11:04,760"
			},
			"offsets": {
				"from": 663520,
				"to": 664760
			},
			"text": " block by block."
		},
		{
			"timestamps": {
				"from": "00:11:04,760",
				"to": "00:11:06,160"
			},
			"offsets": {
				"from": 664760,
				"to": 666160
			},
			"text": " These are adjustable variables."
		},
		{
			"timestamps": {
				"from": "00:11:06,160",
				"to": "00:11:08,920"
			},
			"offsets": {
				"from": 666160,
				"to": 668920
			},
			"text": " Transmitters change all the time."
		},
		{
			"timestamps": {
				"from": "00:11:08,920",
				"to": "00:11:12,440"
			},
			"offsets": {
				"from": 668920,
				"to": 672440
			},
			"text": " Not only for security reasons, but sometimes certain oracles"
		},
		{
			"timestamps": {
				"from": "00:11:12,440",
				"to": "00:11:15,120"
			},
			"offsets": {
				"from": 672440,
				"to": 675120
			},
			"text": " are better at performing on certain feeds than others."
		},
		{
			"timestamps": {
				"from": "00:11:15,120",
				"to": "00:11:18,560"
			},
			"offsets": {
				"from": 675120,
				"to": 678560
			},
			"text": " And decimals can change when different markets require"
		},
		{
			"timestamps": {
				"from": "00:11:18,560",
				"to": "00:11:21,960"
			},
			"offsets": {
				"from": 678560,
				"to": 681960
			},
			"text": " more precision out of a price feed."
		},
		{
			"timestamps": {
				"from": "00:11:21,960",
				"to": "00:11:29,280"
			},
			"offsets": {
				"from": 681960,
				"to": 689280
			},
			"text": " OK, so this is sort of how we break it down."
		},
		{
			"timestamps": {
				"from": "00:11:29,280",
				"to": "00:11:31,960"
			},
			"offsets": {
				"from": 689280,
				"to": 691960
			},
			"text": " So I had my observations array there,"
		},
		{
			"timestamps": {
				"from": "00:11:31,960",
				"to": "00:11:33,920"
			},
			"offsets": {
				"from": 691960,
				"to": 693920
			},
			"text": " and the way to break it down--"
		},
		{
			"timestamps": {
				"from": "00:11:33,920",
				"to": "00:11:36,560"
			},
			"offsets": {
				"from": 693920,
				"to": 696560
			},
			"text": " and you can find this out by sort of reading the contract"
		},
		{
			"timestamps": {
				"from": "00:11:36,560",
				"to": "00:11:38,640"
			},
			"offsets": {
				"from": 696560,
				"to": 698640
			},
			"text": " and then doing a bit of guesswork--"
		},
		{
			"timestamps": {
				"from": "00:11:38,640",
				"to": "00:11:40,840"
			},
			"offsets": {
				"from": 698640,
				"to": 700840
			},
			"text": " is that if I look at that byte array"
		},
		{
			"timestamps": {
				"from": "00:11:40,840",
				"to": "00:11:44,760"
			},
			"offsets": {
				"from": 700840,
				"to": 704760
			},
			"text": " and I split it apart into pairs, each of those pairs"
		},
		{
			"timestamps": {
				"from": "00:11:44,760",
				"to": "00:11:47,560"
			},
			"offsets": {
				"from": 704760,
				"to": 707560
			},
			"text": " can be decoded from hex into a number."
		},
		{
			"timestamps": {
				"from": "00:11:47,560",
				"to": "00:11:53,680"
			},
			"offsets": {
				"from": 707560,
				"to": 713680
			},
			"text": " This number represents the index of which that observation"
		},
		{
			"timestamps": {
				"from": "00:11:53,680",
				"to": "00:11:57,720"
			},
			"offsets": {
				"from": 713680,
				"to": 717720
			},
			"text": " in order corresponds to which item in that transmitter's"
		},
		{
			"timestamps": {
				"from": "00:11:57,720",
				"to": "00:12:01,280"
			},
			"offsets": {
				"from": 717720,
				"to": 721280
			},
			"text": " array the observation was from."
		},
		{
			"timestamps": {
				"from": "00:12:01,280",
				"to": "00:12:04,160"
			},
			"offsets": {
				"from": 721280,
				"to": 724160
			},
			"text": " So in this case, the second observation here"
		},
		{
			"timestamps": {
				"from": "00:12:04,160",
				"to": "00:12:06,480"
			},
			"offsets": {
				"from": 724160,
				"to": 726480
			},
			"text": " was from the second oracle."
		},
		{
			"timestamps": {
				"from": "00:12:06,480",
				"to": "00:12:08,800"
			},
			"offsets": {
				"from": 726480,
				"to": 728800
			},
			"text": " So we're indexing from counting from zero."
		},
		{
			"timestamps": {
				"from": "00:12:08,800",
				"to": "00:12:14,440"
			},
			"offsets": {
				"from": 728800,
				"to": 734440
			},
			"text": " So 0x03, 12EA, dot dot dot, responded with 439,"
		},
		{
			"timestamps": {
				"from": "00:12:14,440",
				"to": "00:12:18,200"
			},
			"offsets": {
				"from": 734440,
				"to": 738200
			},
			"text": " and 399, blah, blah, blah, blah."
		},
		{
			"timestamps": {
				"from": "00:12:18,200",
				"to": "00:12:21,800"
			},
			"offsets": {
				"from": 738200,
				"to": 741800
			},
			"text": " So already, we're sort of getting kind of complex"
		},
		{
			"timestamps": {
				"from": "00:12:21,800",
				"to": "00:12:26,360"
			},
			"offsets": {
				"from": 741800,
				"to": 746360
			},
			"text": " in how we're just deciphering this one single log."
		},
		{
			"timestamps": {
				"from": "00:12:26,360",
				"to": "00:12:31,240"
			},
			"offsets": {
				"from": 746360,
				"to": 751240
			},
			"text": " So we'll go through the steps in code as well,"
		},
		{
			"timestamps": {
				"from": "00:12:31,240",
				"to": "00:12:33,320"
			},
			"offsets": {
				"from": 751240,
				"to": 753320
			},
			"text": " how we would do all the different calls."
		},
		{
			"timestamps": {
				"from": "00:12:33,320",
				"to": "00:12:35,080"
			},
			"offsets": {
				"from": 753320,
				"to": 755080
			},
			"text": " But essentially, at the minimum, what"
		},
		{
			"timestamps": {
				"from": "00:12:35,080",
				"to": "00:12:37,840"
			},
			"offsets": {
				"from": 755080,
				"to": 757840
			},
			"text": " we have to do to fetch the data is first"
		},
		{
			"timestamps": {
				"from": "00:12:37,840",
				"to": "00:12:40,640"
			},
			"offsets": {
				"from": 757840,
				"to": 760640
			},
			"text": " we have to encounter this train link log."
		},
		{
			"timestamps": {
				"from": "00:12:40,640",
				"to": "00:12:42,640"
			},
			"offsets": {
				"from": 760640,
				"to": 762640
			},
			"text": " Then we have to pass the dotted back"
		},
		{
			"timestamps": {
				"from": "00:12:42,640",
				"to": "00:12:46,520"
			},
			"offsets": {
				"from": 762640,
				"to": 766520
			},
			"text": " into regular data types, take out transmitters, byte array,"
		},
		{
			"timestamps": {
				"from": "00:12:46,520",
				"to": "00:12:48,920"
			},
			"offsets": {
				"from": 766520,
				"to": 768920
			},
			"text": " break it up into pairs, convert that into hex,"
		},
		{
			"timestamps": {
				"from": "00:12:48,920",
				"to": "00:12:51,440"
			},
			"offsets": {
				"from": 768920,
				"to": 771440
			},
			"text": " to get a number, call the transmitters function"
		},
		{
			"timestamps": {
				"from": "00:12:51,440",
				"to": "00:12:55,480"
			},
			"offsets": {
				"from": 771440,
				"to": 775480
			},
			"text": " with an eath call, and then pass out which addresses"
		},
		{
			"timestamps": {
				"from": "00:12:55,480",
				"to": "00:12:57,120"
			},
			"offsets": {
				"from": 775480,
				"to": 777120
			},
			"text": " with which address."
		},
		{
			"timestamps": {
				"from": "00:12:57,120",
				"to": "00:13:00,400"
			},
			"offsets": {
				"from": 777120,
				"to": 780400
			},
			"text": " Now, doing this for one log, not too bad,"
		},
		{
			"timestamps": {
				"from": "00:13:00,400",
				"to": "00:13:02,800"
			},
			"offsets": {
				"from": 780400,
				"to": 782800
			},
			"text": " I probably wouldn't want to do it by hand."
		},
		{
			"timestamps": {
				"from": "00:13:02,800",
				"to": "00:13:05,520"
			},
			"offsets": {
				"from": 782800,
				"to": 785520
			},
			"text": " But imagine if you wanted some sort of aggregate data."
		},
		{
			"timestamps": {
				"from": "00:13:05,520",
				"to": "00:13:09,760"
			},
			"offsets": {
				"from": 785520,
				"to": 789760
			},
			"text": " Imagine if I told you, OK, tell me how accurate this oracle"
		},
		{
			"timestamps": {
				"from": "00:13:09,760",
				"to": "00:13:14,200"
			},
			"offsets": {
				"from": 789760,
				"to": 794200
			},
			"text": " was on every single Wednesday for the past six months."
		},
		{
			"timestamps": {
				"from": "00:13:14,200",
				"to": "00:13:15,680"
			},
			"offsets": {
				"from": 794200,
				"to": 795680
			},
			"text": " Now you're passing hundreds of logs,"
		},
		{
			"timestamps": {
				"from": "00:13:15,680",
				"to": "00:13:17,800"
			},
			"offsets": {
				"from": 795680,
				"to": 797800
			},
			"text": " you're making thousands of calls."
		},
		{
			"timestamps": {
				"from": "00:13:17,800",
				"to": "00:13:20,360"
			},
			"offsets": {
				"from": 797800,
				"to": 800360
			},
			"text": " And if you want this to be done on demand,"
		},
		{
			"timestamps": {
				"from": "00:13:20,360",
				"to": "00:13:21,720"
			},
			"offsets": {
				"from": 800360,
				"to": 801720
			},
			"text": " it's going to be incredibly slow."
		},
		{
			"timestamps": {
				"from": "00:13:21,720",
				"to": "00:13:24,000"
			},
			"offsets": {
				"from": 801720,
				"to": 804000
			},
			"text": " It might take minutes."
		},
		{
			"timestamps": {
				"from": "00:13:24,000",
				"to": "00:13:27,680"
			},
			"offsets": {
				"from": 804000,
				"to": 807680
			},
			"text": " On the other hand, sorry, I can make an SQL statement,"
		},
		{
			"timestamps": {
				"from": "00:13:27,680",
				"to": "00:13:30,880"
			},
			"offsets": {
				"from": 807680,
				"to": 810880
			},
			"text": " like select average where oracle equals this, where time"
		},
		{
			"timestamps": {
				"from": "00:13:30,880",
				"to": "00:13:32,280"
			},
			"offsets": {
				"from": 810880,
				"to": 812280
			},
			"text": " equals this and this."
		},
		{
			"timestamps": {
				"from": "00:13:32,280",
				"to": "00:13:35,040"
			},
			"offsets": {
				"from": 812280,
				"to": 815040
			},
			"text": " I'm converting hundreds of lines of code,"
		},
		{
			"timestamps": {
				"from": "00:13:35,040",
				"to": "00:13:40,480"
			},
			"offsets": {
				"from": 815040,
				"to": 820480
			},
			"text": " thousands of HTTP requests to one line in SQL."
		},
		{
			"timestamps": {
				"from": "00:13:40,480",
				"to": "00:13:42,560"
			},
			"offsets": {
				"from": 820480,
				"to": 822560
			},
			"text": " That's sort of the value that indexing can bring."
		},
		{
			"timestamps": {
				"from": "00:13:42,560",
				"to": "00:13:46,840"
			},
			"offsets": {
				"from": 822560,
				"to": 826840
			},
			"text": " Before we actually get into the indexer,"
		},
		{
			"timestamps": {
				"from": "00:13:46,840",
				"to": "00:13:50,400"
			},
			"offsets": {
				"from": 826840,
				"to": 830400
			},
			"text": " I also just want to go through the data types that theorem has."
		},
		{
			"timestamps": {
				"from": "00:13:50,400",
				"to": "00:13:56,760"
			},
			"offsets": {
				"from": 830400,
				"to": 836760
			},
			"text": " So these are sort of avenues into getting different data."
		},
		{
			"timestamps": {
				"from": "00:13:56,760",
				"to": "00:13:59,200"
			},
			"offsets": {
				"from": 836760,
				"to": 839200
			},
			"text": " So there's actually more than this,"
		},
		{
			"timestamps": {
				"from": "00:13:59,200",
				"to": "00:14:00,880"
			},
			"offsets": {
				"from": 839200,
				"to": 840880
			},
			"text": " but this is just a quick summary."
		},
		{
			"timestamps": {
				"from": "00:14:00,880",
				"to": "00:14:06,800"
			},
			"offsets": {
				"from": 840880,
				"to": 846800
			},
			"text": " So does anybody know by heart what things"
		},
		{
			"timestamps": {
				"from": "00:14:06,800",
				"to": "00:14:08,400"
			},
			"offsets": {
				"from": 846800,
				"to": 848400
			},
			"text": " that you can search on Etherscan?"
		},
		{
			"timestamps": {
				"from": "00:14:08,400",
				"to": "00:14:16,880"
			},
			"offsets": {
				"from": 848400,
				"to": 856880
			},
			"text": " Oh, any blocks, contract addresses, any others?"
		},
		{
			"timestamps": {
				"from": "00:14:16,880",
				"to": "00:14:17,600"
			},
			"offsets": {
				"from": 856880,
				"to": 857600
			},
			"text": " OK."
		},
		{
			"timestamps": {
				"from": "00:14:17,600",
				"to": "00:14:19,000"
			},
			"offsets": {
				"from": 857600,
				"to": 859000
			},
			"text": " Yeah."
		},
		{
			"timestamps": {
				"from": "00:14:19,000",
				"to": "00:14:20,600"
			},
			"offsets": {
				"from": 859000,
				"to": 860600
			},
			"text": " Transaction hashes."
		},
		{
			"timestamps": {
				"from": "00:14:20,600",
				"to": "00:14:26,400"
			},
			"offsets": {
				"from": 860600,
				"to": 866400
			},
			"text": " So transaction hashes addresses block number, block hash."
		},
		{
			"timestamps": {
				"from": "00:14:26,400",
				"to": "00:14:27,400"
			},
			"offsets": {
				"from": 866400,
				"to": 867400
			},
			"text": " Sorry?"
		},
		{
			"timestamps": {
				"from": "00:14:27,400",
				"to": "00:14:27,880"
			},
			"offsets": {
				"from": 867400,
				"to": 867880
			},
			"text": " ENS names."
		},
		{
			"timestamps": {
				"from": "00:14:27,880",
				"to": "00:14:28,720"
			},
			"offsets": {
				"from": 867880,
				"to": 868720
			},
			"text": " ENS names."
		},
		{
			"timestamps": {
				"from": "00:14:28,720",
				"to": "00:14:29,400"
			},
			"offsets": {
				"from": 868720,
				"to": 869400
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:14:29,400",
				"to": "00:14:30,840"
			},
			"offsets": {
				"from": 869400,
				"to": 870840
			},
			"text": " Nice."
		},
		{
			"timestamps": {
				"from": "00:14:30,840",
				"to": "00:14:32,400"
			},
			"offsets": {
				"from": 870840,
				"to": 872400
			},
			"text": " [INAUDIBLE]"
		},
		{
			"timestamps": {
				"from": "00:14:32,400",
				"to": "00:14:33,520"
			},
			"offsets": {
				"from": 872400,
				"to": 873520
			},
			"text": " No, you cannot."
		},
		{
			"timestamps": {
				"from": "00:14:33,520",
				"to": "00:14:37,840"
			},
			"offsets": {
				"from": 873520,
				"to": 877840
			},
			"text": " Not within the top search bar, yes."
		},
		{
			"timestamps": {
				"from": "00:14:37,840",
				"to": "00:14:44,080"
			},
			"offsets": {
				"from": 877840,
				"to": 884080
			},
			"text": " So these things are the things that Ethereum will naturally index."
		},
		{
			"timestamps": {
				"from": "00:14:44,080",
				"to": "00:14:47,320"
			},
			"offsets": {
				"from": 884080,
				"to": 887320
			},
			"text": " So you can already select these from the node"
		},
		{
			"timestamps": {
				"from": "00:14:47,320",
				"to": "00:14:50,160"
			},
			"offsets": {
				"from": 887320,
				"to": 890160
			},
			"text": " relatively quickly, and they each have a relationship"
		},
		{
			"timestamps": {
				"from": "00:14:50,160",
				"to": "00:14:51,000"
			},
			"offsets": {
				"from": 890160,
				"to": 891000
			},
			"text": " with each other."
		},
		{
			"timestamps": {
				"from": "00:14:51,000",
				"to": "00:14:54,320"
			},
			"offsets": {
				"from": 891000,
				"to": 894320
			},
			"text": " If I have the log, I can retrieve the contract address"
		},
		{
			"timestamps": {
				"from": "00:14:54,320",
				"to": "00:14:56,680"
			},
			"offsets": {
				"from": 894320,
				"to": 896680
			},
			"text": " that that log was emitted from, and I can also"
		},
		{
			"timestamps": {
				"from": "00:14:56,680",
				"to": "00:14:59,480"
			},
			"offsets": {
				"from": 896680,
				"to": 899480
			},
			"text": " retrieve the transaction that that log came from."
		},
		{
			"timestamps": {
				"from": "00:14:59,480",
				"to": "00:15:02,200"
			},
			"offsets": {
				"from": 899480,
				"to": 902200
			},
			"text": " And then through that, I can also retrieve the block number"
		},
		{
			"timestamps": {
				"from": "00:15:02,200",
				"to": "00:15:06,400"
			},
			"offsets": {
				"from": 902200,
				"to": 906400
			},
			"text": " that that transaction happened on, and so on, and receipts"
		},
		{
			"timestamps": {
				"from": "00:15:06,400",
				"to": "00:15:06,920"
			},
			"offsets": {
				"from": 906400,
				"to": 906920
			},
			"text": " as well."
		},
		{
			"timestamps": {
				"from": "00:15:06,920",
				"to": "00:15:09,040"
			},
			"offsets": {
				"from": 906920,
				"to": 909040
			},
			"text": " So transaction receipts, so you can see how much gas"
		},
		{
			"timestamps": {
				"from": "00:15:09,040",
				"to": "00:15:10,520"
			},
			"offsets": {
				"from": 909040,
				"to": 910520
			},
			"text": " was paid for that receipt."
		},
		{
			"timestamps": {
				"from": "00:15:10,520",
				"to": "00:15:11,800"
			},
			"offsets": {
				"from": 910520,
				"to": 911800
			},
			"text": " But the point here is that you're"
		},
		{
			"timestamps": {
				"from": "00:15:11,800",
				"to": "00:15:14,240"
			},
			"offsets": {
				"from": 911800,
				"to": 914240
			},
			"text": " sort of migrating across these different data types"
		},
		{
			"timestamps": {
				"from": "00:15:14,240",
				"to": "00:15:17,200"
			},
			"offsets": {
				"from": 914240,
				"to": 917200
			},
			"text": " to collect all the information you need for your index."
		},
		{
			"timestamps": {
				"from": "00:15:17,200",
				"to": "00:15:23,880"
			},
			"offsets": {
				"from": 917200,
				"to": 923880
			},
			"text": " So dissecting a log, I'm just going"
		},
		{
			"timestamps": {
				"from": "00:15:23,880",
				"to": "00:15:25,280"
			},
			"offsets": {
				"from": 923880,
				"to": 925280
			},
			"text": " to go over the structure of logs."
		},
		{
			"timestamps": {
				"from": "00:15:25,280",
				"to": "00:15:28,160"
			},
			"offsets": {
				"from": 925280,
				"to": 928160
			},
			"text": " And for those curious, the reason why I'm concentrating on logs"
		},
		{
			"timestamps": {
				"from": "00:15:28,160",
				"to": "00:15:30,400"
			},
			"offsets": {
				"from": 928160,
				"to": 930400
			},
			"text": " is that there's quite a lot of functionality"
		},
		{
			"timestamps": {
				"from": "00:15:30,400",
				"to": "00:15:34,800"
			},
			"offsets": {
				"from": 930400,
				"to": 934800
			},
			"text": " within the Geth client, with blockchain clients in general,"
		},
		{
			"timestamps": {
				"from": "00:15:34,800",
				"to": "00:15:39,200"
			},
			"offsets": {
				"from": 934800,
				"to": 939200
			},
			"text": " for creating these indexers based on logs."
		},
		{
			"timestamps": {
				"from": "00:15:39,200",
				"to": "00:15:41,520"
			},
			"offsets": {
				"from": 939200,
				"to": 941520
			},
			"text": " Creating them based on transactions is also possible,"
		},
		{
			"timestamps": {
				"from": "00:15:41,520",
				"to": "00:15:42,680"
			},
			"offsets": {
				"from": 941520,
				"to": 942680
			},
			"text": " but a lot more manual."
		},
		{
			"timestamps": {
				"from": "00:15:42,680",
				"to": "00:15:46,960"
			},
			"offsets": {
				"from": 942680,
				"to": 946960
			},
			"text": " You have less sort of filtering power on that for a step."
		},
		{
			"timestamps": {
				"from": "00:15:46,960",
				"to": "00:15:48,400"
			},
			"offsets": {
				"from": 946960,
				"to": 948400
			},
			"text": " So how a log works?"
		},
		{
			"timestamps": {
				"from": "00:15:48,400",
				"to": "00:15:53,840"
			},
			"offsets": {
				"from": 948400,
				"to": 953840
			},
			"text": " So logs are constructed out of topics and data, essentially."
		},
		{
			"timestamps": {
				"from": "00:15:53,840",
				"to": "00:15:56,320"
			},
			"offsets": {
				"from": 953840,
				"to": 956320
			},
			"text": " So topics are also data."
		},
		{
			"timestamps": {
				"from": "00:15:56,320",
				"to": "00:15:58,640"
			},
			"offsets": {
				"from": 956320,
				"to": 958640
			},
			"text": " Topics one to three are data types"
		},
		{
			"timestamps": {
				"from": "00:15:58,640",
				"to": "00:16:02,000"
			},
			"offsets": {
				"from": 958640,
				"to": 962000
			},
			"text": " that you can emit in your event and mark them as indexed."
		},
		{
			"timestamps": {
				"from": "00:16:02,000",
				"to": "00:16:06,440"
			},
			"offsets": {
				"from": 962000,
				"to": 966440
			},
			"text": " And why this exists is that instead of building an indexer,"
		},
		{
			"timestamps": {
				"from": "00:16:06,440",
				"to": "00:16:09,440"
			},
			"offsets": {
				"from": 966440,
				"to": 969440
			},
			"text": " I could potentially just use the blockchain client as well"
		},
		{
			"timestamps": {
				"from": "00:16:09,440",
				"to": "00:16:13,840"
			},
			"offsets": {
				"from": 969440,
				"to": 973840
			},
			"text": " to look for cases where the data is equal to a particular amount."
		},
		{
			"timestamps": {
				"from": "00:16:13,840",
				"to": "00:16:18,000"
			},
			"offsets": {
				"from": 973840,
				"to": 978000
			},
			"text": " So I could tell Geth, tell me when topic zero is equal to x"
		},
		{
			"timestamps": {
				"from": "00:16:18,000",
				"to": "00:16:20,680"
			},
			"offsets": {
				"from": 978000,
				"to": 980680
			},
			"text": " and topic one is equal to this and retrieve all those cases"
		},
		{
			"timestamps": {
				"from": "00:16:20,680",
				"to": "00:16:23,800"
			},
			"offsets": {
				"from": 980680,
				"to": 983800
			},
			"text": " forming within some block range."
		},
		{
			"timestamps": {
				"from": "00:16:23,800",
				"to": "00:16:27,280"
			},
			"offsets": {
				"from": 983800,
				"to": 987280
			},
			"text": " Um, topic zero, I'll go over in a moment."
		},
		{
			"timestamps": {
				"from": "00:16:27,280",
				"to": "00:16:30,360"
			},
			"offsets": {
				"from": 987280,
				"to": 990360
			},
			"text": " The data-- sorry, something to also note on topics"
		},
		{
			"timestamps": {
				"from": "00:16:30,360",
				"to": "00:16:33,320"
			},
			"offsets": {
				"from": 990360,
				"to": 993320
			},
			"text": " is that you can only index up to three fields."
		},
		{
			"timestamps": {
				"from": "00:16:33,320",
				"to": "00:16:38,280"
			},
			"offsets": {
				"from": 993320,
				"to": 998280
			},
			"text": " Data, though, you can throw as much stuff as you want in there."
		},
		{
			"timestamps": {
				"from": "00:16:38,280",
				"to": "00:16:40,160"
			},
			"offsets": {
				"from": 998280,
				"to": 1000160
			},
			"text": " And this is like highly valuable."
		},
		{
			"timestamps": {
				"from": "00:16:40,160",
				"to": "00:16:43,120"
			},
			"offsets": {
				"from": 1000160,
				"to": 1003120
			},
			"text": " And a good way to think of logs in data in general"
		},
		{
			"timestamps": {
				"from": "00:16:43,120",
				"to": "00:16:46,480"
			},
			"offsets": {
				"from": 1003120,
				"to": 1006480
			},
			"text": " is sort of like a print statement for your smart contracts."
		},
		{
			"timestamps": {
				"from": "00:16:46,480",
				"to": "00:16:49,600"
			},
			"offsets": {
				"from": 1006480,
				"to": 1009600
			},
			"text": " So if you have ever like debugging and, you know,"
		},
		{
			"timestamps": {
				"from": "00:16:49,600",
				"to": "00:16:52,320"
			},
			"offsets": {
				"from": 1009600,
				"to": 1012320
			},
			"text": " we're all programmers here and we hate using the actual debug"
		},
		{
			"timestamps": {
				"from": "00:16:52,320",
				"to": "00:16:54,960"
			},
			"offsets": {
				"from": 1012320,
				"to": 1014960
			},
			"text": " tools, so we just print hello."
		},
		{
			"timestamps": {
				"from": "00:16:54,960",
				"to": "00:16:56,560"
			},
			"offsets": {
				"from": 1014960,
				"to": 1016560
			},
			"text": " This is exactly what a log is."
		},
		{
			"timestamps": {
				"from": "00:16:56,560",
				"to": "00:17:01,440"
			},
			"offsets": {
				"from": 1016560,
				"to": 1021440
			},
			"text": " Yeah, so we also have the transaction index,"
		},
		{
			"timestamps": {
				"from": "00:17:01,440",
				"to": "00:17:04,400"
			},
			"offsets": {
				"from": 1021440,
				"to": 1024400
			},
			"text": " which is at what point our transaction appeared"
		},
		{
			"timestamps": {
				"from": "00:17:04,400",
				"to": "00:17:08,400"
			},
			"offsets": {
				"from": 1024400,
				"to": 1028400
			},
			"text": " within that block and also log index, which is separate,"
		},
		{
			"timestamps": {
				"from": "00:17:08,400",
				"to": "00:17:11,440"
			},
			"offsets": {
				"from": 1028400,
				"to": 1031440
			},
			"text": " which is where this log appeared within that block, which"
		},
		{
			"timestamps": {
				"from": "00:17:11,440",
				"to": "00:17:13,880"
			},
			"offsets": {
				"from": 1031440,
				"to": 1033880
			},
			"text": " is normally completely different."
		},
		{
			"timestamps": {
				"from": "00:17:13,880",
				"to": "00:17:16,680"
			},
			"offsets": {
				"from": 1033880,
				"to": 1036680
			},
			"text": " There's also removed, which is like a bull that just signifies"
		},
		{
			"timestamps": {
				"from": "00:17:16,680",
				"to": "00:17:20,480"
			},
			"offsets": {
				"from": 1036680,
				"to": 1040480
			},
			"text": " if our log was removed from the canonical chain"
		},
		{
			"timestamps": {
				"from": "00:17:20,480",
				"to": "00:17:23,880"
			},
			"offsets": {
				"from": 1040480,
				"to": 1043880
			},
			"text": " due to a reorganization."
		},
		{
			"timestamps": {
				"from": "00:17:23,880",
				"to": "00:17:24,800"
			},
			"offsets": {
				"from": 1043880,
				"to": 1044800
			},
			"text": " Topic zero."
		},
		{
			"timestamps": {
				"from": "00:17:24,800",
				"to": "00:17:27,320"
			},
			"offsets": {
				"from": 1044800,
				"to": 1047320
			},
			"text": " Topic zero is highly useful."
		},
		{
			"timestamps": {
				"from": "00:17:27,320",
				"to": "00:17:30,560"
			},
			"offsets": {
				"from": 1047320,
				"to": 1050560
			},
			"text": " Topic zero defines the log, I would say."
		},
		{
			"timestamps": {
				"from": "00:17:30,560",
				"to": "00:17:34,440"
			},
			"offsets": {
				"from": 1050560,
				"to": 1054440
			},
			"text": " So what topic zero is, is I take my event definition,"
		},
		{
			"timestamps": {
				"from": "00:17:34,440",
				"to": "00:17:37,200"
			},
			"offsets": {
				"from": 1054440,
				"to": 1057200
			},
			"text": " so say I have an event called transfer,"
		},
		{
			"timestamps": {
				"from": "00:17:37,200",
				"to": "00:17:40,800"
			},
			"offsets": {
				"from": 1057200,
				"to": 1060800
			},
			"text": " and it takes a u-ant as an argument."
		},
		{
			"timestamps": {
				"from": "00:17:40,800",
				"to": "00:17:44,160"
			},
			"offsets": {
				"from": 1060800,
				"to": 1064160
			},
			"text": " I want to look at every single instance on the blockchain"
		},
		{
			"timestamps": {
				"from": "00:17:44,160",
				"to": "00:17:46,080"
			},
			"offsets": {
				"from": 1064160,
				"to": 1066080
			},
			"text": " where this transfer event happened."
		},
		{
			"timestamps": {
				"from": "00:17:46,080",
				"to": "00:17:48,280"
			},
			"offsets": {
				"from": 1066080,
				"to": 1068280
			},
			"text": " And to do that, I have to calculate topic zero."
		},
		{
			"timestamps": {
				"from": "00:17:48,280",
				"to": "00:17:51,680"
			},
			"offsets": {
				"from": 1068280,
				"to": 1071680
			},
			"text": " And to do that, I take the kick-ack of my event name,"
		},
		{
			"timestamps": {
				"from": "00:17:51,680",
				"to": "00:17:54,960"
			},
			"offsets": {
				"from": 1071680,
				"to": 1074960
			},
			"text": " so transfer, and then each data type that"
		},
		{
			"timestamps": {
				"from": "00:17:54,960",
				"to": "00:17:58,280"
			},
			"offsets": {
				"from": 1074960,
				"to": 1078280
			},
			"text": " is within that event definition."
		},
		{
			"timestamps": {
				"from": "00:17:58,280",
				"to": "00:18:01,840"
			},
			"offsets": {
				"from": 1078280,
				"to": 1081840
			},
			"text": " So here it would be, you know, u-ant 256 or whatever."
		},
		{
			"timestamps": {
				"from": "00:18:01,840",
				"to": "00:18:08,520"
			},
			"offsets": {
				"from": 1081840,
				"to": 1088520
			},
			"text": " Some important things to note, you do not include--"
		},
		{
			"timestamps": {
				"from": "00:18:08,520",
				"to": "00:18:10,800"
			},
			"offsets": {
				"from": 1088520,
				"to": 1090800
			},
			"text": " and I learned this painfully by experience--"
		},
		{
			"timestamps": {
				"from": "00:18:10,800",
				"to": "00:18:12,840"
			},
			"offsets": {
				"from": 1090800,
				"to": 1092840
			},
			"text": " do not put spaces between the types"
		},
		{
			"timestamps": {
				"from": "00:18:12,840",
				"to": "00:18:15,680"
			},
			"offsets": {
				"from": 1092840,
				"to": 1095680
			},
			"text": " because your hash will be wrong, and also"
		},
		{
			"timestamps": {
				"from": "00:18:15,680",
				"to": "00:18:19,240"
			},
			"offsets": {
				"from": 1095680,
				"to": 1099240
			},
			"text": " don't put the name of the variables within the type"
		},
		{
			"timestamps": {
				"from": "00:18:19,240",
				"to": "00:18:22,560"
			},
			"offsets": {
				"from": 1099240,
				"to": 1102560
			},
			"text": " because the EVM doesn't care about that."
		},
		{
			"timestamps": {
				"from": "00:18:22,560",
				"to": "00:18:25,840"
			},
			"offsets": {
				"from": 1102560,
				"to": 1105840
			},
			"text": " So something to note as well is that this topic zero"
		},
		{
			"timestamps": {
				"from": "00:18:25,840",
				"to": "00:18:28,080"
			},
			"offsets": {
				"from": 1105840,
				"to": 1108080
			},
			"text": " is unique for every single contract."
		},
		{
			"timestamps": {
				"from": "00:18:28,080",
				"to": "00:18:31,160"
			},
			"offsets": {
				"from": 1108080,
				"to": 1111160
			},
			"text": " That is to say that you can only have one event with one"
		},
		{
			"timestamps": {
				"from": "00:18:31,160",
				"to": "00:18:33,960"
			},
			"offsets": {
				"from": 1111160,
				"to": 1113960
			},
			"text": " exact hash definition per contract,"
		},
		{
			"timestamps": {
				"from": "00:18:33,960",
				"to": "00:18:36,840"
			},
			"offsets": {
				"from": 1113960,
				"to": 1116840
			},
			"text": " but this is not stipulated across the whole chain."
		},
		{
			"timestamps": {
				"from": "00:18:36,840",
				"to": "00:18:40,440"
			},
			"offsets": {
				"from": 1116840,
				"to": 1120440
			},
			"text": " So I could potentially say, look for every single log"
		},
		{
			"timestamps": {
				"from": "00:18:40,440",
				"to": "00:18:42,680"
			},
			"offsets": {
				"from": 1120440,
				"to": 1122680
			},
			"text": " with topic zero, but I might actually"
		},
		{
			"timestamps": {
				"from": "00:18:42,680",
				"to": "00:18:44,600"
			},
			"offsets": {
				"from": 1122680,
				"to": 1124600
			},
			"text": " collect data for four or five contracts that"
		},
		{
			"timestamps": {
				"from": "00:18:44,600",
				"to": "00:18:46,800"
			},
			"offsets": {
				"from": 1124600,
				"to": 1126800
			},
			"text": " are doing a completely separate thing."
		},
		{
			"timestamps": {
				"from": "00:18:46,800",
				"to": "00:18:48,200"
			},
			"offsets": {
				"from": 1126800,
				"to": 1128200
			},
			"text": " That's just something to be wary of."
		},
		{
			"timestamps": {
				"from": "00:18:48,200",
				"to": "00:18:52,640"
			},
			"offsets": {
				"from": 1128200,
				"to": 1132640
			},
			"text": " Storage."
		},
		{
			"timestamps": {
				"from": "00:18:52,640",
				"to": "00:18:56,200"
			},
			"offsets": {
				"from": 1132640,
				"to": 1136200
			},
			"text": " Another really cool thing that you can do"
		},
		{
			"timestamps": {
				"from": "00:18:56,200",
				"to": "00:18:58,640"
			},
			"offsets": {
				"from": 1136200,
				"to": 1138640
			},
			"text": " when you're building an indexer is accessing"
		},
		{
			"timestamps": {
				"from": "00:18:58,640",
				"to": "00:19:00,600"
			},
			"offsets": {
				"from": 1138640,
				"to": 1140600
			},
			"text": " the actual contract storage."
		},
		{
			"timestamps": {
				"from": "00:19:00,600",
				"to": "00:19:05,520"
			},
			"offsets": {
				"from": 1140600,
				"to": 1145520
			},
			"text": " So private variables now become completely accessible to you."
		},
		{
			"timestamps": {
				"from": "00:19:05,520",
				"to": "00:19:07,040"
			},
			"offsets": {
				"from": 1145520,
				"to": 1147040
			},
			"text": " This is really good."
		},
		{
			"timestamps": {
				"from": "00:19:07,040",
				"to": "00:19:10,200"
			},
			"offsets": {
				"from": 1147040,
				"to": 1150200
			},
			"text": " One of the main use cases that I've certainly used this for"
		},
		{
			"timestamps": {
				"from": "00:19:10,200",
				"to": "00:19:14,240"
			},
			"offsets": {
				"from": 1150200,
				"to": 1154240
			},
			"text": " is when a contract is implementing EIP 1967, which"
		},
		{
			"timestamps": {
				"from": "00:19:14,240",
				"to": "00:19:15,960"
			},
			"offsets": {
				"from": 1154240,
				"to": 1155960
			},
			"text": " is the proxy pattern."
		},
		{
			"timestamps": {
				"from": "00:19:15,960",
				"to": "00:19:20,400"
			},
			"offsets": {
				"from": 1155960,
				"to": 1160400
			},
			"text": " So you have a contract that's implementing all the calls"
		},
		{
			"timestamps": {
				"from": "00:19:20,400",
				"to": "00:19:21,640"
			},
			"offsets": {
				"from": 1160400,
				"to": 1161640
			},
			"text": " from another contract."
		},
		{
			"timestamps": {
				"from": "00:19:21,640",
				"to": "00:19:24,120"
			},
			"offsets": {
				"from": 1161640,
				"to": 1164120
			},
			"text": " And that contract's address that's actually"
		},
		{
			"timestamps": {
				"from": "00:19:24,120",
				"to": "00:19:28,360"
			},
			"offsets": {
				"from": 1164120,
				"to": 1168360
			},
			"text": " got the implementation is always in a specific storage slot."
		},
		{
			"timestamps": {
				"from": "00:19:28,360",
				"to": "00:19:30,840"
			},
			"offsets": {
				"from": 1168360,
				"to": 1170840
			},
			"text": " I can go into this example later as well."
		},
		{
			"timestamps": {
				"from": "00:19:30,840",
				"to": "00:19:33,360"
			},
			"offsets": {
				"from": 1170840,
				"to": 1173360
			},
			"text": " But this is just one hugely powerful example of stuff"
		},
		{
			"timestamps": {
				"from": "00:19:33,360",
				"to": "00:19:35,840"
			},
			"offsets": {
				"from": 1173360,
				"to": 1175840
			},
			"text": " you can access if you're building your own indexer."
		},
		{
			"timestamps": {
				"from": "00:19:35,840",
				"to": "00:19:40,640"
			},
			"offsets": {
				"from": 1175840,
				"to": 1180640
			},
			"text": " OK, infrastructure design."
		},
		{
			"timestamps": {
				"from": "00:19:40,640",
				"to": "00:19:42,320"
			},
			"offsets": {
				"from": 1180640,
				"to": 1182320
			},
			"text": " So this is a bit of a web two thing,"
		},
		{
			"timestamps": {
				"from": "00:19:42,320",
				"to": "00:19:45,600"
			},
			"offsets": {
				"from": 1182320,
				"to": 1185600
			},
			"text": " but it's important to think about how you want your indexing"
		},
		{
			"timestamps": {
				"from": "00:19:45,600",
				"to": "00:19:46,960"
			},
			"offsets": {
				"from": 1185600,
				"to": 1186960
			},
			"text": " application to run."
		},
		{
			"timestamps": {
				"from": "00:19:46,960",
				"to": "00:19:49,240"
			},
			"offsets": {
				"from": 1186960,
				"to": 1189240
			},
			"text": " You can make it as complex or as simple as you want."
		},
		{
			"timestamps": {
				"from": "00:19:49,240",
				"to": "00:19:51,360"
			},
			"offsets": {
				"from": 1189240,
				"to": 1191360
			},
			"text": " So if it's just a regular ETL, you"
		},
		{
			"timestamps": {
				"from": "00:19:51,360",
				"to": "00:19:55,040"
			},
			"offsets": {
				"from": 1191360,
				"to": 1195040
			},
			"text": " can have your program connected to a node,"
		},
		{
			"timestamps": {
				"from": "00:19:55,040",
				"to": "00:19:56,640"
			},
			"offsets": {
				"from": 1195040,
				"to": 1196640
			},
			"text": " and then you're inserting into a database."
		},
		{
			"timestamps": {
				"from": "00:19:56,640",
				"to": "00:19:58,320"
			},
			"offsets": {
				"from": 1196640,
				"to": 1198320
			},
			"text": " But you can do so much more."
		},
		{
			"timestamps": {
				"from": "00:19:58,320",
				"to": "00:20:00,000"
			},
			"offsets": {
				"from": 1198320,
				"to": 1200000
			},
			"text": " You can create a hackathon submission"
		},
		{
			"timestamps": {
				"from": "00:20:00,000",
				"to": "00:20:03,040"
			},
			"offsets": {
				"from": 1200000,
				"to": 1203040
			},
			"text": " that is looking for events on lens, for example."
		},
		{
			"timestamps": {
				"from": "00:20:03,040",
				"to": "00:20:05,520"
			},
			"offsets": {
				"from": 1203040,
				"to": 1205520
			},
			"text": " And then I'm sending out alerts through EPNS"
		},
		{
			"timestamps": {
				"from": "00:20:05,520",
				"to": "00:20:08,200"
			},
			"offsets": {
				"from": 1205520,
				"to": 1208200
			},
			"text": " every single time someone's profile gets liked."
		},
		{
			"timestamps": {
				"from": "00:20:08,200",
				"to": "00:20:12,200"
			},
			"offsets": {
				"from": 1208200,
				"to": 1212200
			},
			"text": " I could scale my application."
		},
		{
			"timestamps": {
				"from": "00:20:12,200",
				"to": "00:20:14,000"
			},
			"offsets": {
				"from": 1212200,
				"to": 1214000
			},
			"text": " I could have several nodes, have a load"
		},
		{
			"timestamps": {
				"from": "00:20:14,000",
				"to": "00:20:15,400"
			},
			"offsets": {
				"from": 1214000,
				"to": 1215400
			},
			"text": " bound through between it."
		},
		{
			"timestamps": {
				"from": "00:20:15,400",
				"to": "00:20:17,520"
			},
			"offsets": {
				"from": 1215400,
				"to": 1217520
			},
			"text": " So I'm not overwhelming any single node."
		},
		{
			"timestamps": {
				"from": "00:20:17,520",
				"to": "00:20:19,280"
			},
			"offsets": {
				"from": 1217520,
				"to": 1219280
			},
			"text": " I could be sending off my messages"
		},
		{
			"timestamps": {
				"from": "00:20:19,280",
				"to": "00:20:22,520"
			},
			"offsets": {
				"from": 1219280,
				"to": 1222520
			},
			"text": " after I've dealt with them to an AI analysis."
		},
		{
			"timestamps": {
				"from": "00:20:22,520",
				"to": "00:20:26,360"
			},
			"offsets": {
				"from": 1222520,
				"to": 1226360
			},
			"text": " And I could be storing them across several database nodes."
		},
		{
			"timestamps": {
				"from": "00:20:26,360",
				"to": "00:20:28,320"
			},
			"offsets": {
				"from": 1226360,
				"to": 1228320
			},
			"text": " Stuff I've worked with personally that I recommend"
		},
		{
			"timestamps": {
				"from": "00:20:28,320",
				"to": "00:20:30,800"
			},
			"offsets": {
				"from": 1228320,
				"to": 1230800
			},
			"text": " is a sort of microservice architecture."
		},
		{
			"timestamps": {
				"from": "00:20:30,800",
				"to": "00:20:32,640"
			},
			"offsets": {
				"from": 1230800,
				"to": 1232640
			},
			"text": " You can have Kafka sort of in the middle"
		},
		{
			"timestamps": {
				"from": "00:20:32,640",
				"to": "00:20:35,000"
			},
			"offsets": {
				"from": 1232640,
				"to": 1235000
			},
			"text": " as a message broker and pass information"
		},
		{
			"timestamps": {
				"from": "00:20:35,000",
				"to": "00:20:39,040"
			},
			"offsets": {
				"from": 1235000,
				"to": 1239040
			},
			"text": " between all your services or your different storage points."
		},
		{
			"timestamps": {
				"from": "00:20:39,040",
				"to": "00:20:41,120"
			},
			"offsets": {
				"from": 1239040,
				"to": 1241120
			},
			"text": " Maybe you're an arbitrager."
		},
		{
			"timestamps": {
				"from": "00:20:41,120",
				"to": "00:20:43,480"
			},
			"offsets": {
				"from": 1241120,
				"to": 1243480
			},
			"text": " And you want to do sort of an analysis,"
		},
		{
			"timestamps": {
				"from": "00:20:43,480",
				"to": "00:20:47,120"
			},
			"offsets": {
				"from": 1243480,
				"to": 1247120
			},
			"text": " throw that analysis inside in-memory database,"
		},
		{
			"timestamps": {
				"from": "00:20:47,120",
				"to": "00:20:52,360"
			},
			"offsets": {
				"from": 1247120,
				"to": 1252360
			},
			"text": " like readers for quick access, while simultaneously throwing"
		},
		{
			"timestamps": {
				"from": "00:20:52,360",
				"to": "00:20:56,400"
			},
			"offsets": {
				"from": 1252360,
				"to": 1256400
			},
			"text": " any archive data into your own sort of postgres database."
		},
		{
			"timestamps": {
				"from": "00:20:56,400",
				"to": "00:21:02,240"
			},
			"offsets": {
				"from": 1256400,
				"to": 1262240
			},
			"text": " Database options."
		},
		{
			"timestamps": {
				"from": "00:21:02,240",
				"to": "00:21:05,560"
			},
			"offsets": {
				"from": 1262240,
				"to": 1265560
			},
			"text": " So indexing is really powerful because you can choose"
		},
		{
			"timestamps": {
				"from": "00:21:05,560",
				"to": "00:21:09,840"
			},
			"offsets": {
				"from": 1265560,
				"to": 1269840
			},
			"text": " how quickly you want to access what subset of data."
		},
		{
			"timestamps": {
				"from": "00:21:09,840",
				"to": "00:21:12,480"
			},
			"offsets": {
				"from": 1269840,
				"to": 1272480
			},
			"text": " So these are just like a few I threw up."
		},
		{
			"timestamps": {
				"from": "00:21:12,480",
				"to": "00:21:15,440"
			},
			"offsets": {
				"from": 1272480,
				"to": 1275440
			},
			"text": " So time scale DB is extremely interesting."
		},
		{
			"timestamps": {
				"from": "00:21:15,440",
				"to": "00:21:18,600"
			},
			"offsets": {
				"from": 1275440,
				"to": 1278600
			},
			"text": " But any time series database sort of proved this point."
		},
		{
			"timestamps": {
				"from": "00:21:18,600",
				"to": "00:21:21,200"
			},
			"offsets": {
				"from": 1278600,
				"to": 1281200
			},
			"text": " The blockchain doesn't give you an option directly"
		},
		{
			"timestamps": {
				"from": "00:21:21,200",
				"to": "00:21:24,680"
			},
			"offsets": {
				"from": 1281200,
				"to": 1284680
			},
			"text": " to look through transactions within a time range."
		},
		{
			"timestamps": {
				"from": "00:21:24,680",
				"to": "00:21:28,280"
			},
			"offsets": {
				"from": 1284680,
				"to": 1288280
			},
			"text": " You can specify a block range, but that's not really always"
		},
		{
			"timestamps": {
				"from": "00:21:28,280",
				"to": "00:21:28,840"
			},
			"offsets": {
				"from": 1288280,
				"to": 1288840
			},
			"text": " ideal."
		},
		{
			"timestamps": {
				"from": "00:21:28,840",
				"to": "00:21:33,440"
			},
			"offsets": {
				"from": 1288840,
				"to": 1293440
			},
			"text": " Blocks take a different amount of time to create over time."
		},
		{
			"timestamps": {
				"from": "00:21:33,440",
				"to": "00:21:35,280"
			},
			"offsets": {
				"from": 1293440,
				"to": 1295280
			},
			"text": " And you have to do sort of extra leg work there"
		},
		{
			"timestamps": {
				"from": "00:21:35,280",
				"to": "00:21:39,040"
			},
			"offsets": {
				"from": 1295280,
				"to": 1299040
			},
			"text": " if you want to convert from block to time."
		},
		{
			"timestamps": {
				"from": "00:21:39,040",
				"to": "00:21:41,400"
			},
			"offsets": {
				"from": 1299040,
				"to": 1301400
			},
			"text": " Time scale off is something really awesome,"
		},
		{
			"timestamps": {
				"from": "00:21:41,400",
				"to": "00:21:44,840"
			},
			"offsets": {
				"from": 1301400,
				"to": 1304840
			},
			"text": " especially when you're looking at a large data set"
		},
		{
			"timestamps": {
				"from": "00:21:44,840",
				"to": "00:21:46,320"
			},
			"offsets": {
				"from": 1304840,
				"to": 1306320
			},
			"text": " like a blockchain."
		},
		{
			"timestamps": {
				"from": "00:21:46,320",
				"to": "00:21:47,960"
			},
			"offsets": {
				"from": 1306320,
				"to": 1307960
			},
			"text": " And that's continuous aggregates."
		},
		{
			"timestamps": {
				"from": "00:21:47,960",
				"to": "00:21:50,160"
			},
			"offsets": {
				"from": 1307960,
				"to": 1310160
			},
			"text": " And these are materialized views"
		},
		{
			"timestamps": {
				"from": "00:21:50,160",
				"to": "00:21:52,840"
			},
			"offsets": {
				"from": 1310160,
				"to": 1312840
			},
			"text": " that you can create for aggregate data."
		},
		{
			"timestamps": {
				"from": "00:21:52,840",
				"to": "00:21:57,880"
			},
			"offsets": {
				"from": 1312840,
				"to": 1317880
			},
			"text": " So for example, I can calculate the average every single week"
		},
		{
			"timestamps": {
				"from": "00:21:57,880",
				"to": "00:22:00,120"
			},
			"offsets": {
				"from": 1317880,
				"to": 1320120
			},
			"text": " of how much gas is spent on Ethereum."
		},
		{
			"timestamps": {
				"from": "00:22:00,120",
				"to": "00:22:02,400"
			},
			"offsets": {
				"from": 1320120,
				"to": 1322400
			},
			"text": " And I can permanently store that data in a view"
		},
		{
			"timestamps": {
				"from": "00:22:02,400",
				"to": "00:22:04,480"
			},
			"offsets": {
				"from": 1322400,
				"to": 1324480
			},
			"text": " and access it instantly as opposed"
		},
		{
			"timestamps": {
				"from": "00:22:04,480",
				"to": "00:22:07,160"
			},
			"offsets": {
				"from": 1324480,
				"to": 1327160
			},
			"text": " to having to recalculate that data."
		},
		{
			"timestamps": {
				"from": "00:22:07,160",
				"to": "00:22:11,600"
			},
			"offsets": {
				"from": 1327160,
				"to": 1331600
			},
			"text": " KDB is very popular within sort of the MEV community"
		},
		{
			"timestamps": {
				"from": "00:22:11,600",
				"to": "00:22:13,120"
			},
			"offsets": {
				"from": 1331600,
				"to": 1333120
			},
			"text": " from what I've seen."
		},
		{
			"timestamps": {
				"from": "00:22:13,120",
				"to": "00:22:15,720"
			},
			"offsets": {
				"from": 1333120,
				"to": 1335720
			},
			"text": " It's a completely in-memory database."
		},
		{
			"timestamps": {
				"from": "00:22:15,720",
				"to": "00:22:17,840"
			},
			"offsets": {
				"from": 1335720,
				"to": 1337840
			},
			"text": " It's extremely fast."
		},
		{
			"timestamps": {
				"from": "00:22:17,840",
				"to": "00:22:20,800"
			},
			"offsets": {
				"from": 1337840,
				"to": 1340800
			},
			"text": " So similar along the lines of readers, but far more"
		},
		{
			"timestamps": {
				"from": "00:22:20,800",
				"to": "00:22:25,480"
			},
			"offsets": {
				"from": 1340800,
				"to": 1345480
			},
			"text": " performance, it's used a lot by quant firms, arbitrage,"
		},
		{
			"timestamps": {
				"from": "00:22:25,480",
				"to": "00:22:29,720"
			},
			"offsets": {
				"from": 1345480,
				"to": 1349720
			},
			"text": " and also Formula One, like racing."
		},
		{
			"timestamps": {
				"from": "00:22:29,720",
				"to": "00:22:33,120"
			},
			"offsets": {
				"from": 1349720,
				"to": 1353120
			},
			"text": " So they use it for in-race analysis and stuff like that."
		},
		{
			"timestamps": {
				"from": "00:22:33,120",
				"to": "00:22:36,520"
			},
			"offsets": {
				"from": 1353120,
				"to": 1356520
			},
			"text": " Postgres, absolute classic, completely free."
		},
		{
			"timestamps": {
				"from": "00:22:37,400",
				"to": "00:22:38,800"
			},
			"offsets": {
				"from": 1357400,
				"to": 1358800
			},
			"text": " Perfect audio system."
		},
		{
			"timestamps": {
				"from": "00:22:38,800",
				"to": "00:22:40,920"
			},
			"offsets": {
				"from": 1358800,
				"to": 1360920
			},
			"text": " Why would you use anything else?"
		},
		{
			"timestamps": {
				"from": "00:22:40,920",
				"to": "00:22:42,840"
			},
			"offsets": {
				"from": 1360920,
				"to": 1362840
			},
			"text": " Don't talk to me about MySQL."
		},
		{
			"timestamps": {
				"from": "00:22:42,840",
				"to": "00:22:45,840"
			},
			"offsets": {
				"from": 1362840,
				"to": 1365840
			},
			"text": " I hate it."
		},
		{
			"timestamps": {
				"from": "00:22:45,840",
				"to": "00:22:48,520"
			},
			"offsets": {
				"from": 1365840,
				"to": 1368520
			},
			"text": " OK, now I just want to go through a quick code walkthrough"
		},
		{
			"timestamps": {
				"from": "00:22:48,520",
				"to": "00:22:50,400"
			},
			"offsets": {
				"from": 1368520,
				"to": 1370400
			},
			"text": " of a simple application."
		},
		{
			"timestamps": {
				"from": "00:22:50,400",
				"to": "00:22:52,240"
			},
			"offsets": {
				"from": 1370400,
				"to": 1372240
			},
			"text": " So we can actually build these indexers"
		},
		{
			"timestamps": {
				"from": "00:22:52,240",
				"to": "00:22:54,960"
			},
			"offsets": {
				"from": 1372240,
				"to": 1374960
			},
			"text": " in about 150 lines of go code."
		},
		{
			"timestamps": {
				"from": "00:22:54,960",
				"to": "00:22:55,480"
			},
			"offsets": {
				"from": 1374960,
				"to": 1375480
			},
			"text": " Easy."
		},
		{
			"timestamps": {
				"from": "00:22:55,480",
				"to": "00:23:02,760"
			},
			"offsets": {
				"from": 1375480,
				"to": 1382760
			},
			"text": " OK, so first I want to explain my language choice,"
		},
		{
			"timestamps": {
				"from": "00:23:02,760",
				"to": "00:23:05,160"
			},
			"offsets": {
				"from": 1382760,
				"to": 1385160
			},
			"text": " because I've been contested on it in the past."
		},
		{
			"timestamps": {
				"from": "00:23:05,160",
				"to": "00:23:07,200"
			},
			"offsets": {
				"from": 1385160,
				"to": 1387200
			},
			"text": " I really like using Go for the back end"
		},
		{
			"timestamps": {
				"from": "00:23:07,200",
				"to": "00:23:11,760"
			},
			"offsets": {
				"from": 1387200,
				"to": 1391760
			},
			"text": " and interacting directly with Geth and with the Geth library."
		},
		{
			"timestamps": {
				"from": "00:23:11,760",
				"to": "00:23:13,400"
			},
			"offsets": {
				"from": 1391760,
				"to": 1393400
			},
			"text": " First of all, Geth is--"
		},
		{
			"timestamps": {
				"from": "00:23:13,400",
				"to": "00:23:15,040"
			},
			"offsets": {
				"from": 1393400,
				"to": 1395040
			},
			"text": " a Go is fast."
		},
		{
			"timestamps": {
				"from": "00:23:15,040",
				"to": "00:23:18,520"
			},
			"offsets": {
				"from": 1395040,
				"to": 1398520
			},
			"text": " Geth is probably the most well maintained library."
		},
		{
			"timestamps": {
				"from": "00:23:18,520",
				"to": "00:23:20,840"
			},
			"offsets": {
				"from": 1398520,
				"to": 1400840
			},
			"text": " It obviously doesn't have features of said"
		},
		{
			"timestamps": {
				"from": "00:23:20,840",
				"to": "00:23:24,320"
			},
			"offsets": {
				"from": 1400840,
				"to": 1404320
			},
			"text": " and other blockchain Ethereum clients,"
		},
		{
			"timestamps": {
				"from": "00:23:24,320",
				"to": "00:23:26,080"
			},
			"offsets": {
				"from": 1404320,
				"to": 1406080
			},
			"text": " but it is definitely the most well maintained"
		},
		{
			"timestamps": {
				"from": "00:23:26,080",
				"to": "00:23:28,760"
			},
			"offsets": {
				"from": 1406080,
				"to": 1408760
			},
			"text": " and it always fits through the specs,"
		},
		{
			"timestamps": {
				"from": "00:23:28,760",
				"to": "00:23:31,040"
			},
			"offsets": {
				"from": 1408760,
				"to": 1411040
			},
			"text": " the yellow paper specifications."
		},
		{
			"timestamps": {
				"from": "00:23:31,040",
				"to": "00:23:34,840"
			},
			"offsets": {
				"from": 1411040,
				"to": 1414840
			},
			"text": " Go has a huge bonus and that parallelization"
		},
		{
			"timestamps": {
				"from": "00:23:34,840",
				"to": "00:23:37,040"
			},
			"offsets": {
				"from": 1414840,
				"to": 1417040
			},
			"text": " is directly built into the language."
		},
		{
			"timestamps": {
				"from": "00:23:37,040",
				"to": "00:23:39,720"
			},
			"offsets": {
				"from": 1417040,
				"to": 1419720
			},
			"text": " So we're going to be doing a lot of calls"
		},
		{
			"timestamps": {
				"from": "00:23:39,720",
				"to": "00:23:42,440"
			},
			"offsets": {
				"from": 1419720,
				"to": 1422440
			},
			"text": " through web sockets or through HTTP,"
		},
		{
			"timestamps": {
				"from": "00:23:42,440",
				"to": "00:23:43,880"
			},
			"offsets": {
				"from": 1422440,
				"to": 1423880
			},
			"text": " and we want to parallelize these,"
		},
		{
			"timestamps": {
				"from": "00:23:43,880",
				"to": "00:23:45,520"
			},
			"offsets": {
				"from": 1423880,
				"to": 1425520
			},
			"text": " and we don't have to worry about race conditions"
		},
		{
			"timestamps": {
				"from": "00:23:45,520",
				"to": "00:23:46,240"
			},
			"offsets": {
				"from": 1425520,
				"to": 1426240
			},
			"text": " when we're using Go."
		},
		{
			"timestamps": {
				"from": "00:23:46,240",
				"to": "00:23:52,800"
			},
			"offsets": {
				"from": 1426240,
				"to": 1432800
			},
			"text": " Yeah, another huge bonus is that all of these functions"
		},
		{
			"timestamps": {
				"from": "00:23:52,800",
				"to": "00:23:54,920"
			},
			"offsets": {
				"from": 1432800,
				"to": 1434920
			},
			"text": " that we're going to call to extract data,"
		},
		{
			"timestamps": {
				"from": "00:23:54,920",
				"to": "00:23:58,200"
			},
			"offsets": {
				"from": 1434920,
				"to": 1438200
			},
			"text": " our program is going to be completely portable to every single"
		},
		{
			"timestamps": {
				"from": "00:23:58,200",
				"to": "00:24:01,960"
			},
			"offsets": {
				"from": 1438200,
				"to": 1441960
			},
			"text": " EVM chain except for memory x-dye."
		},
		{
			"timestamps": {
				"from": "00:24:01,960",
				"to": "00:24:06,640"
			},
			"offsets": {
				"from": 1441960,
				"to": 1446640
			},
			"text": " So we can put our application, make it as generic as possible,"
		},
		{
			"timestamps": {
				"from": "00:24:06,640",
				"to": "00:24:10,280"
			},
			"offsets": {
				"from": 1446640,
				"to": 1450280
			},
			"text": " and we can start looking at events on polygon,"
		},
		{
			"timestamps": {
				"from": "00:24:10,280",
				"to": "00:24:12,760"
			},
			"offsets": {
				"from": 1450280,
				"to": 1452760
			},
			"text": " polygon, Ethereum, optimism, and obitrim,"
		},
		{
			"timestamps": {
				"from": "00:24:12,760",
				"to": "00:24:15,320"
			},
			"offsets": {
				"from": 1452760,
				"to": 1455320
			},
			"text": " whatever you want without having to do any extra legwork."
		},
		{
			"timestamps": {
				"from": "00:24:15,320",
				"to": "00:24:19,640"
			},
			"offsets": {
				"from": 1455320,
				"to": 1459640
			},
			"text": " It's like deploying a smart contract to multiple chains."
		},
		{
			"timestamps": {
				"from": "00:24:19,640",
				"to": "00:24:23,320"
			},
			"offsets": {
				"from": 1459640,
				"to": 1463320
			},
			"text": " And the reason this is is all these RPC calls"
		},
		{
			"timestamps": {
				"from": "00:24:23,320",
				"to": "00:24:25,720"
			},
			"offsets": {
				"from": 1463320,
				"to": 1465720
			},
			"text": " that we're making are specified within the yellow paper."
		},
		{
			"timestamps": {
				"from": "00:24:25,720",
				"to": "00:24:28,600"
			},
			"offsets": {
				"from": 1465720,
				"to": 1468600
			},
			"text": " So any EVM client that is being created"
		},
		{
			"timestamps": {
				"from": "00:24:28,600",
				"to": "00:24:30,600"
			},
			"offsets": {
				"from": 1468600,
				"to": 1470600
			},
			"text": " is going to have to fit through these specs."
		},
		{
			"timestamps": {
				"from": "00:24:30,600",
				"to": "00:24:35,360"
			},
			"offsets": {
				"from": 1470600,
				"to": 1475360
			},
			"text": " Okay, creating a client."
		},
		{
			"timestamps": {
				"from": "00:24:35,360",
				"to": "00:24:38,480"
			},
			"offsets": {
				"from": 1475360,
				"to": 1478480
			},
			"text": " This is like pretty basic code."
		},
		{
			"timestamps": {
				"from": "00:24:38,480",
				"to": "00:24:40,840"
			},
			"offsets": {
				"from": 1478480,
				"to": 1480840
			},
			"text": " So I'm just creating a HTTP client."
		},
		{
			"timestamps": {
				"from": "00:24:40,840",
				"to": "00:24:44,760"
			},
			"offsets": {
				"from": 1480840,
				"to": 1484760
			},
			"text": " I'm feeding in my alchemy sort of key."
		},
		{
			"timestamps": {
				"from": "00:24:44,760",
				"to": "00:24:46,720"
			},
			"offsets": {
				"from": 1484760,
				"to": 1486720
			},
			"text": " That's what the RPC thing is there."
		},
		{
			"timestamps": {
				"from": "00:24:46,720",
				"to": "00:24:48,080"
			},
			"offsets": {
				"from": 1486720,
				"to": 1488080
			},
			"text": " It's just a string."
		},
		{
			"timestamps": {
				"from": "00:24:48,080",
				"to": "00:24:49,760"
			},
			"offsets": {
				"from": 1488080,
				"to": 1489760
			},
			"text": " I'm doing a bit of error handling here,"
		},
		{
			"timestamps": {
				"from": "00:24:49,760",
				"to": "00:24:54,320"
			},
			"offsets": {
				"from": 1489760,
				"to": 1494320
			},
			"text": " making sure that I am in fact connecting,"
		},
		{
			"timestamps": {
				"from": "00:24:54,320",
				"to": "00:24:57,320"
			},
			"offsets": {
				"from": 1494320,
				"to": 1497320
			},
			"text": " and that's really it for this."
		},
		{
			"timestamps": {
				"from": "00:24:57,320",
				"to": "00:24:59,800"
			},
			"offsets": {
				"from": 1497320,
				"to": 1499800
			},
			"text": " There's really not too much to worry about here."
		},
		{
			"timestamps": {
				"from": "00:24:59,800",
				"to": "00:25:00,640"
			},
			"offsets": {
				"from": 1499800,
				"to": 1500640
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:25:00,640",
				"to": "00:25:03,400"
			},
			"offsets": {
				"from": 1500640,
				"to": 1503400
			},
			"text": " (muffled speaking)"
		},
		{
			"timestamps": {
				"from": "00:25:03,400",
				"to": "00:25:09,080"
			},
			"offsets": {
				"from": 1503400,
				"to": 1509080
			},
			"text": " Okay, that's a good question."
		},
		{
			"timestamps": {
				"from": "00:25:09,080",
				"to": "00:25:10,040"
			},
			"offsets": {
				"from": 1509080,
				"to": 1510040
			},
			"text": " I'll just repeat it."
		},
		{
			"timestamps": {
				"from": "00:25:10,040",
				"to": "00:25:11,880"
			},
			"offsets": {
				"from": 1510040,
				"to": 1511880
			},
			"text": " So the question was,"
		},
		{
			"timestamps": {
				"from": "00:25:11,880",
				"to": "00:25:14,000"
			},
			"offsets": {
				"from": 1511880,
				"to": 1514000
			},
			"text": " is should you run your own node infrastructure"
		},
		{
			"timestamps": {
				"from": "00:25:14,000",
				"to": "00:25:17,320"
			},
			"offsets": {
				"from": 1514000,
				"to": 1517320
			},
			"text": " or use an outsourced node like alchemy?"
		},
		{
			"timestamps": {
				"from": "00:25:17,320",
				"to": "00:25:20,720"
			},
			"offsets": {
				"from": 1517320,
				"to": 1520720
			},
			"text": " So there's several advantages to running your own,"
		},
		{
			"timestamps": {
				"from": "00:25:20,720",
				"to": "00:25:21,960"
			},
			"offsets": {
				"from": 1520720,
				"to": 1521960
			},
			"text": " and a few disadvantages."
		},
		{
			"timestamps": {
				"from": "00:25:21,960",
				"to": "00:25:23,480"
			},
			"offsets": {
				"from": 1521960,
				"to": 1523480
			},
			"text": " Running your own node,"
		},
		{
			"timestamps": {
				"from": "00:25:23,480",
				"to": "00:25:25,280"
			},
			"offsets": {
				"from": 1523480,
				"to": 1525280
			},
			"text": " beyond you just have direct access,"
		},
		{
			"timestamps": {
				"from": "00:25:25,280",
				"to": "00:25:27,360"
			},
			"offsets": {
				"from": 1525280,
				"to": 1527360
			},
			"text": " and you can manage all your load yourself."
		},
		{
			"timestamps": {
				"from": "00:25:27,360",
				"to": "00:25:31,480"
			},
			"offsets": {
				"from": 1527360,
				"to": 1531480
			},
			"text": " You can also put other sort of add-ons"
		},
		{
			"timestamps": {
				"from": "00:25:31,480",
				"to": "00:25:34,080"
			},
			"offsets": {
				"from": 1531480,
				"to": 1534080
			},
			"text": " on top of that node on top."
		},
		{
			"timestamps": {
				"from": "00:25:34,080",
				"to": "00:25:35,520"
			},
			"offsets": {
				"from": 1534080,
				"to": 1535520
			},
			"text": " You can put add-ons on top of that node"
		},
		{
			"timestamps": {
				"from": "00:25:35,520",
				"to": "00:25:37,240"
			},
			"offsets": {
				"from": 1535520,
				"to": 1537240
			},
			"text": " to make the indexing even faster."
		},
		{
			"timestamps": {
				"from": "00:25:37,240",
				"to": "00:25:39,520"
			},
			"offsets": {
				"from": 1537240,
				"to": 1539520
			},
			"text": " So when you're doing retrieval,"
		},
		{
			"timestamps": {
				"from": "00:25:39,520",
				"to": "00:25:41,480"
			},
			"offsets": {
				"from": 1539520,
				"to": 1541480
			},
			"text": " you're sort of indexing already on an index,"
		},
		{
			"timestamps": {
				"from": "00:25:41,480",
				"to": "00:25:43,480"
			},
			"offsets": {
				"from": 1541480,
				"to": 1543480
			},
			"text": " which is fantastic."
		},
		{
			"timestamps": {
				"from": "00:25:43,480",
				"to": "00:25:46,480"
			},
			"offsets": {
				"from": 1543480,
				"to": 1546480
			},
			"text": " Me personally, if I'm running in a production environment"
		},
		{
			"timestamps": {
				"from": "00:25:46,480",
				"to": "00:25:48,600"
			},
			"offsets": {
				"from": 1546480,
				"to": 1548600
			},
			"text": " and I have an application that's fully running"
		},
		{
			"timestamps": {
				"from": "00:25:48,600",
				"to": "00:25:51,080"
			},
			"offsets": {
				"from": 1548600,
				"to": 1551080
			},
			"text": " as an indexer and my system is depending on it,"
		},
		{
			"timestamps": {
				"from": "00:25:51,080",
				"to": "00:25:52,720"
			},
			"offsets": {
				"from": 1551080,
				"to": 1552720
			},
			"text": " then I would run my own node."
		},
		{
			"timestamps": {
				"from": "00:25:53,480",
				"to": "00:25:55,880"
			},
			"offsets": {
				"from": 1553480,
				"to": 1555880
			},
			"text": " I see some node operators here and I feel bad."
		},
		{
			"timestamps": {
				"from": "00:25:55,880",
				"to": "00:25:59,040"
			},
			"offsets": {
				"from": 1555880,
				"to": 1559040
			},
			"text": " But for hackathon projects,"
		},
		{
			"timestamps": {
				"from": "00:25:59,040",
				"to": "00:26:00,600"
			},
			"offsets": {
				"from": 1559040,
				"to": 1560600
			},
			"text": " absolutely use alchemy."
		},
		{
			"timestamps": {
				"from": "00:26:00,600",
				"to": "00:26:05,280"
			},
			"offsets": {
				"from": 1560600,
				"to": 1565280
			},
			"text": " Fantastic solution, not just alchemy."
		},
		{
			"timestamps": {
				"from": "00:26:05,280",
				"to": "00:26:08,320"
			},
			"offsets": {
				"from": 1565280,
				"to": 1568320
			},
			"text": " And any, in FURA or whatever,"
		},
		{
			"timestamps": {
				"from": "00:26:08,320",
				"to": "00:26:09,920"
			},
			"offsets": {
				"from": 1568320,
				"to": 1569920
			},
			"text": " I'm not sponsoring guys, I'm sorry,"
		},
		{
			"timestamps": {
				"from": "00:26:09,920",
				"to": "00:26:11,440"
			},
			"offsets": {
				"from": 1569920,
				"to": 1571440
			},
			"text": " I keep using the same names."
		},
		{
			"timestamps": {
				"from": "00:26:11,440",
				"to": "00:26:15,320"
			},
			"offsets": {
				"from": 1571440,
				"to": 1575320
			},
			"text": " WebSockets versus HTTP."
		},
		{
			"timestamps": {
				"from": "00:26:15,320",
				"to": "00:26:19,120"
			},
			"offsets": {
				"from": 1575320,
				"to": 1579120
			},
			"text": " So most providers will allow you the option"
		},
		{
			"timestamps": {
				"from": "00:26:19,120",
				"to": "00:26:20,640"
			},
			"offsets": {
				"from": 1579120,
				"to": 1580640
			},
			"text": " of accessing their service"
		},
		{
			"timestamps": {
				"from": "00:26:20,640",
				"to": "00:26:22,560"
			},
			"offsets": {
				"from": 1580640,
				"to": 1582560
			},
			"text": " or a WebSocket or HTTP."
		},
		{
			"timestamps": {
				"from": "00:26:22,560",
				"to": "00:26:24,120"
			},
			"offsets": {
				"from": 1582560,
				"to": 1584120
			},
			"text": " I'm just gonna go over this quickly"
		},
		{
			"timestamps": {
				"from": "00:26:24,120",
				"to": "00:26:26,680"
			},
			"offsets": {
				"from": 1584120,
				"to": 1586680
			},
			"text": " 'cause it's more of a web two thing."
		},
		{
			"timestamps": {
				"from": "00:26:26,680",
				"to": "00:26:29,280"
			},
			"offsets": {
				"from": 1586680,
				"to": 1589280
			},
			"text": " HTTP is normally how your wallet connects to the chain."
		},
		{
			"timestamps": {
				"from": "00:26:29,280",
				"to": "00:26:31,240"
			},
			"offsets": {
				"from": 1589280,
				"to": 1591240
			},
			"text": " So whenever I'm making a request,"
		},
		{
			"timestamps": {
				"from": "00:26:31,240",
				"to": "00:26:33,840"
			},
			"offsets": {
				"from": 1591240,
				"to": 1593840
			},
			"text": " my wallet is creating that TLC connection"
		},
		{
			"timestamps": {
				"from": "00:26:33,840",
				"to": "00:26:34,960"
			},
			"offsets": {
				"from": 1593840,
				"to": 1594960
			},
			"text": " and it's shooting back a message"
		},
		{
			"timestamps": {
				"from": "00:26:34,960",
				"to": "00:26:36,800"
			},
			"offsets": {
				"from": 1594960,
				"to": 1596800
			},
			"text": " and that connection is then closed."
		},
		{
			"timestamps": {
				"from": "00:26:36,800",
				"to": "00:26:38,800"
			},
			"offsets": {
				"from": 1596800,
				"to": 1598800
			},
			"text": " When you're creating an indexer,"
		},
		{
			"timestamps": {
				"from": "00:26:38,800",
				"to": "00:26:40,920"
			},
			"offsets": {
				"from": 1598800,
				"to": 1600920
			},
			"text": " you're gonna wanna make lots and lots of requests"
		},
		{
			"timestamps": {
				"from": "00:26:40,920",
				"to": "00:26:45,920"
			},
			"offsets": {
				"from": 1600920,
				"to": 1605920
			},
			"text": " and that extra latency between creating a new handshake"
		},
		{
			"timestamps": {
				"from": "00:26:45,920",
				"to": "00:26:48,480"
			},
			"offsets": {
				"from": 1605920,
				"to": 1608480
			},
			"text": " every single time is actually quite cumbersome."
		},
		{
			"timestamps": {
				"from": "00:26:49,400",
				"to": "00:26:51,880"
			},
			"offsets": {
				"from": 1609400,
				"to": 1611880
			},
			"text": " I would just say straight up that"
		},
		{
			"timestamps": {
				"from": "00:26:51,880",
				"to": "00:26:53,480"
			},
			"offsets": {
				"from": 1611880,
				"to": 1613480
			},
			"text": " if you can use a WebSocket connection,"
		},
		{
			"timestamps": {
				"from": "00:26:53,480",
				"to": "00:26:55,080"
			},
			"offsets": {
				"from": 1613480,
				"to": 1615080
			},
			"text": " always use a WebSocket connection."
		},
		{
			"timestamps": {
				"from": "00:26:55,080",
				"to": "00:26:57,840"
			},
			"offsets": {
				"from": 1615080,
				"to": 1617840
			},
			"text": " No reason, not to really."
		},
		{
			"timestamps": {
				"from": "00:26:57,840",
				"to": "00:27:02,280"
			},
			"offsets": {
				"from": 1617840,
				"to": 1622280
			},
			"text": " Okay, now we're gonna look how to create a query"
		},
		{
			"timestamps": {
				"from": "00:27:02,280",
				"to": "00:27:03,600"
			},
			"offsets": {
				"from": 1622280,
				"to": 1623600
			},
			"text": " and this is an SQL."
		},
		{
			"timestamps": {
				"from": "00:27:03,600",
				"to": "00:27:06,680"
			},
			"offsets": {
				"from": 1623600,
				"to": 1626680
			},
			"text": " By query, I mean, we're gonna query data directly"
		},
		{
			"timestamps": {
				"from": "00:27:06,680",
				"to": "00:27:07,520"
			},
			"offsets": {
				"from": 1626680,
				"to": 1627520
			},
			"text": " from the node."
		},
		{
			"timestamps": {
				"from": "00:27:07,520",
				"to": "00:27:11,800"
			},
			"offsets": {
				"from": 1627520,
				"to": 1631800
			},
			"text": " So there's this Ethereum,"
		},
		{
			"timestamps": {
				"from": "00:27:11,800",
				"to": "00:27:13,760"
			},
			"offsets": {
				"from": 1631800,
				"to": 1633760
			},
			"text": " get object called filter query"
		},
		{
			"timestamps": {
				"from": "00:27:13,760",
				"to": "00:27:16,480"
			},
			"offsets": {
				"from": 1633760,
				"to": 1636480
			},
			"text": " and it does exactly what you think it does."
		},
		{
			"timestamps": {
				"from": "00:27:16,480",
				"to": "00:27:21,480"
			},
			"offsets": {
				"from": 1636480,
				"to": 1641480
			},
			"text": " It takes an array of addresses from which I wanna collect logs from"
		},
		{
			"timestamps": {
				"from": "00:27:21,480",
				"to": "00:27:23,960"
			},
			"offsets": {
				"from": 1641480,
				"to": 1643960
			},
			"text": " and it takes a list of topics."
		},
		{
			"timestamps": {
				"from": "00:27:23,960",
				"to": "00:27:26,640"
			},
			"offsets": {
				"from": 1643960,
				"to": 1646640
			},
			"text": " So before we talked about topics"
		},
		{
			"timestamps": {
				"from": "00:27:26,640",
				"to": "00:27:30,280"
			},
			"offsets": {
				"from": 1646640,
				"to": 1650280
			},
			"text": " and how you can index up to three and you have topic zero."
		},
		{
			"timestamps": {
				"from": "00:27:30,280",
				"to": "00:27:32,040"
			},
			"offsets": {
				"from": 1650280,
				"to": 1652040
			},
			"text": " So you can specify here,"
		},
		{
			"timestamps": {
				"from": "00:27:32,040",
				"to": "00:27:35,480"
			},
			"offsets": {
				"from": 1652040,
				"to": 1655480
			},
			"text": " I wanna collect data from which topic zero"
		},
		{
			"timestamps": {
				"from": "00:27:35,480",
				"to": "00:27:39,960"
			},
			"offsets": {
				"from": 1655480,
				"to": 1659960
			},
			"text": " and which other topics I wanna be equal to some hex value."
		},
		{
			"timestamps": {
				"from": "00:27:39,960",
				"to": "00:27:43,760"
			},
			"offsets": {
				"from": 1659960,
				"to": 1663760
			},
			"text": " And I sort of just declare the subject"
		},
		{
			"timestamps": {
				"from": "00:27:43,760",
				"to": "00:27:46,040"
			},
			"offsets": {
				"from": 1663760,
				"to": 1666040
			},
			"text": " and that's all you really need from here."
		},
		{
			"timestamps": {
				"from": "00:27:46,480",
				"to": "00:27:47,920"
			},
			"offsets": {
				"from": 1666480,
				"to": 1667920
			},
			"text": " We haven't actually made the call yet,"
		},
		{
			"timestamps": {
				"from": "00:27:47,920",
				"to": "00:27:49,800"
			},
			"offsets": {
				"from": 1667920,
				"to": 1669800
			},
			"text": " this is just constructing the query."
		},
		{
			"timestamps": {
				"from": "00:27:49,800",
				"to": "00:27:52,840"
			},
			"offsets": {
				"from": 1669800,
				"to": 1672840
			},
			"text": " This also takes a block range,"
		},
		{
			"timestamps": {
				"from": "00:27:52,840",
				"to": "00:27:54,920"
			},
			"offsets": {
				"from": 1672840,
				"to": 1674920
			},
			"text": " which I didn't include for some reason."
		},
		{
			"timestamps": {
				"from": "00:27:54,920",
				"to": "00:27:58,200"
			},
			"offsets": {
				"from": 1674920,
				"to": 1678200
			},
			"text": " Next, okay."
		},
		{
			"timestamps": {
				"from": "00:27:58,200",
				"to": "00:28:01,120"
			},
			"offsets": {
				"from": 1678200,
				"to": 1681120
			},
			"text": " So now we're actually making the query"
		},
		{
			"timestamps": {
				"from": "00:28:01,120",
				"to": "00:28:04,200"
			},
			"offsets": {
				"from": 1681120,
				"to": 1684200
			},
			"text": " and this is where block range becomes very important."
		},
		{
			"timestamps": {
				"from": "00:28:04,200",
				"to": "00:28:06,760"
			},
			"offsets": {
				"from": 1684200,
				"to": 1686760
			},
			"text": " So there's two ways in which I can request data"
		},
		{
			"timestamps": {
				"from": "00:28:06,760",
				"to": "00:28:08,640"
			},
			"offsets": {
				"from": 1686760,
				"to": 1688640
			},
			"text": " from a blockchain node."
		},
		{
			"timestamps": {
				"from": "00:28:08,640",
				"to": "00:28:10,220"
			},
			"offsets": {
				"from": 1688640,
				"to": 1690220
			},
			"text": " I can do subscribe filter logs,"
		},
		{
			"timestamps": {
				"from": "00:28:10,220",
				"to": "00:28:13,800"
			},
			"offsets": {
				"from": 1690220,
				"to": 1693800
			},
			"text": " which is I'm establishing a connection to the node"
		},
		{
			"timestamps": {
				"from": "00:28:13,800",
				"to": "00:28:15,560"
			},
			"offsets": {
				"from": 1693800,
				"to": 1695560
			},
			"text": " and I'm telling the node, okay,"
		},
		{
			"timestamps": {
				"from": "00:28:15,560",
				"to": "00:28:17,040"
			},
			"offsets": {
				"from": 1695560,
				"to": 1697040
			},
			"text": " here are my parameters."
		},
		{
			"timestamps": {
				"from": "00:28:17,040",
				"to": "00:28:20,480"
			},
			"offsets": {
				"from": 1697040,
				"to": 1700480
			},
			"text": " Whenever this happens on chain, send me a message."
		},
		{
			"timestamps": {
				"from": "00:28:20,480",
				"to": "00:28:23,840"
			},
			"offsets": {
				"from": 1700480,
				"to": 1703840
			},
			"text": " So this is really useful because now I can sort of distribute"
		},
		{
			"timestamps": {
				"from": "00:28:23,840",
				"to": "00:28:27,080"
			},
			"offsets": {
				"from": 1703840,
				"to": 1707080
			},
			"text": " my load from the node because I get these messages"
		},
		{
			"timestamps": {
				"from": "00:28:27,080",
				"to": "00:28:29,480"
			},
			"offsets": {
				"from": 1707080,
				"to": 1709480
			},
			"text": " one at a time, I can process them."
		},
		{
			"timestamps": {
				"from": "00:28:29,480",
				"to": "00:28:33,520"
			},
			"offsets": {
				"from": 1709480,
				"to": 1713520
			},
			"text": " And as long as my application is at least decently efficient,"
		},
		{
			"timestamps": {
				"from": "00:28:33,520",
				"to": "00:28:35,820"
			},
			"offsets": {
				"from": 1713520,
				"to": 1715820
			},
			"text": " I'll process everything without any lag."
		},
		{
			"timestamps": {
				"from": "00:28:35,820",
				"to": "00:28:40,320"
			},
			"offsets": {
				"from": 1715820,
				"to": 1720320
			},
			"text": " Now this always is an option because one thing about"
		},
		{
			"timestamps": {
				"from": "00:28:40,320",
				"to": "00:28:42,440"
			},
			"offsets": {
				"from": 1720320,
				"to": 1722440
			},
			"text": " subscribe filter logs is that I can't request"
		},
		{
			"timestamps": {
				"from": "00:28:42,440",
				"to": "00:28:43,840"
			},
			"offsets": {
				"from": 1722440,
				"to": 1723840
			},
			"text": " historical information."
		},
		{
			"timestamps": {
				"from": "00:28:43,840",
				"to": "00:28:48,080"
			},
			"offsets": {
				"from": 1723840,
				"to": 1728080
			},
			"text": " I will only be receiving data from the point I've subscribed."
		},
		{
			"timestamps": {
				"from": "00:28:48,080",
				"to": "00:28:50,560"
			},
			"offsets": {
				"from": 1728080,
				"to": 1730560
			},
			"text": " So from the next block that's coming."
		},
		{
			"timestamps": {
				"from": "00:28:50,560",
				"to": "00:28:54,120"
			},
			"offsets": {
				"from": 1730560,
				"to": 1734120
			},
			"text": " Now I can also do filter logs in which I can request"
		},
		{
			"timestamps": {
				"from": "00:28:54,120",
				"to": "00:28:56,760"
			},
			"offsets": {
				"from": 1734120,
				"to": 1736760
			},
			"text": " a bunch of logs that have already happened."
		},
		{
			"timestamps": {
				"from": "00:28:56,760",
				"to": "00:29:00,240"
			},
			"offsets": {
				"from": 1736760,
				"to": 1740240
			},
			"text": " So that's essentially what that does."
		},
		{
			"timestamps": {
				"from": "00:29:00,240",
				"to": "00:29:05,920"
			},
			"offsets": {
				"from": 1740240,
				"to": 1745920
			},
			"text": " It's really useful, especially if you wanna do"
		},
		{
			"timestamps": {
				"from": "00:29:05,920",
				"to": "00:29:07,440"
			},
			"offsets": {
				"from": 1745920,
				"to": 1747440
			},
			"text": " a historical analysis."
		},
		{
			"timestamps": {
				"from": "00:29:07,440",
				"to": "00:29:11,120"
			},
			"offsets": {
				"from": 1747440,
				"to": 1751120
			},
			"text": " The thing to be wary here is that it is quite hard"
		},
		{
			"timestamps": {
				"from": "00:29:11,120",
				"to": "00:29:16,120"
			},
			"offsets": {
				"from": 1751120,
				"to": 1756120
			},
			"text": " on the node if you're asking a retrieval of megabytes"
		},
		{
			"timestamps": {
				"from": "00:29:16,120",
				"to": "00:29:19,120"
			},
			"offsets": {
				"from": 1756120,
				"to": 1759120
			},
			"text": " or gigabytes of data and also your application"
		},
		{
			"timestamps": {
				"from": "00:29:19,120",
				"to": "00:29:20,880"
			},
			"offsets": {
				"from": 1759120,
				"to": 1760880
			},
			"text": " is gonna have to keep time as well."
		},
		{
			"timestamps": {
				"from": "00:29:20,880",
				"to": "00:29:25,480"
			},
			"offsets": {
				"from": 1760880,
				"to": 1765480
			},
			"text": " Definitely super expensive if you wanna collect"
		},
		{
			"timestamps": {
				"from": "00:29:25,480",
				"to": "00:29:27,400"
			},
			"offsets": {
				"from": 1765480,
				"to": 1767400
			},
			"text": " the entire history for a particular log"
		},
		{
			"timestamps": {
				"from": "00:29:27,400",
				"to": "00:29:28,600"
			},
			"offsets": {
				"from": 1767400,
				"to": 1768600
			},
			"text": " throughout the whole chain."
		},
		{
			"timestamps": {
				"from": "00:29:28,600",
				"to": "00:29:31,840"
			},
			"offsets": {
				"from": 1768600,
				"to": 1771840
			},
			"text": " Okay, channels."
		},
		{
			"timestamps": {
				"from": "00:29:31,840",
				"to": "00:29:35,600"
			},
			"offsets": {
				"from": 1771840,
				"to": 1775600
			},
			"text": " This is a go thing, but it's also extremely important to know"
		},
		{
			"timestamps": {
				"from": "00:29:35,600",
				"to": "00:29:37,480"
			},
			"offsets": {
				"from": 1775600,
				"to": 1777480
			},
			"text": " and it's one of the reasons that I suggest"
		},
		{
			"timestamps": {
				"from": "00:29:37,480",
				"to": "00:29:40,160"
			},
			"offsets": {
				"from": 1777480,
				"to": 1780160
			},
			"text": " making these index applications in Go."
		},
		{
			"timestamps": {
				"from": "00:29:40,160",
				"to": "00:29:43,240"
			},
			"offsets": {
				"from": 1780160,
				"to": 1783240
			},
			"text": " So what a channel is and goes is essentially like a pipe."
		},
		{
			"timestamps": {
				"from": "00:29:43,240",
				"to": "00:29:46,400"
			},
			"offsets": {
				"from": 1783240,
				"to": 1786400
			},
			"text": " So if I'm sending data from a process to b process,"
		},
		{
			"timestamps": {
				"from": "00:29:46,400",
				"to": "00:29:50,120"
			},
			"offsets": {
				"from": 1786400,
				"to": 1790120
			},
			"text": " I use a pipe, but there's certain issues associated"
		},
		{
			"timestamps": {
				"from": "00:29:50,120",
				"to": "00:29:52,840"
			},
			"offsets": {
				"from": 1790120,
				"to": 1792840
			},
			"text": " with doing this, right?"
		},
		{
			"timestamps": {
				"from": "00:29:52,840",
				"to": "00:29:55,240"
			},
			"offsets": {
				"from": 1792840,
				"to": 1795240
			},
			"text": " So you have to deal with race conditions for one,"
		},
		{
			"timestamps": {
				"from": "00:29:55,240",
				"to": "00:29:56,920"
			},
			"offsets": {
				"from": 1795240,
				"to": 1796920
			},
			"text": " which is a huge headache."
		},
		{
			"timestamps": {
				"from": "00:29:56,920",
				"to": "00:29:59,040"
			},
			"offsets": {
				"from": 1796920,
				"to": 1799040
			},
			"text": " Also, piping can be quite messy."
		},
		{
			"timestamps": {
				"from": "00:29:59,040",
				"to": "00:29:59,920"
			},
			"offsets": {
				"from": 1799040,
				"to": 1799920
			},
			"text": " I don't know how you're doing it,"
		},
		{
			"timestamps": {
				"from": "00:29:59,920",
				"to": "00:30:01,680"
			},
			"offsets": {
				"from": 1799920,
				"to": 1801680
			},
			"text": " but you can do it through a bash script."
		},
		{
			"timestamps": {
				"from": "00:30:01,680",
				"to": "00:30:03,600"
			},
			"offsets": {
				"from": 1801680,
				"to": 1803600
			},
			"text": " It can get pretty weird."
		},
		{
			"timestamps": {
				"from": "00:30:03,600",
				"to": "00:30:07,760"
			},
			"offsets": {
				"from": 1803600,
				"to": 1807760
			},
			"text": " What Go offers is channels and channels are naturally blocking."
		},
		{
			"timestamps": {
				"from": "00:30:07,760",
				"to": "00:30:10,960"
			},
			"offsets": {
				"from": 1807760,
				"to": 1810960
			},
			"text": " So I don't have to worry about message one,"
		},
		{
			"timestamps": {
				"from": "00:30:10,960",
				"to": "00:30:12,680"
			},
			"offsets": {
				"from": 1810960,
				"to": 1812680
			},
			"text": " getting there before message three"
		},
		{
			"timestamps": {
				"from": "00:30:12,680",
				"to": "00:30:15,040"
			},
			"offsets": {
				"from": 1812680,
				"to": 1815040
			},
			"text": " and screwing up all my analysis."
		},
		{
			"timestamps": {
				"from": "00:30:15,040",
				"to": "00:30:17,160"
			},
			"offsets": {
				"from": 1815040,
				"to": 1817160
			},
			"text": " The channel will only send a message across"
		},
		{
			"timestamps": {
				"from": "00:30:17,160",
				"to": "00:30:19,320"
			},
			"offsets": {
				"from": 1817160,
				"to": 1819320
			},
			"text": " to my next process when that process"
		},
		{
			"timestamps": {
				"from": "00:30:19,320",
				"to": "00:30:21,040"
			},
			"offsets": {
				"from": 1819320,
				"to": 1821040
			},
			"text": " is ready to receive the message."
		},
		{
			"timestamps": {
				"from": "00:30:21,040",
				"to": "00:30:24,960"
			},
			"offsets": {
				"from": 1821040,
				"to": 1824960
			},
			"text": " And this for loop here was sort of declaring"
		},
		{
			"timestamps": {
				"from": "00:30:24,960",
				"to": "00:30:27,400"
			},
			"offsets": {
				"from": 1824960,
				"to": 1827400
			},
			"text": " an infinite for loop and using the select statement"
		},
		{
			"timestamps": {
				"from": "00:30:27,400",
				"to": "00:30:29,360"
			},
			"offsets": {
				"from": 1827400,
				"to": 1829360
			},
			"text": " and the select statement is just saying,"
		},
		{
			"timestamps": {
				"from": "00:30:29,360",
				"to": "00:30:33,360"
			},
			"offsets": {
				"from": 1829360,
				"to": 1833360
			},
			"text": " I've created this channel, logs one,"
		},
		{
			"timestamps": {
				"from": "00:30:33,360",
				"to": "00:30:36,400"
			},
			"offsets": {
				"from": 1833360,
				"to": 1836400
			},
			"text": " and I'm waiting continuously until something is sent"
		},
		{
			"timestamps": {
				"from": "00:30:36,400",
				"to": "00:30:40,560"
			},
			"offsets": {
				"from": 1836400,
				"to": 1840560
			},
			"text": " to the channel and the blockchain node"
		},
		{
			"timestamps": {
				"from": "00:30:40,560",
				"to": "00:30:42,440"
			},
			"offsets": {
				"from": 1840560,
				"to": 1842440
			},
			"text": " is sending data to the channel."
		},
		{
			"timestamps": {
				"from": "00:30:42,440",
				"to": "00:30:47,400"
			},
			"offsets": {
				"from": 1842440,
				"to": 1847400
			},
			"text": " And I will pull out that message as soon as it comes"
		},
		{
			"timestamps": {
				"from": "00:30:47,400",
				"to": "00:30:50,480"
			},
			"offsets": {
				"from": 1847400,
				"to": 1850480
			},
			"text": " and select is just saying whichever one comes first."
		},
		{
			"timestamps": {
				"from": "00:30:50,480",
				"to": "00:30:52,520"
			},
			"offsets": {
				"from": 1850480,
				"to": 1852520
			},
			"text": " So if my channel comes back with an error,"
		},
		{
			"timestamps": {
				"from": "00:30:52,520",
				"to": "00:30:55,160"
			},
			"offsets": {
				"from": 1852520,
				"to": 1855160
			},
			"text": " I'll deal with that and crash my program"
		},
		{
			"timestamps": {
				"from": "00:30:55,160",
				"to": "00:30:57,880"
			},
			"offsets": {
				"from": 1855160,
				"to": 1857880
			},
			"text": " or if a log comes first, I'll go and do some process."
		},
		{
			"timestamps": {
				"from": "00:30:57,880",
				"to": "00:31:03,720"
			},
			"offsets": {
				"from": 1857880,
				"to": 1863720
			},
			"text": " Okay, how do I actually process data?"
		},
		{
			"timestamps": {
				"from": "00:31:05,240",
				"to": "00:31:07,640"
			},
			"offsets": {
				"from": 1865240,
				"to": 1867640
			},
			"text": " So when I request data from the blockchain"
		},
		{
			"timestamps": {
				"from": "00:31:07,640",
				"to": "00:31:10,360"
			},
			"offsets": {
				"from": 1867640,
				"to": 1870360
			},
			"text": " and I get logs back, I actually get back"
		},
		{
			"timestamps": {
				"from": "00:31:10,360",
				"to": "00:31:14,440"
			},
			"offsets": {
				"from": 1870360,
				"to": 1874440
			},
			"text": " a pretty messy data structure, not messy,"
		},
		{
			"timestamps": {
				"from": "00:31:14,440",
				"to": "00:31:16,000"
			},
			"offsets": {
				"from": 1874440,
				"to": 1876000
			},
			"text": " but not human readable."
		},
		{
			"timestamps": {
				"from": "00:31:16,000",
				"to": "00:31:18,440"
			},
			"offsets": {
				"from": 1876000,
				"to": 1878440
			},
			"text": " So what I'm gonna get back is logs data structure,"
		},
		{
			"timestamps": {
				"from": "00:31:18,440",
				"to": "00:31:20,160"
			},
			"offsets": {
				"from": 1878440,
				"to": 1880160
			},
			"text": " which we went over earlier."
		},
		{
			"timestamps": {
				"from": "00:31:20,160",
				"to": "00:31:21,560"
			},
			"offsets": {
				"from": 1880160,
				"to": 1881560
			},
			"text": " I'm gonna have these topics"
		},
		{
			"timestamps": {
				"from": "00:31:21,560",
				"to": "00:31:25,000"
			},
			"offsets": {
				"from": 1881560,
				"to": 1885000
			},
			"text": " and I'm gonna have the data field inside the log."
		},
		{
			"timestamps": {
				"from": "00:31:25,000",
				"to": "00:31:26,480"
			},
			"offsets": {
				"from": 1885000,
				"to": 1886480
			},
			"text": " And if I'm pulling the transaction,"
		},
		{
			"timestamps": {
				"from": "00:31:26,480",
				"to": "00:31:28,280"
			},
			"offsets": {
				"from": 1886480,
				"to": 1888280
			},
			"text": " similarly I will have the data field"
		},
		{
			"timestamps": {
				"from": "00:31:28,280",
				"to": "00:31:30,600"
			},
			"offsets": {
				"from": 1888280,
				"to": 1890600
			},
			"text": " within the transaction field,"
		},
		{
			"timestamps": {
				"from": "00:31:30,600",
				"to": "00:31:32,960"
			},
			"offsets": {
				"from": 1890600,
				"to": 1892960
			},
			"text": " which is identical to the sort of log data."
		},
		{
			"timestamps": {
				"from": "00:31:34,400",
				"to": "00:31:38,320"
			},
			"offsets": {
				"from": 1894400,
				"to": 1898320
			},
			"text": " Now, passing this across is pretty complex."
		},
		{
			"timestamps": {
				"from": "00:31:38,320",
				"to": "00:31:43,040"
			},
			"offsets": {
				"from": 1898320,
				"to": 1903040
			},
			"text": " So there's natural pot padding that happens from RLP,"
		},
		{
			"timestamps": {
				"from": "00:31:43,040",
				"to": "00:31:46,200"
			},
			"offsets": {
				"from": 1903040,
				"to": 1906200
			},
			"text": " encoded values, and I also could convert from hex back"
		},
		{
			"timestamps": {
				"from": "00:31:46,200",
				"to": "00:31:48,080"
			},
			"offsets": {
				"from": 1906200,
				"to": 1908080
			},
			"text": " into sort of regular values,"
		},
		{
			"timestamps": {
				"from": "00:31:48,080",
				"to": "00:31:50,000"
			},
			"offsets": {
				"from": 1908080,
				"to": 1910000
			},
			"text": " at least for go to interpret,"
		},
		{
			"timestamps": {
				"from": "00:31:50,000",
				"to": "00:31:53,800"
			},
			"offsets": {
				"from": 1910000,
				"to": 1913800
			},
			"text": " but also so humans can interpret it."
		},
		{
			"timestamps": {
				"from": "00:31:53,800",
				"to": "00:31:56,400"
			},
			"offsets": {
				"from": 1913800,
				"to": 1916400
			},
			"text": " I don't really know what's happening when somebody says,"
		},
		{
			"timestamps": {
				"from": "00:31:56,400",
				"to": "00:32:00,160"
			},
			"offsets": {
				"from": 1916400,
				"to": 1920160
			},
			"text": " oh, the value came back is like zero X, 60 zeros,"
		},
		{
			"timestamps": {
				"from": "00:32:00,160",
				"to": "00:32:01,000"
			},
			"offsets": {
				"from": 1920160,
				"to": 1921000
			},
			"text": " and then a three."
		},
		{
			"timestamps": {
				"from": "00:32:02,560",
				"to": "00:32:05,840"
			},
			"offsets": {
				"from": 1922560,
				"to": 1925840
			},
			"text": " So what we can do instead is we can generate an ABI,"
		},
		{
			"timestamps": {
				"from": "00:32:05,840",
				"to": "00:32:08,120"
			},
			"offsets": {
				"from": 1925840,
				"to": 1928120
			},
			"text": " and this is exactly how Etherscan does it."
		},
		{
			"timestamps": {
				"from": "00:32:08,120",
				"to": "00:32:11,440"
			},
			"offsets": {
				"from": 1928120,
				"to": 1931440
			},
			"text": " And for those not familiar,"
		},
		{
			"timestamps": {
				"from": "00:32:11,440",
				"to": "00:32:14,000"
			},
			"offsets": {
				"from": 1931440,
				"to": 1934000
			},
			"text": " an ABI is a specification of all the functions"
		},
		{
			"timestamps": {
				"from": "00:32:14,000",
				"to": "00:32:18,120"
			},
			"offsets": {
				"from": 1934000,
				"to": 1938120
			},
			"text": " and all the events that happen on a particular contract."
		},
		{
			"timestamps": {
				"from": "00:32:18,120",
				"to": "00:32:21,800"
			},
			"offsets": {
				"from": 1938120,
				"to": 1941800
			},
			"text": " And I can generate this by going to a contract"
		},
		{
			"timestamps": {
				"from": "00:32:21,800",
				"to": "00:32:23,000"
			},
			"offsets": {
				"from": 1941800,
				"to": 1943000
			},
			"text": " and using Solcey."
		},
		{
			"timestamps": {
				"from": "00:32:23,000",
				"to": "00:32:24,560"
			},
			"offsets": {
				"from": 1943000,
				"to": 1944560
			},
			"text": " So that's the command of the top,"
		},
		{
			"timestamps": {
				"from": "00:32:24,560",
				"to": "00:32:29,560"
			},
			"offsets": {
				"from": 1944560,
				"to": 1949560
			},
			"text": " Solcey, ABI, and the name of the file, the path, sorry."
		},
		{
			"timestamps": {
				"from": "00:32:29,840",
				"to": "00:32:33,680"
			},
			"offsets": {
				"from": 1949840,
				"to": 1953680
			},
			"text": " And then I'll get a huge spit out of JSON file."
		},
		{
			"timestamps": {
				"from": "00:32:33,680",
				"to": "00:32:37,000"
			},
			"offsets": {
				"from": 1953680,
				"to": 1957000
			},
			"text": " And we'll use this and define it as a string,"
		},
		{
			"timestamps": {
				"from": "00:32:37,000",
				"to": "00:32:38,880"
			},
			"offsets": {
				"from": 1957000,
				"to": 1958880
			},
			"text": " and we'll use it further along,"
		},
		{
			"timestamps": {
				"from": "00:32:38,880",
				"to": "00:32:40,840"
			},
			"offsets": {
				"from": 1958880,
				"to": 1960840
			},
			"text": " but the ABI is highly useful,"
		},
		{
			"timestamps": {
				"from": "00:32:40,840",
				"to": "00:32:43,560"
			},
			"offsets": {
				"from": 1960840,
				"to": 1963560
			},
			"text": " but something to note is that it does not directly appear"
		},
		{
			"timestamps": {
				"from": "00:32:43,560",
				"to": "00:32:44,400"
			},
			"offsets": {
				"from": 1963560,
				"to": 1964400
			},
			"text": " on chain."
		},
		{
			"timestamps": {
				"from": "00:32:44,400",
				"to": "00:32:50,600"
			},
			"offsets": {
				"from": 1964400,
				"to": 1970600
			},
			"text": " On chain is only sort of the compiled like bytecode."
		},
		{
			"timestamps": {
				"from": "00:32:50,600",
				"to": "00:32:53,800"
			},
			"offsets": {
				"from": 1970600,
				"to": 1973800
			},
			"text": " So the ABI, you have to get by having access"
		},
		{
			"timestamps": {
				"from": "00:32:53,800",
				"to": "00:32:54,720"
			},
			"offsets": {
				"from": 1973800,
				"to": 1974720
			},
			"text": " to the source code,"
		},
		{
			"timestamps": {
				"from": "00:32:54,720",
				"to": "00:32:57,120"
			},
			"offsets": {
				"from": 1974720,
				"to": 1977120
			},
			"text": " or sometimes people upload it to Etherscan."
		},
		{
			"timestamps": {
				"from": "00:32:58,840",
				"to": "00:33:02,280"
			},
			"offsets": {
				"from": 1978840,
				"to": 1982280
			},
			"text": " And what the ABI allows us to do is the ABI knows,"
		},
		{
			"timestamps": {
				"from": "00:33:02,280",
				"to": "00:33:04,040"
			},
			"offsets": {
				"from": 1982280,
				"to": 1984040
			},
			"text": " as I described before, with the CAC,"
		},
		{
			"timestamps": {
				"from": "00:33:04,040",
				"to": "00:33:06,600"
			},
			"offsets": {
				"from": 1984040,
				"to": 1986600
			},
			"text": " it knows all the input types for all the functions"
		},
		{
			"timestamps": {
				"from": "00:33:06,600",
				"to": "00:33:09,560"
			},
			"offsets": {
				"from": 1986600,
				"to": 1989560
			},
			"text": " and all the events that are defined within that contract."
		},
		{
			"timestamps": {
				"from": "00:33:09,560",
				"to": "00:33:11,880"
			},
			"offsets": {
				"from": 1989560,
				"to": 1991880
			},
			"text": " So now I can use the EVM to,"
		},
		{
			"timestamps": {
				"from": "00:33:11,880",
				"to": "00:33:15,120"
			},
			"offsets": {
				"from": 1991880,
				"to": 1995120
			},
			"text": " ooh, sorry."
		},
		{
			"timestamps": {
				"from": "00:33:15,120",
				"to": "00:33:18,720"
			},
			"offsets": {
				"from": 1995120,
				"to": 1998720
			},
			"text": " It's pointing down."
		},
		{
			"timestamps": {
				"from": "00:33:18,720",
				"to": "00:33:25,840"
			},
			"offsets": {
				"from": 1998720,
				"to": 2005840
			},
			"text": " Should come back up in a moment."
		},
		{
			"timestamps": {
				"from": "00:33:25,840",
				"to": "00:33:28,680"
			},
			"offsets": {
				"from": 2005840,
				"to": 2008680
			},
			"text": " Okay, oh, it is back."
		},
		{
			"timestamps": {
				"from": "00:33:28,680",
				"to": "00:33:29,880"
			},
			"offsets": {
				"from": 2008680,
				"to": 2009880
			},
			"text": " Fantastic."
		},
		{
			"timestamps": {
				"from": "00:33:29,880",
				"to": "00:33:32,600"
			},
			"offsets": {
				"from": 2009880,
				"to": 2012600
			},
			"text": " So I can use this ABI and use the EVM"
		},
		{
			"timestamps": {
				"from": "00:33:32,600",
				"to": "00:33:34,800"
			},
			"offsets": {
				"from": 2012600,
				"to": 2014800
			},
			"text": " to decompile all of this hex data"
		},
		{
			"timestamps": {
				"from": "00:33:34,800",
				"to": "00:33:38,000"
			},
			"offsets": {
				"from": 2014800,
				"to": 2018000
			},
			"text": " that I'm gonna get blurted out back into regular data types."
		},
		{
			"timestamps": {
				"from": "00:33:38,000",
				"to": "00:33:45,760"
			},
			"offsets": {
				"from": 2018000,
				"to": 2025760
			},
			"text": " So creating an ABI object similar to the JavaScript concept,"
		},
		{
			"timestamps": {
				"from": "00:33:45,760",
				"to": "00:33:48,400"
			},
			"offsets": {
				"from": 2025760,
				"to": 2028400
			},
			"text": " but I'm gonna call this ABI function,"
		},
		{
			"timestamps": {
				"from": "00:33:48,400",
				"to": "00:33:50,520"
			},
			"offsets": {
				"from": 2028400,
				"to": 2030520
			},
			"text": " which is also a ABI library, sorry,"
		},
		{
			"timestamps": {
				"from": "00:33:50,520",
				"to": "00:33:54,440"
			},
			"offsets": {
				"from": 2030520,
				"to": 2034440
			},
			"text": " that's also part of the GIF module."
		},
		{
			"timestamps": {
				"from": "00:33:54,440",
				"to": "00:33:56,560"
			},
			"offsets": {
				"from": 2034440,
				"to": 2036560
			},
			"text": " And I'm going to pass in the ABI string"
		},
		{
			"timestamps": {
				"from": "00:33:56,560",
				"to": "00:33:58,160"
			},
			"offsets": {
				"from": 2036560,
				"to": 2038160
			},
			"text": " that I defined previously."
		},
		{
			"timestamps": {
				"from": "00:33:58,160",
				"to": "00:34:00,560"
			},
			"offsets": {
				"from": 2038160,
				"to": 2040560
			},
			"text": " I'm gonna check that it is, in fact, a valid string,"
		},
		{
			"timestamps": {
				"from": "00:34:00,560",
				"to": "00:34:01,920"
			},
			"offsets": {
				"from": 2040560,
				"to": 2041920
			},
			"text": " which is important,"
		},
		{
			"timestamps": {
				"from": "00:34:01,920",
				"to": "00:34:04,240"
			},
			"offsets": {
				"from": 2041920,
				"to": 2044240
			},
			"text": " and then I can start unpacking data."
		},
		{
			"timestamps": {
				"from": "00:34:04,240",
				"to": "00:34:07,920"
			},
			"offsets": {
				"from": 2044240,
				"to": 2047920
			},
			"text": " And that's that second sort of code block in there."
		},
		{
			"timestamps": {
				"from": "00:34:07,920",
				"to": "00:34:10,440"
			},
			"offsets": {
				"from": 2047920,
				"to": 2050440
			},
			"text": " I call my object, I tell it to unpack,"
		},
		{
			"timestamps": {
				"from": "00:34:10,440",
				"to": "00:34:13,480"
			},
			"offsets": {
				"from": 2050440,
				"to": 2053480
			},
			"text": " I pass it in a string, which is the name of my function,"
		},
		{
			"timestamps": {
				"from": "00:34:13,480",
				"to": "00:34:15,400"
			},
			"offsets": {
				"from": 2053480,
				"to": 2055400
			},
			"text": " and then I pass in my data."
		},
		{
			"timestamps": {
				"from": "00:34:15,400",
				"to": "00:34:18,840"
			},
			"offsets": {
				"from": 2055400,
				"to": 2058840
			},
			"text": " And what it's gonna spit out is a huge array of interfaces."
		},
		{
			"timestamps": {
				"from": "00:34:18,840",
				"to": "00:34:21,440"
			},
			"offsets": {
				"from": 2058840,
				"to": 2061440
			},
			"text": " And interfaces are just generics and go."
		},
		{
			"timestamps": {
				"from": "00:34:21,440",
				"to": "00:34:24,120"
			},
			"offsets": {
				"from": 2061440,
				"to": 2064120
			},
			"text": " So it's data that I don't know the type of,"
		},
		{
			"timestamps": {
				"from": "00:34:24,120",
				"to": "00:34:28,200"
			},
			"offsets": {
				"from": 2064120,
				"to": 2068200
			},
			"text": " and I have to just tell go which data type that is."
		},
		{
			"timestamps": {
				"from": "00:34:28,200",
				"to": "00:34:30,960"
			},
			"offsets": {
				"from": 2068200,
				"to": 2070960
			},
			"text": " And I can find that out by looking at the smart contract code,"
		},
		{
			"timestamps": {
				"from": "00:34:30,960",
				"to": "00:34:33,360"
			},
			"offsets": {
				"from": 2070960,
				"to": 2073360
			},
			"text": " I can find that out by looking at the ABI."
		},
		{
			"timestamps": {
				"from": "00:34:33,360",
				"to": "00:34:35,120"
			},
			"offsets": {
				"from": 2073360,
				"to": 2075120
			},
			"text": " And even if I make a mistake here,"
		},
		{
			"timestamps": {
				"from": "00:34:35,120",
				"to": "00:34:36,840"
			},
			"offsets": {
				"from": 2075120,
				"to": 2076840
			},
			"text": " go will tell me that I made a mistake."
		},
		{
			"timestamps": {
				"from": "00:34:36,840",
				"to": "00:34:39,840"
			},
			"offsets": {
				"from": 2076840,
				"to": 2079840
			},
			"text": " If I try to assert wrongly that it enters a string,"
		},
		{
			"timestamps": {
				"from": "00:34:39,840",
				"to": "00:34:43,040"
			},
			"offsets": {
				"from": 2079840,
				"to": 2083040
			},
			"text": " go will tell me, oh, actually,"
		},
		{
			"timestamps": {
				"from": "00:34:43,040",
				"to": "00:34:45,200"
			},
			"offsets": {
				"from": 2083040,
				"to": 2085200
			},
			"text": " you wanna type assert to a string."
		},
		{
			"timestamps": {
				"from": "00:34:45,200",
				"to": "00:34:49,120"
			},
			"offsets": {
				"from": 2085200,
				"to": 2089120
			},
			"text": " I don't know why I can't just do it automatically,"
		},
		{
			"timestamps": {
				"from": "00:34:49,120",
				"to": "00:34:53,120"
			},
			"offsets": {
				"from": 2089120,
				"to": 2093120
			},
			"text": " but life can't be that easy."
		},
		{
			"timestamps": {
				"from": "00:34:53,960",
				"to": "00:34:57,720"
			},
			"offsets": {
				"from": 2093960,
				"to": 2097720
			},
			"text": " Okay, working with the database."
		},
		{
			"timestamps": {
				"from": "00:34:57,720",
				"to": "00:35:00,600"
			},
			"offsets": {
				"from": 2097720,
				"to": 2100600
			},
			"text": " Okay, so now essentially what we've constructed"
		},
		{
			"timestamps": {
				"from": "00:35:00,600",
				"to": "00:35:04,640"
			},
			"offsets": {
				"from": 2100600,
				"to": 2104640
			},
			"text": " is we have a system that's requesting data from the node,"
		},
		{
			"timestamps": {
				"from": "00:35:04,640",
				"to": "00:35:08,800"
			},
			"offsets": {
				"from": 2104640,
				"to": 2108800
			},
			"text": " either live or through a historical query."
		},
		{
			"timestamps": {
				"from": "00:35:08,800",
				"to": "00:35:10,040"
			},
			"offsets": {
				"from": 2108800,
				"to": 2110040
			},
			"text": " I've collected that data,"
		},
		{
			"timestamps": {
				"from": "00:35:10,040",
				"to": "00:35:12,480"
			},
			"offsets": {
				"from": 2110040,
				"to": 2112480
			},
			"text": " I now have a method to unpack that data"
		},
		{
			"timestamps": {
				"from": "00:35:12,480",
				"to": "00:35:14,320"
			},
			"offsets": {
				"from": 2112480,
				"to": 2114320
			},
			"text": " into regularly go data types,"
		},
		{
			"timestamps": {
				"from": "00:35:14,320",
				"to": "00:35:17,040"
			},
			"offsets": {
				"from": 2114320,
				"to": 2117040
			},
			"text": " and I can convert between them as I wish."
		},
		{
			"timestamps": {
				"from": "00:35:17,040",
				"to": "00:35:19,640"
			},
			"offsets": {
				"from": 2117040,
				"to": 2119640
			},
			"text": " Now I want to insert that data somewhere."
		},
		{
			"timestamps": {
				"from": "00:35:19,640",
				"to": "00:35:23,880"
			},
			"offsets": {
				"from": 2119640,
				"to": 2123880
			},
			"text": " So this is a pretty standard way of just interacting"
		},
		{
			"timestamps": {
				"from": "00:35:23,880",
				"to": "00:35:27,360"
			},
			"offsets": {
				"from": 2123880,
				"to": 2127360
			},
			"text": " with a database and go, completely faultproof."
		},
		{
			"timestamps": {
				"from": "00:35:27,360",
				"to": "00:35:32,440"
			},
			"offsets": {
				"from": 2127360,
				"to": 2132440
			},
			"text": " And it's using a library called GOM, so go RM."
		},
		{
			"timestamps": {
				"from": "00:35:32,440",
				"to": "00:35:36,280"
			},
			"offsets": {
				"from": 2132440,
				"to": 2136280
			},
			"text": " It's used to be sponsored by Chainlink actually as well."
		},
		{
			"timestamps": {
				"from": "00:35:36,280",
				"to": "00:35:39,400"
			},
			"offsets": {
				"from": 2136280,
				"to": 2139400
			},
			"text": " Pretty fantastic library, highly recommended."
		},
		{
			"timestamps": {
				"from": "00:35:39,400",
				"to": "00:35:41,600"
			},
			"offsets": {
				"from": 2139400,
				"to": 2141600
			},
			"text": " So it's very easy for what I have to do."
		},
		{
			"timestamps": {
				"from": "00:35:41,600",
				"to": "00:35:45,200"
			},
			"offsets": {
				"from": 2141600,
				"to": 2145200
			},
			"text": " I just define a struct which has what I want my table"
		},
		{
			"timestamps": {
				"from": "00:35:45,200",
				"to": "00:35:46,280"
			},
			"offsets": {
				"from": 2145200,
				"to": 2146280
			},
			"text": " to look like."
		},
		{
			"timestamps": {
				"from": "00:35:46,280",
				"to": "00:35:49,280"
			},
			"offsets": {
				"from": 2146280,
				"to": 2149280
			},
			"text": " I throw on some strings where I want my primary keys"
		},
		{
			"timestamps": {
				"from": "00:35:49,280",
				"to": "00:35:51,800"
			},
			"offsets": {
				"from": 2149280,
				"to": 2151800
			},
			"text": " or foreign keys or indexes."
		},
		{
			"timestamps": {
				"from": "00:35:51,800",
				"to": "00:35:54,640"
			},
			"offsets": {
				"from": 2151800,
				"to": 2154640
			},
			"text": " And I'll just leave that in the module by itself."
		},
		{
			"timestamps": {
				"from": "00:35:54,640",
				"to": "00:35:59,160"
			},
			"offsets": {
				"from": 2154640,
				"to": 2159160
			},
			"text": " And then what I'll do is I'll initiate a connection"
		},
		{
			"timestamps": {
				"from": "00:35:59,160",
				"to": "00:36:02,240"
			},
			"offsets": {
				"from": 2159160,
				"to": 2162240
			},
			"text": " to my database and it's also just this one line code."
		},
		{
			"timestamps": {
				"from": "00:36:02,240",
				"to": "00:36:03,960"
			},
			"offsets": {
				"from": 2162240,
				"to": 2163960
			},
			"text": " So I just tell it to open."
		},
		{
			"timestamps": {
				"from": "00:36:03,960",
				"to": "00:36:05,600"
			},
			"offsets": {
				"from": 2163960,
				"to": 2165600
			},
			"text": " I have Postgres listed here,"
		},
		{
			"timestamps": {
				"from": "00:36:05,600",
				"to": "00:36:07,920"
			},
			"offsets": {
				"from": 2165600,
				"to": 2167920
			},
			"text": " but it has support for most popular"
		},
		{
			"timestamps": {
				"from": "00:36:07,920",
				"to": "00:36:11,160"
			},
			"offsets": {
				"from": 2167920,
				"to": 2171160
			},
			"text": " database management systems."
		},
		{
			"timestamps": {
				"from": "00:36:11,160",
				"to": "00:36:15,040"
			},
			"offsets": {
				"from": 2171160,
				"to": 2175040
			},
			"text": " And a GOM config which you can specify different things in,"
		},
		{
			"timestamps": {
				"from": "00:36:15,040",
				"to": "00:36:16,480"
			},
			"offsets": {
				"from": 2175040,
				"to": 2176480
			},
			"text": " but we can just leave it blank."
		},
		{
			"timestamps": {
				"from": "00:36:16,480",
				"to": "00:36:18,200"
			},
			"offsets": {
				"from": 2176480,
				"to": 2178200
			},
			"text": " If you're not doing something fancy,"
		},
		{
			"timestamps": {
				"from": "00:36:18,200",
				"to": "00:36:20,000"
			},
			"offsets": {
				"from": 2178200,
				"to": 2180000
			},
			"text": " you can pretty much leave it alone."
		},
		{
			"timestamps": {
				"from": "00:36:20,000",
				"to": "00:36:23,360"
			},
			"offsets": {
				"from": 2180000,
				"to": 2183360
			},
			"text": " I do some error checking and then I've got migrations."
		},
		{
			"timestamps": {
				"from": "00:36:23,360",
				"to": "00:36:26,840"
			},
			"offsets": {
				"from": 2183360,
				"to": 2186840
			},
			"text": " For those unfamiliar, migrations are fantastic."
		},
		{
			"timestamps": {
				"from": "00:36:26,840",
				"to": "00:36:28,520"
			},
			"offsets": {
				"from": 2186840,
				"to": 2188520
			},
			"text": " If you've worked for a production system"
		},
		{
			"timestamps": {
				"from": "00:36:28,520",
				"to": "00:36:30,480"
			},
			"offsets": {
				"from": 2188520,
				"to": 2190480
			},
			"text": " and you've wanted to change this in your database"
		},
		{
			"timestamps": {
				"from": "00:36:30,480",
				"to": "00:36:32,560"
			},
			"offsets": {
				"from": 2190480,
				"to": 2192560
			},
			"text": " and you basically it's like a nuclear reactor,"
		},
		{
			"timestamps": {
				"from": "00:36:32,560",
				"to": "00:36:35,000"
			},
			"offsets": {
				"from": 2192560,
				"to": 2195000
			},
			"text": " like two people have to turn their keys at the same time"
		},
		{
			"timestamps": {
				"from": "00:36:35,000",
				"to": "00:36:38,440"
			},
			"offsets": {
				"from": 2195000,
				"to": 2198440
			},
			"text": " to edit a table, migration sort of sidestep that."
		},
		{
			"timestamps": {
				"from": "00:36:38,440",
				"to": "00:36:42,640"
			},
			"offsets": {
				"from": 2198440,
				"to": 2202640
			},
			"text": " What GOM will do is I can pass in my structs"
		},
		{
			"timestamps": {
				"from": "00:36:42,640",
				"to": "00:36:45,080"
			},
			"offsets": {
				"from": 2202640,
				"to": 2205080
			},
			"text": " that I defined before and it'll automatically create"
		},
		{
			"timestamps": {
				"from": "00:36:45,080",
				"to": "00:36:47,120"
			},
			"offsets": {
				"from": 2205080,
				"to": 2207120
			},
			"text": " or edit the tables that I already have."
		},
		{
			"timestamps": {
				"from": "00:36:47,960",
				"to": "00:36:50,840"
			},
			"offsets": {
				"from": 2207960,
				"to": 2210840
			},
			"text": " So that way the code that I have"
		},
		{
			"timestamps": {
				"from": "00:36:50,840",
				"to": "00:36:53,800"
			},
			"offsets": {
				"from": 2210840,
				"to": 2213800
			},
			"text": " is gonna be exactly represented in my database."
		},
		{
			"timestamps": {
				"from": "00:36:53,800",
				"to": "00:36:57,680"
			},
			"offsets": {
				"from": 2213800,
				"to": 2217680
			},
			"text": " Inserting."
		},
		{
			"timestamps": {
				"from": "00:36:57,680",
				"to": "00:37:00,120"
			},
			"offsets": {
				"from": 2217680,
				"to": 2220120
			},
			"text": " So we're pretty much like done here guys."
		},
		{
			"timestamps": {
				"from": "00:37:00,120",
				"to": "00:37:03,000"
			},
			"offsets": {
				"from": 2220120,
				"to": 2223000
			},
			"text": " All I have to do now is use the structs"
		},
		{
			"timestamps": {
				"from": "00:37:03,000",
				"to": "00:37:06,880"
			},
			"offsets": {
				"from": 2223000,
				"to": 2226880
			},
			"text": " that I previously defired, pass in my decoded values."
		},
		{
			"timestamps": {
				"from": "00:37:06,880",
				"to": "00:37:08,640"
			},
			"offsets": {
				"from": 2226880,
				"to": 2228640
			},
			"text": " And then I just have this one line"
		},
		{
			"timestamps": {
				"from": "00:37:08,640",
				"to": "00:37:12,200"
			},
			"offsets": {
				"from": 2228640,
				"to": 2232200
			},
			"text": " insert or update on conflict."
		},
		{
			"timestamps": {
				"from": "00:37:12,200",
				"to": "00:37:15,240"
			},
			"offsets": {
				"from": 2232200,
				"to": 2235240
			},
			"text": " So what this essentially doing is I'm sending a message"
		},
		{
			"timestamps": {
				"from": "00:37:15,240",
				"to": "00:37:18,360"
			},
			"offsets": {
				"from": 2235240,
				"to": 2238360
			},
			"text": " and it'll be acid depending on your database of choice,"
		},
		{
			"timestamps": {
				"from": "00:37:18,360",
				"to": "00:37:23,360"
			},
			"offsets": {
				"from": 2238360,
				"to": 2243360
			},
			"text": " I guess, out to the database and I'm telling it, okay,"
		},
		{
			"timestamps": {
				"from": "00:37:23,360",
				"to": "00:37:28,120"
			},
			"offsets": {
				"from": 2243360,
				"to": 2248120
			},
			"text": " if there's no entry inserted, if there is updated."
		},
		{
			"timestamps": {
				"from": "00:37:28,120",
				"to": "00:37:31,000"
			},
			"offsets": {
				"from": 2248120,
				"to": 2251000
			},
			"text": " And updating actually absolutely can happen."
		},
		{
			"timestamps": {
				"from": "00:37:31,000",
				"to": "00:37:33,040"
			},
			"offsets": {
				"from": 2251000,
				"to": 2253040
			},
			"text": " Although the blockchain is immutable,"
		},
		{
			"timestamps": {
				"from": "00:37:33,040",
				"to": "00:37:35,840"
			},
			"offsets": {
				"from": 2253040,
				"to": 2255840
			},
			"text": " remember that the node is getting new data all the time."
		},
		{
			"timestamps": {
				"from": "00:37:35,840",
				"to": "00:37:37,360"
			},
			"offsets": {
				"from": 2255840,
				"to": 2257360
			},
			"text": " Reorgs do happen."
		},
		{
			"timestamps": {
				"from": "00:37:37,360",
				"to": "00:37:38,960"
			},
			"offsets": {
				"from": 2257360,
				"to": 2258960
			},
			"text": " So something you wanna watch out for"
		},
		{
			"timestamps": {
				"from": "00:37:38,960",
				"to": "00:37:43,080"
			},
			"offsets": {
				"from": 2258960,
				"to": 2263080
			},
			"text": " is your block hash changing and also your block timestamp."
		},
		{
			"timestamps": {
				"from": "00:37:43,920",
				"to": "00:37:48,760"
			},
			"offsets": {
				"from": 2263920,
				"to": 2268760
			},
			"text": " Um, profile IDB, oh, sorry, we just have like type assertion here."
		},
		{
			"timestamps": {
				"from": "00:37:48,760",
				"to": "00:37:51,400"
			},
			"offsets": {
				"from": 2268760,
				"to": 2271400
			},
			"text": " So you can sort of see how these are getting passed back"
		},
		{
			"timestamps": {
				"from": "00:37:51,400",
				"to": "00:37:52,560"
			},
			"offsets": {
				"from": 2271400,
				"to": 2272560
			},
			"text": " into the struct."
		},
		{
			"timestamps": {
				"from": "00:37:52,560",
				"to": "00:37:56,480"
			},
			"offsets": {
				"from": 2272560,
				"to": 2276480
			},
			"text": " So I have my profile ID and this is an example"
		},
		{
			"timestamps": {
				"from": "00:37:56,480",
				"to": "00:37:58,680"
			},
			"offsets": {
				"from": 2276480,
				"to": 2278680
			},
			"text": " that I did based off lens."
		},
		{
			"timestamps": {
				"from": "00:37:58,680",
				"to": "00:38:00,760"
			},
			"offsets": {
				"from": 2278680,
				"to": 2280760
			},
			"text": " So profile ID and lens is an integer"
		},
		{
			"timestamps": {
				"from": "00:38:00,760",
				"to": "00:38:05,000"
			},
			"offsets": {
				"from": 2280760,
				"to": 2285000
			},
			"text": " which represents your user on lens."
		},
		{
			"timestamps": {
				"from": "00:38:05,000",
				"to": "00:38:08,600"
			},
			"offsets": {
				"from": 2285000,
				"to": 2288600
			},
			"text": " And then also NFT, which is an NFT that's generated on lens"
		},
		{
			"timestamps": {
				"from": "00:38:08,600",
				"to": "00:38:10,280"
			},
			"offsets": {
				"from": 2288600,
				"to": 2290280
			},
			"text": " whenever you follow somebody."
		},
		{
			"timestamps": {
				"from": "00:38:10,280",
				"to": "00:38:12,240"
			},
			"offsets": {
				"from": 2290280,
				"to": 2292240
			},
			"text": " And I just pass these into that struct."
		},
		{
			"timestamps": {
				"from": "00:38:12,240",
				"to": "00:38:17,040"
			},
			"offsets": {
				"from": 2292240,
				"to": 2297040
			},
			"text": " I'm calling my, sorry, database,"
		},
		{
			"timestamps": {
				"from": "00:38:17,040",
				"to": "00:38:20,000"
			},
			"offsets": {
				"from": 2297040,
				"to": 2300000
			},
			"text": " our closes update function and I'm passing in"
		},
		{
			"timestamps": {
				"from": "00:38:20,000",
				"to": "00:38:22,240"
			},
			"offsets": {
				"from": 2300000,
				"to": 2302240
			},
			"text": " a pointer to the struct."
		},
		{
			"timestamps": {
				"from": "00:38:22,240",
				"to": "00:38:27,240"
			},
			"offsets": {
				"from": 2302240,
				"to": 2307240
			},
			"text": " Okay, so that's basically it."
		},
		{
			"timestamps": {
				"from": "00:38:27,240",
				"to": "00:38:30,320"
			},
			"offsets": {
				"from": 2307240,
				"to": 2310320
			},
			"text": " I can go through some like actual examples as well,"
		},
		{
			"timestamps": {
				"from": "00:38:30,320",
				"to": "00:38:32,440"
			},
			"offsets": {
				"from": 2310320,
				"to": 2312440
			},
			"text": " but I just wanted to do a Q and A."
		},
		{
			"timestamps": {
				"from": "00:38:32,440",
				"to": "00:38:34,560"
			},
			"offsets": {
				"from": 2312440,
				"to": 2314560
			},
			"text": " Actually, how much time do I have left?"
		},
		{
			"timestamps": {
				"from": "00:38:34,560",
				"to": "00:38:36,040"
			},
			"offsets": {
				"from": 2314560,
				"to": 2316040
			},
			"text": " About plenty of time."
		},
		{
			"timestamps": {
				"from": "00:38:36,040",
				"to": "00:38:36,880"
			},
			"offsets": {
				"from": 2316040,
				"to": 2316880
			},
			"text": " Yeah."
		},
		{
			"timestamps": {
				"from": "00:38:36,880",
				"to": "00:38:39,220"
			},
			"offsets": {
				"from": 2316880,
				"to": 2319220
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:38:39,380",
				"to": "00:38:41,540"
			},
			"offsets": {
				"from": 2319380,
				"to": 2321540
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:38:41,540",
				"to": "00:38:46,220"
			},
			"offsets": {
				"from": 2321540,
				"to": 2326220
			},
			"text": " Oh, okay."
		},
		{
			"timestamps": {
				"from": "00:38:46,220",
				"to": "00:38:49,060"
			},
			"offsets": {
				"from": 2326220,
				"to": 2329060
			},
			"text": " So, yeah, IP 1967 basically says,"
		},
		{
			"timestamps": {
				"from": "00:38:49,060",
				"to": "00:38:51,940"
			},
			"offsets": {
				"from": 2329060,
				"to": 2331940
			},
			"text": " it's a proxy pattern."
		},
		{
			"timestamps": {
				"from": "00:38:51,940",
				"to": "00:38:55,100"
			},
			"offsets": {
				"from": 2331940,
				"to": 2335100
			},
			"text": " So say I want to make changes to a smart contract."
		},
		{
			"timestamps": {
				"from": "00:38:55,100",
				"to": "00:38:56,700"
			},
			"offsets": {
				"from": 2335100,
				"to": 2336700
			},
			"text": " You obviously can't really do that."
		},
		{
			"timestamps": {
				"from": "00:38:56,700",
				"to": "00:38:58,520"
			},
			"offsets": {
				"from": 2336700,
				"to": 2338520
			},
			"text": " So what I can do is I can define"
		},
		{
			"timestamps": {
				"from": "00:38:58,520",
				"to": "00:39:03,580"
			},
			"offsets": {
				"from": 2338520,
				"to": 2343580
			},
			"text": " the IP 1967 contract and tell it,"
		},
		{
			"timestamps": {
				"from": "00:39:03,580",
				"to": "00:39:06,860"
			},
			"offsets": {
				"from": 2343580,
				"to": 2346860
			},
			"text": " do all the functions of another smart contract."
		},
		{
			"timestamps": {
				"from": "00:39:06,860",
				"to": "00:39:10,300"
			},
			"offsets": {
				"from": 2346860,
				"to": 2350300
			},
			"text": " And I can change which smart contract is,"
		},
		{
			"timestamps": {
				"from": "00:39:10,300",
				"to": "00:39:12,460"
			},
			"offsets": {
				"from": 2350300,
				"to": 2352460
			},
			"text": " which smart contract logic is actually being changed"
		},
		{
			"timestamps": {
				"from": "00:39:12,460",
				"to": "00:39:14,740"
			},
			"offsets": {
				"from": 2352460,
				"to": 2354740
			},
			"text": " by just changing that variable."
		},
		{
			"timestamps": {
				"from": "00:39:14,740",
				"to": "00:39:17,500"
			},
			"offsets": {
				"from": 2354740,
				"to": 2357500
			},
			"text": " But the problem is, is that there's no like view function"
		},
		{
			"timestamps": {
				"from": "00:39:17,500",
				"to": "00:39:22,500"
			},
			"offsets": {
				"from": 2357500,
				"to": 2362500
			},
			"text": " for the contract address that's on that 1967 contract."
		},
		{
			"timestamps": {
				"from": "00:39:22,500",
				"to": "00:39:27,460"
			},
			"offsets": {
				"from": 2362500,
				"to": 2367460
			},
			"text": " But the storage slot where that address is stored"
		},
		{
			"timestamps": {
				"from": "00:39:27,460",
				"to": "00:39:32,180"
			},
			"offsets": {
				"from": 2367460,
				"to": 2372180
			},
			"text": " is always the same across any IP 1967 contract."
		},
		{
			"timestamps": {
				"from": "00:39:32,180",
				"to": "00:39:34,100"
			},
			"offsets": {
				"from": 2372180,
				"to": 2374100
			},
			"text": " So I can retrieve this address"
		},
		{
			"timestamps": {
				"from": "00:39:34,100",
				"to": "00:39:35,900"
			},
			"offsets": {
				"from": 2374100,
				"to": 2375900
			},
			"text": " and then I can query that contract"
		},
		{
			"timestamps": {
				"from": "00:39:35,900",
				"to": "00:39:37,820"
			},
			"offsets": {
				"from": 2375900,
				"to": 2377820
			},
			"text": " for any information that I want."
		},
		{
			"timestamps": {
				"from": "00:39:37,820",
				"to": "00:39:39,620"
			},
			"offsets": {
				"from": 2377820,
				"to": 2379620
			},
			"text": " Does that help?"
		},
		{
			"timestamps": {
				"from": "00:39:39,620",
				"to": "00:39:41,100"
			},
			"offsets": {
				"from": 2379620,
				"to": 2381100
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "00:39:41,100",
				"to": "00:39:41,940"
			},
			"offsets": {
				"from": 2381100,
				"to": 2381940
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:39:41,940",
				"to": "00:39:47,860"
			},
			"offsets": {
				"from": 2381940,
				"to": 2387860
			},
			"text": " Yes, I will, I wanted to clean up a bit,"
		},
		{
			"timestamps": {
				"from": "00:39:47,860",
				"to": "00:39:52,380"
			},
			"offsets": {
				"from": 2387860,
				"to": 2392380
			},
			"text": " but it's on, it's submitted within the ETH hackathon."
		},
		{
			"timestamps": {
				"from": "00:39:52,380",
				"to": "00:39:55,740"
			},
			"offsets": {
				"from": 2392380,
				"to": 2395740
			},
			"text": " I can send a link out if I'll send it out on my Twitter,"
		},
		{
			"timestamps": {
				"from": "00:39:55,740",
				"to": "00:39:56,580"
			},
			"offsets": {
				"from": 2395740,
				"to": 2396580
			},
			"text": " which is at the end."
		},
		{
			"timestamps": {
				"from": "00:39:56,580",
				"to": "00:40:00,120"
			},
			"offsets": {
				"from": 2396580,
				"to": 2400120
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:40:01,000",
				"to": "00:40:03,080"
			},
			"offsets": {
				"from": 2401000,
				"to": 2403080
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:40:03,080",
				"to": "00:40:08,120"
			},
			"offsets": {
				"from": 2403080,
				"to": 2408120
			},
			"text": " Yeah, I'll just repeat the question."
		},
		{
			"timestamps": {
				"from": "00:40:08,120",
				"to": "00:40:11,120"
			},
			"offsets": {
				"from": 2408120,
				"to": 2411120
			},
			"text": " But the question is, how many block confirmations"
		},
		{
			"timestamps": {
				"from": "00:40:11,120",
				"to": "00:40:13,600"
			},
			"offsets": {
				"from": 2411120,
				"to": 2413600
			},
			"text": " do you wait before inserting the data into the database"
		},
		{
			"timestamps": {
				"from": "00:40:13,600",
				"to": "00:40:15,480"
			},
			"offsets": {
				"from": 2413600,
				"to": 2415480
			},
			"text": " or how do you deal with updates?"
		},
		{
			"timestamps": {
				"from": "00:40:15,480",
				"to": "00:40:17,720"
			},
			"offsets": {
				"from": 2415480,
				"to": 2417720
			},
			"text": " So the great thing about the system"
		},
		{
			"timestamps": {
				"from": "00:40:17,720",
				"to": "00:40:19,800"
			},
			"offsets": {
				"from": 2417720,
				"to": 2419800
			},
			"text": " is that you don't have to wait at all."
		},
		{
			"timestamps": {
				"from": "00:40:19,800",
				"to": "00:40:22,640"
			},
			"offsets": {
				"from": 2419800,
				"to": 2422640
			},
			"text": " Every time there's a new reorganization,"
		},
		{
			"timestamps": {
				"from": "00:40:22,640",
				"to": "00:40:25,680"
			},
			"offsets": {
				"from": 2422640,
				"to": 2425680
			},
			"text": " the logs will be like re put through the node"
		},
		{
			"timestamps": {
				"from": "00:40:25,680",
				"to": "00:40:29,920"
			},
			"offsets": {
				"from": 2425680,
				"to": 2429920
			},
			"text": " and then the indexer will automatically update"
		},
		{
			"timestamps": {
				"from": "00:40:29,920",
				"to": "00:40:31,600"
			},
			"offsets": {
				"from": 2429920,
				"to": 2431600
			},
			"text": " that column for you."
		},
		{
			"timestamps": {
				"from": "00:40:31,600",
				"to": "00:40:33,520"
			},
			"offsets": {
				"from": 2431600,
				"to": 2433520
			},
			"text": " So the data you have in your database"
		},
		{
			"timestamps": {
				"from": "00:40:33,520",
				"to": "00:40:36,240"
			},
			"offsets": {
				"from": 2433520,
				"to": 2436240
			},
			"text": " will always be the most accurate that it can be"
		},
		{
			"timestamps": {
				"from": "00:40:36,240",
				"to": "00:40:37,200"
			},
			"offsets": {
				"from": 2436240,
				"to": 2437200
			},
			"text": " and most up to date."
		},
		{
			"timestamps": {
				"from": "00:40:37,200",
				"to": "00:40:39,760"
			},
			"offsets": {
				"from": 2437200,
				"to": 2439760
			},
			"text": " Sorry, yes."
		},
		{
			"timestamps": {
				"from": "00:40:39,760",
				"to": "00:40:42,000"
			},
			"offsets": {
				"from": 2439760,
				"to": 2442000
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:40:42,000",
				"to": "00:40:45,000"
			},
			"offsets": {
				"from": 2442000,
				"to": 2445000
			},
			"text": " Yeah."
		},
		{
			"timestamps": {
				"from": "00:40:45,000",
				"to": "00:40:47,400"
			},
			"offsets": {
				"from": 2445000,
				"to": 2447400
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:40:47,400",
				"to": "00:40:51,960"
			},
			"offsets": {
				"from": 2447400,
				"to": 2451960
			},
			"text": " Why is it voluntary?"
		},
		{
			"timestamps": {
				"from": "00:40:51,960",
				"to": "00:40:53,480"
			},
			"offsets": {
				"from": 2451960,
				"to": 2453480
			},
			"text": " Why is it voluntary?"
		},
		{
			"timestamps": {
				"from": "00:40:53,480",
				"to": "00:40:56,920"
			},
			"offsets": {
				"from": 2453480,
				"to": 2456920
			},
			"text": " I mean, it costs gas to emit events."
		},
		{
			"timestamps": {
				"from": "00:40:59,600",
				"to": "00:41:00,960"
			},
			"offsets": {
				"from": 2459600,
				"to": 2460960
			},
			"text": " Why isn't it standardized?"
		},
		{
			"timestamps": {
				"from": "00:41:00,960",
				"to": "00:41:02,800"
			},
			"offsets": {
				"from": 2460960,
				"to": 2462800
			},
			"text": " I mean, it is standardized in development."
		},
		{
			"timestamps": {
				"from": "00:41:02,800",
				"to": "00:41:06,160"
			},
			"offsets": {
				"from": 2462800,
				"to": 2466160
			},
			"text": " It's not like you have to deploy contract with events."
		},
		{
			"timestamps": {
				"from": "00:41:06,160",
				"to": "00:41:08,200"
			},
			"offsets": {
				"from": 2466160,
				"to": 2468200
			},
			"text": " And if there is contracts deployed with that event,"
		},
		{
			"timestamps": {
				"from": "00:41:08,200",
				"to": "00:41:10,680"
			},
			"offsets": {
				"from": 2468200,
				"to": 2470680
			},
			"text": " so you can also create an indexer based on that."
		},
		{
			"timestamps": {
				"from": "00:41:10,680",
				"to": "00:41:12,200"
			},
			"offsets": {
				"from": 2470680,
				"to": 2472200
			},
			"text": " I think that's what you're getting at."
		},
		{
			"timestamps": {
				"from": "00:41:12,200",
				"to": "00:41:14,440"
			},
			"offsets": {
				"from": 2472200,
				"to": 2474440
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:41:14,440",
				"to": "00:41:17,800"
			},
			"offsets": {
				"from": 2474440,
				"to": 2477800
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:41:17,800",
				"to": "00:41:18,640"
			},
			"offsets": {
				"from": 2477800,
				"to": 2478640
			},
			"text": " Oh, yeah."
		},
		{
			"timestamps": {
				"from": "00:41:18,640",
				"to": "00:41:19,480"
			},
			"offsets": {
				"from": 2478640,
				"to": 2479480
			},
			"text": " Okay, for sure."
		},
		{
			"timestamps": {
				"from": "00:41:19,480",
				"to": "00:41:22,840"
			},
			"offsets": {
				"from": 2479480,
				"to": 2482840
			},
			"text": " Sorry, can you repeat the question?"
		},
		{
			"timestamps": {
				"from": "00:41:22,840",
				"to": "00:41:25,080"
			},
			"offsets": {
				"from": 2482840,
				"to": 2485080
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:41:25,080",
				"to": "00:41:27,400"
			},
			"offsets": {
				"from": 2485080,
				"to": 2487400
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:41:28,240",
				"to": "00:41:29,760"
			},
			"offsets": {
				"from": 2488240,
				"to": 2489760
			},
			"text": " (mumbles)"
		},
		{
			"timestamps": {
				"from": "00:41:29,760",
				"to": "00:41:30,600"
			},
			"offsets": {
				"from": 2489760,
				"to": 2490600
			},
			"text": " Oh."
		},
		{
			"timestamps": {
				"from": "00:41:30,600",
				"to": "00:41:32,600"
			},
			"offsets": {
				"from": 2490600,
				"to": 2492600
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "00:41:32,600",
				"to": "00:41:35,280"
			},
			"offsets": {
				"from": 2492600,
				"to": 2495280
			},
			"text": " Why indexers mostly use logs?"
		},
		{
			"timestamps": {
				"from": "00:41:35,280",
				"to": "00:41:39,440"
			},
			"offsets": {
				"from": 2495280,
				"to": 2499440
			},
			"text": " That's also, I wanna say, more my opinion than true fact,"
		},
		{
			"timestamps": {
				"from": "00:41:39,440",
				"to": "00:41:44,120"
			},
			"offsets": {
				"from": 2499440,
				"to": 2504120
			},
			"text": " but also most popular index platforms"
		},
		{
			"timestamps": {
				"from": "00:41:44,120",
				"to": "00:41:48,080"
			},
			"offsets": {
				"from": 2504120,
				"to": 2508080
			},
			"text": " so the graph and stuff focus on logs quite a bit."
		},
		{
			"timestamps": {
				"from": "00:41:48,080",
				"to": "00:41:52,920"
			},
			"offsets": {
				"from": 2508080,
				"to": 2512920
			},
			"text": " And sort of why they're serving in logs"
		},
		{
			"timestamps": {
				"from": "00:41:52,920",
				"to": "00:41:54,200"
			},
			"offsets": {
				"from": 2512920,
				"to": 2514200
			},
			"text": " and you have to find the useful ones,"
		},
		{
			"timestamps": {
				"from": "00:41:54,200",
				"to": "00:41:56,520"
			},
			"offsets": {
				"from": 2514200,
				"to": 2516520
			},
			"text": " that information is hard to come by."
		},
		{
			"timestamps": {
				"from": "00:41:56,520",
				"to": "00:41:59,320"
			},
			"offsets": {
				"from": 2516520,
				"to": 2519320
			},
			"text": " And if you wanna create your indexer, as I said,"
		},
		{
			"timestamps": {
				"from": "00:41:59,320",
				"to": "00:42:01,560"
			},
			"offsets": {
				"from": 2519320,
				"to": 2521560
			},
			"text": " you should know the contracts on the system."
		},
		{
			"timestamps": {
				"from": "00:42:01,560",
				"to": "00:42:04,280"
			},
			"offsets": {
				"from": 2521560,
				"to": 2524280
			},
			"text": " But also you can make a general solution like the graph"
		},
		{
			"timestamps": {
				"from": "00:42:04,280",
				"to": "00:42:05,200"
			},
			"offsets": {
				"from": 2524280,
				"to": 2525200
			},
			"text": " or like,"
		},
		{
			"timestamps": {
				"from": "00:42:05,200",
				"to": "00:42:08,560"
			},
			"offsets": {
				"from": 2525200,
				"to": 2528560
			},
			"text": " ooh, I forgot the name."
		},
		{
			"timestamps": {
				"from": "00:42:08,560",
				"to": "00:42:12,960"
			},
			"offsets": {
				"from": 2528560,
				"to": 2532960
			},
			"text": " Oh, can someone help me that logo is like,"
		},
		{
			"timestamps": {
				"from": "00:42:12,960",
				"to": "00:42:14,280"
			},
			"offsets": {
				"from": 2532960,
				"to": 2534280
			},
			"text": " June analytics, thank you."
		},
		{
			"timestamps": {
				"from": "00:42:14,280",
				"to": "00:42:18,160"
			},
			"offsets": {
				"from": 2534280,
				"to": 2538160
			},
			"text": " Like June analytics where I can do an SQL query"
		},
		{
			"timestamps": {
				"from": "00:42:18,160",
				"to": "00:42:19,400"
			},
			"offsets": {
				"from": 2538160,
				"to": 2539400
			},
			"text": " on absolutely anything."
		},
		{
			"timestamps": {
				"from": "00:42:19,400",
				"to": "00:42:23,800"
			},
			"offsets": {
				"from": 2539400,
				"to": 2543800
			},
			"text": " But in terms of why there's so many events happening,"
		},
		{
			"timestamps": {
				"from": "00:42:23,800",
				"to": "00:42:25,400"
			},
			"offsets": {
				"from": 2543800,
				"to": 2545400
			},
			"text": " a lot of these events are just shut out"
		},
		{
			"timestamps": {
				"from": "00:42:25,400",
				"to": "00:42:27,800"
			},
			"offsets": {
				"from": 2545400,
				"to": 2547800
			},
			"text": " for debugging purposes and then left in the contract"
		},
		{
			"timestamps": {
				"from": "00:42:27,800",
				"to": "00:42:29,880"
			},
			"offsets": {
				"from": 2547800,
				"to": 2549880
			},
			"text": " and you sort of have to decipher as you go."
		},
		{
			"timestamps": {
				"from": "00:42:29,880",
				"to": "00:42:32,560"
			},
			"offsets": {
				"from": 2549880,
				"to": 2552560
			},
			"text": " Any other questions?"
		},
		{
			"timestamps": {
				"from": "00:42:32,560",
				"to": "00:42:34,480"
			},
			"offsets": {
				"from": 2552560,
				"to": 2554480
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:42:34,480",
				"to": "00:42:42,840"
			},
			"offsets": {
				"from": 2554480,
				"to": 2562840
			},
			"text": " Contract state."
		},
		{
			"timestamps": {
				"from": "00:42:42,840",
				"to": "00:42:46,560"
			},
			"offsets": {
				"from": 2562840,
				"to": 2566560
			},
			"text": " Yeah, yeah."
		},
		{
			"timestamps": {
				"from": "00:42:46,560",
				"to": "00:42:49,080"
			},
			"offsets": {
				"from": 2566560,
				"to": 2569080
			},
			"text": " So as before as I went like through storage."
		},
		{
			"timestamps": {
				"from": "00:42:49,080",
				"to": "00:42:50,200"
			},
			"offsets": {
				"from": 2569080,
				"to": 2570200
			},
			"text": " So if you wanna,"
		},
		{
			"timestamps": {
				"from": "00:42:50,200",
				"to": "00:42:52,880"
			},
			"offsets": {
				"from": 2570200,
				"to": 2572880
			},
			"text": " it's getting annoying."
		},
		{
			"timestamps": {
				"from": "00:42:52,880",
				"to": "00:42:55,800"
			},
			"offsets": {
				"from": 2572880,
				"to": 2575800
			},
			"text": " If you want to get contract state,"
		},
		{
			"timestamps": {
				"from": "00:42:55,800",
				"to": "00:42:58,440"
			},
			"offsets": {
				"from": 2575800,
				"to": 2578440
			},
			"text": " there's three main things that you can do."
		},
		{
			"timestamps": {
				"from": "00:42:58,440",
				"to": "00:43:01,480"
			},
			"offsets": {
				"from": 2578440,
				"to": 2581480
			},
			"text": " So there's access through variables."
		},
		{
			"timestamps": {
				"from": "00:43:01,480",
				"to": "00:43:04,480"
			},
			"offsets": {
				"from": 2581480,
				"to": 2584480
			},
			"text": " So every single public variable on a contract"
		},
		{
			"timestamps": {
				"from": "00:43:04,480",
				"to": "00:43:06,680"
			},
			"offsets": {
				"from": 2584480,
				"to": 2586680
			},
			"text": " automatically has a get or assigned to it."
		},
		{
			"timestamps": {
				"from": "00:43:06,680",
				"to": "00:43:09,000"
			},
			"offsets": {
				"from": 2586680,
				"to": 2589000
			},
			"text": " So that's one way we can access state."
		},
		{
			"timestamps": {
				"from": "00:43:09,000",
				"to": "00:43:11,640"
			},
			"offsets": {
				"from": 2589000,
				"to": 2591640
			},
			"text": " The second one is through storage,"
		},
		{
			"timestamps": {
				"from": "00:43:11,640",
				"to": "00:43:13,680"
			},
			"offsets": {
				"from": 2591640,
				"to": 2593680
			},
			"text": " as I mentioned before."
		},
		{
			"timestamps": {
				"from": "00:43:13,680",
				"to": "00:43:16,400"
			},
			"offsets": {
				"from": 2593680,
				"to": 2596400
			},
			"text": " So it's kind of tricky to find out exactly"
		},
		{
			"timestamps": {
				"from": "00:43:16,400",
				"to": "00:43:18,120"
			},
			"offsets": {
				"from": 2596400,
				"to": 2598120
			},
			"text": " wherever variable is in storage."
		},
		{
			"timestamps": {
				"from": "00:43:18,120",
				"to": "00:43:21,280"
			},
			"offsets": {
				"from": 2598120,
				"to": 2601280
			},
			"text": " But if you go on the solidity,"
		},
		{
			"timestamps": {
				"from": "00:43:21,960",
				"to": "00:43:24,400"
			},
			"offsets": {
				"from": 2601960,
				"to": 2604400
			},
			"text": " documentation page,"
		},
		{
			"timestamps": {
				"from": "00:43:24,400",
				"to": "00:43:26,320"
			},
			"offsets": {
				"from": 2604400,
				"to": 2606320
			},
			"text": " they will actually walk you through"
		},
		{
			"timestamps": {
				"from": "00:43:26,320",
				"to": "00:43:29,560"
			},
			"offsets": {
				"from": 2606320,
				"to": 2609560
			},
			"text": " how storage is structured based on the contract"
		},
		{
			"timestamps": {
				"from": "00:43:29,560",
				"to": "00:43:31,480"
			},
			"offsets": {
				"from": 2609560,
				"to": 2611480
			},
			"text": " and you can sort of mull your way through"
		},
		{
			"timestamps": {
				"from": "00:43:31,480",
				"to": "00:43:33,120"
			},
			"offsets": {
				"from": 2611480,
				"to": 2613120
			},
			"text": " and find the variable."
		},
		{
			"timestamps": {
				"from": "00:43:33,120",
				"to": "00:43:34,240"
			},
			"offsets": {
				"from": 2613120,
				"to": 2614240
			},
			"text": " The third is traces."
		},
		{
			"timestamps": {
				"from": "00:43:34,240",
				"to": "00:43:36,920"
			},
			"offsets": {
				"from": 2614240,
				"to": 2616920
			},
			"text": " So traces are the individual opcodes"
		},
		{
			"timestamps": {
				"from": "00:43:36,920",
				"to": "00:43:38,640"
			},
			"offsets": {
				"from": 2616920,
				"to": 2618640
			},
			"text": " that a contract is pushing,"
		},
		{
			"timestamps": {
				"from": "00:43:38,640",
				"to": "00:43:40,880"
			},
			"offsets": {
				"from": 2618640,
				"to": 2620880
			},
			"text": " which you can also request from the note."
		},
		{
			"timestamps": {
				"from": "00:43:40,880",
				"to": "00:43:44,040"
			},
			"offsets": {
				"from": 2620880,
				"to": 2624040
			},
			"text": " And with combination of those three,"
		},
		{
			"timestamps": {
				"from": "00:43:44,040",
				"to": "00:43:47,000"
			},
			"offsets": {
				"from": 2624040,
				"to": 2627000
			},
			"text": " you can see absolutely everything that a contract does."
		},
		{
			"timestamps": {
				"from": "00:43:47,000",
				"to": "00:43:50,480"
			},
			"offsets": {
				"from": 2627000,
				"to": 2630480
			},
			"text": " In terms of sort of creating strategies"
		},
		{
			"timestamps": {
				"from": "00:43:50,480",
				"to": "00:43:52,440"
			},
			"offsets": {
				"from": 2630480,
				"to": 2632440
			},
			"text": " based on collecting that state,"
		},
		{
			"timestamps": {
				"from": "00:43:52,440",
				"to": "00:43:55,320"
			},
			"offsets": {
				"from": 2632440,
				"to": 2635320
			},
			"text": " I think the best indexers are ones"
		},
		{
			"timestamps": {
				"from": "00:43:55,320",
				"to": "00:43:57,480"
			},
			"offsets": {
				"from": 2635320,
				"to": 2637480
			},
			"text": " well that you make yourself and their purpose built"
		},
		{
			"timestamps": {
				"from": "00:43:57,480",
				"to": "00:43:59,640"
			},
			"offsets": {
				"from": 2637480,
				"to": 2639640
			},
			"text": " and you're traversing across these different data types"
		},
		{
			"timestamps": {
				"from": "00:43:59,640",
				"to": "00:44:02,920"
			},
			"offsets": {
				"from": 2639640,
				"to": 2642920
			},
			"text": " to create sort of your perfect arrangement of data."
		},
		{
			"timestamps": {
				"from": "00:44:02,920",
				"to": "00:44:07,480"
			},
			"offsets": {
				"from": 2642920,
				"to": 2647480
			},
			"text": " So I built one on top of Aave a while ago"
		},
		{
			"timestamps": {
				"from": "00:44:07,480",
				"to": "00:44:09,680"
			},
			"offsets": {
				"from": 2647480,
				"to": 2649680
			},
			"text": " and that can be, was like relatively tricky."
		},
		{
			"timestamps": {
				"from": "00:44:09,680",
				"to": "00:44:12,680"
			},
			"offsets": {
				"from": 2649680,
				"to": 2652680
			},
			"text": " So they have a EIP 1967 pattern"
		},
		{
			"timestamps": {
				"from": "00:44:12,680",
				"to": "00:44:15,120"
			},
			"offsets": {
				"from": 2652680,
				"to": 2655120
			},
			"text": " where accessing storage to find that contract."
		},
		{
			"timestamps": {
				"from": "00:44:15,120",
				"to": "00:44:18,080"
			},
			"offsets": {
				"from": 2655120,
				"to": 2658080
			},
			"text": " That contract is a pointer to other contracts."
		},
		{
			"timestamps": {
				"from": "00:44:18,080",
				"to": "00:44:21,680"
			},
			"offsets": {
				"from": 2658080,
				"to": 2661680
			},
			"text": " I'm doing an ETH call to access the variables"
		},
		{
			"timestamps": {
				"from": "00:44:21,680",
				"to": "00:44:23,560"
			},
			"offsets": {
				"from": 2661680,
				"to": 2663560
			},
			"text": " to find those other contracts."
		},
		{
			"timestamps": {
				"from": "00:44:23,560",
				"to": "00:44:26,080"
			},
			"offsets": {
				"from": 2663560,
				"to": 2666080
			},
			"text": " And then I'm calling balance to find ETH balance"
		},
		{
			"timestamps": {
				"from": "00:44:26,080",
				"to": "00:44:27,380"
			},
			"offsets": {
				"from": 2666080,
				"to": 2667380
			},
			"text": " of those contracts."
		},
		{
			"timestamps": {
				"from": "00:44:27,380",
				"to": "00:44:32,240"
			},
			"offsets": {
				"from": 2667380,
				"to": 2672240
			},
			"text": " I'm also utilizing storage, yeah, stuff like that."
		},
		{
			"timestamps": {
				"from": "00:44:32,240",
				"to": "00:44:35,520"
			},
			"offsets": {
				"from": 2672240,
				"to": 2675520
			},
			"text": " And then you just have a really neat one row item"
		},
		{
			"timestamps": {
				"from": "00:44:35,520",
				"to": "00:44:36,640"
			},
			"offsets": {
				"from": 2675520,
				"to": 2676640
			},
			"text": " in your database for what you want."
		},
		{
			"timestamps": {
				"from": "00:44:36,640",
				"to": "00:44:37,560"
			},
			"offsets": {
				"from": 2676640,
				"to": 2677560
			},
			"text": " Sorry, yes."
		},
		{
			"timestamps": {
				"from": "00:44:38,400",
				"to": "00:44:41,320"
			},
			"offsets": {
				"from": 2678400,
				"to": 2681320
			},
			"text": " (muffled speaking)"
		},
		{
			"timestamps": {
				"from": "00:44:41,320",
				"to": "00:44:52,440"
			},
			"offsets": {
				"from": 2681320,
				"to": 2692440
			},
			"text": " Do you mean deploying the same contract"
		},
		{
			"timestamps": {
				"from": "00:44:52,440",
				"to": "00:44:53,920"
			},
			"offsets": {
				"from": 2692440,
				"to": 2693920
			},
			"text": " on two different chains or?"
		},
		{
			"timestamps": {
				"from": "00:44:53,920",
				"to": "00:44:56,840"
			},
			"offsets": {
				"from": 2693920,
				"to": 2696840
			},
			"text": " (muffled speaking)"
		},
		{
			"timestamps": {
				"from": "00:45:04,680",
				"to": "00:45:07,600"
			},
			"offsets": {
				"from": 2704680,
				"to": 2707600
			},
			"text": " Okay, so yeah, that is actually important to note."
		},
		{
			"timestamps": {
				"from": "00:45:07,600",
				"to": "00:45:08,800"
			},
			"offsets": {
				"from": 2707600,
				"to": 2708800
			},
			"text": " So if somebody like,"
		},
		{
			"timestamps": {
				"from": "00:45:08,800",
				"to": "00:45:12,520"
			},
			"offsets": {
				"from": 2708800,
				"to": 2712520
			},
			"text": " destructs a contract, yes, okay."
		},
		{
			"timestamps": {
				"from": "00:45:12,520",
				"to": "00:45:14,240"
			},
			"offsets": {
				"from": 2712520,
				"to": 2714240
			},
			"text": " If somebody self-destructs a contract,"
		},
		{
			"timestamps": {
				"from": "00:45:14,240",
				"to": "00:45:15,800"
			},
			"offsets": {
				"from": 2714240,
				"to": 2715800
			},
			"text": " I'll just repeat the question."
		},
		{
			"timestamps": {
				"from": "00:45:15,800",
				"to": "00:45:18,000"
			},
			"offsets": {
				"from": 2715800,
				"to": 2718000
			},
			"text": " If somebody self-destructs a contract,"
		},
		{
			"timestamps": {
				"from": "00:45:18,000",
				"to": "00:45:20,440"
			},
			"offsets": {
				"from": 2718000,
				"to": 2720440
			},
			"text": " I believe it's possible for another contract"
		},
		{
			"timestamps": {
				"from": "00:45:20,440",
				"to": "00:45:23,120"
			},
			"offsets": {
				"from": 2720440,
				"to": 2723120
			},
			"text": " to appear on that identical address."
		},
		{
			"timestamps": {
				"from": "00:45:23,120",
				"to": "00:45:24,480"
			},
			"offsets": {
				"from": 2723120,
				"to": 2724480
			},
			"text": " And that can have different cards"
		},
		{
			"timestamps": {
				"from": "00:45:24,480",
				"to": "00:45:27,120"
			},
			"offsets": {
				"from": 2724480,
				"to": 2727120
			},
			"text": " so it can potentially break your indexer."
		},
		{
			"timestamps": {
				"from": "00:45:27,120",
				"to": "00:45:28,800"
			},
			"offsets": {
				"from": 2727120,
				"to": 2728800
			},
			"text": " What you can do there to solve that system"
		},
		{
			"timestamps": {
				"from": "00:45:28,800",
				"to": "00:45:30,520"
			},
			"offsets": {
				"from": 2728800,
				"to": 2730520
			},
			"text": " is you can have a microservice looking"
		},
		{
			"timestamps": {
				"from": "00:45:30,520",
				"to": "00:45:32,880"
			},
			"offsets": {
				"from": 2730520,
				"to": 2732880
			},
			"text": " for destruction transactions"
		},
		{
			"timestamps": {
				"from": "00:45:32,880",
				"to": "00:45:35,560"
			},
			"offsets": {
				"from": 2732880,
				"to": 2735560
			},
			"text": " and matching them up during a query in your database"
		},
		{
			"timestamps": {
				"from": "00:45:35,560",
				"to": "00:45:37,480"
			},
			"offsets": {
				"from": 2735560,
				"to": 2737480
			},
			"text": " to see if that's affecting one of your indexers"
		},
		{
			"timestamps": {
				"from": "00:45:37,480",
				"to": "00:45:40,520"
			},
			"offsets": {
				"from": 2737480,
				"to": 2740520
			},
			"text": " and then making changes to that indexer live."
		},
		{
			"timestamps": {
				"from": "00:45:40,520",
				"to": "00:45:43,120"
			},
			"offsets": {
				"from": 2740520,
				"to": 2743120
			},
			"text": " So I'll normally do that through a microservice architecture"
		},
		{
			"timestamps": {
				"from": "00:45:43,120",
				"to": "00:45:45,280"
			},
			"offsets": {
				"from": 2743120,
				"to": 2745280
			},
			"text": " so I'll have one looking for destructs."
		},
		{
			"timestamps": {
				"from": "00:45:45,280",
				"to": "00:45:47,760"
			},
			"offsets": {
				"from": 2745280,
				"to": 2747760
			},
			"text": " If it destructs happen, send a message,"
		},
		{
			"timestamps": {
				"from": "00:45:47,760",
				"to": "00:45:51,760"
			},
			"offsets": {
				"from": 2747760,
				"to": 2751760
			},
			"text": " adjust or cancel my indexer for a period."
		},
		{
			"timestamps": {
				"from": "00:45:51,760",
				"to": "00:45:52,920"
			},
			"offsets": {
				"from": 2751760,
				"to": 2752920
			},
			"text": " The great thing about the blockchain"
		},
		{
			"timestamps": {
				"from": "00:45:52,920",
				"to": "00:45:54,040"
			},
			"offsets": {
				"from": 2752920,
				"to": 2754040
			},
			"text": " is the data is always there."
		},
		{
			"timestamps": {
				"from": "00:45:54,040",
				"to": "00:45:55,400"
			},
			"offsets": {
				"from": 2754040,
				"to": 2755400
			},
			"text": " So even if you miss a few logs,"
		},
		{
			"timestamps": {
				"from": "00:45:55,400",
				"to": "00:45:56,800"
			},
			"offsets": {
				"from": 2755400,
				"to": 2756800
			},
			"text": " you can do that historical query"
		},
		{
			"timestamps": {
				"from": "00:45:56,800",
				"to": "00:45:58,120"
			},
			"offsets": {
				"from": 2756800,
				"to": 2758120
			},
			"text": " and rebuild your data set."
		},
		{
			"timestamps": {
				"from": "00:45:58,120",
				"to": "00:46:01,560"
			},
			"offsets": {
				"from": 2758120,
				"to": 2761560
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:46:01,840",
				"to": "00:46:04,080"
			},
			"offsets": {
				"from": 2761840,
				"to": 2764080
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:46:04,080",
				"to": "00:46:13,560"
			},
			"offsets": {
				"from": 2764080,
				"to": 2773560
			},
			"text": " Yeah, sure."
		},
		{
			"timestamps": {
				"from": "00:46:13,560",
				"to": "00:46:17,680"
			},
			"offsets": {
				"from": 2773560,
				"to": 2777680
			},
			"text": " The advantages are sort of, okay,"
		},
		{
			"timestamps": {
				"from": "00:46:17,680",
				"to": "00:46:20,760"
			},
			"offsets": {
				"from": 2777680,
				"to": 2780760
			},
			"text": " so specifically to the graph I would say"
		},
		{
			"timestamps": {
				"from": "00:46:20,760",
				"to": "00:46:24,040"
			},
			"offsets": {
				"from": 2780760,
				"to": 2784040
			},
			"text": " is that there isn't a lot of functionality, I believe,"
		},
		{
			"timestamps": {
				"from": "00:46:24,040",
				"to": "00:46:25,560"
			},
			"offsets": {
				"from": 2784040,
				"to": 2785560
			},
			"text": " but please do correct me if I wrong,"
		},
		{
			"timestamps": {
				"from": "00:46:25,560",
				"to": "00:46:27,720"
			},
			"offsets": {
				"from": 2785560,
				"to": 2787720
			},
			"text": " to do queries across different subgraphs,"
		},
		{
			"timestamps": {
				"from": "00:46:27,720",
				"to": "00:46:28,640"
			},
			"offsets": {
				"from": 2787720,
				"to": 2788640
			},
			"text": " at least currently."
		},
		{
			"timestamps": {
				"from": "00:46:30,160",
				"to": "00:46:33,360"
			},
			"offsets": {
				"from": 2790160,
				"to": 2793360
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:46:33,360",
				"to": "00:46:36,520"
			},
			"offsets": {
				"from": 2793360,
				"to": 2796520
			},
			"text": " Okay, that was definitely one use case when I built them."
		},
		{
			"timestamps": {
				"from": "00:46:36,520",
				"to": "00:46:41,800"
			},
			"offsets": {
				"from": 2796520,
				"to": 2801800
			},
			"text": " Oh, okay."
		},
		{
			"timestamps": {
				"from": "00:46:41,800",
				"to": "00:46:43,600"
			},
			"offsets": {
				"from": 2801800,
				"to": 2803600
			},
			"text": " I mean, okay, so number one,"
		},
		{
			"timestamps": {
				"from": "00:46:43,600",
				"to": "00:46:45,680"
			},
			"offsets": {
				"from": 2803600,
				"to": 2805680
			},
			"text": " I would say in general is latency."
		},
		{
			"timestamps": {
				"from": "00:46:45,680",
				"to": "00:46:47,840"
			},
			"offsets": {
				"from": 2805680,
				"to": 2807840
			},
			"text": " You don't have to wait on any graph node operators"
		},
		{
			"timestamps": {
				"from": "00:46:47,840",
				"to": "00:46:49,840"
			},
			"offsets": {
				"from": 2807840,
				"to": 2809840
			},
			"text": " to fill up the graph for you."
		},
		{
			"timestamps": {
				"from": "00:46:49,840",
				"to": "00:46:53,240"
			},
			"offsets": {
				"from": 2809840,
				"to": 2813240
			},
			"text": " Second of all, I can create a graph that is,"
		},
		{
			"timestamps": {
				"from": "00:46:53,240",
				"to": "00:46:56,560"
			},
			"offsets": {
				"from": 2813240,
				"to": 2816560
			},
			"text": " well, a data set that's infinitely more complex"
		},
		{
			"timestamps": {
				"from": "00:46:56,560",
				"to": "00:46:58,280"
			},
			"offsets": {
				"from": 2816560,
				"to": 2818280
			},
			"text": " than what I could do."
		},
		{
			"timestamps": {
				"from": "00:46:58,280",
				"to": "00:47:00,200"
			},
			"offsets": {
				"from": 2818280,
				"to": 2820200
			},
			"text": " I mean, I can theoretically do anything on the graph,"
		},
		{
			"timestamps": {
				"from": "00:47:00,200",
				"to": "00:47:03,080"
			},
			"offsets": {
				"from": 2820200,
				"to": 2823080
			},
			"text": " but here I have very close knit control"
		},
		{
			"timestamps": {
				"from": "00:47:03,080",
				"to": "00:47:04,560"
			},
			"offsets": {
				"from": 2823080,
				"to": 2824560
			},
			"text": " of exactly what my code is doing"
		},
		{
			"timestamps": {
				"from": "00:47:04,560",
				"to": "00:47:06,800"
			},
			"offsets": {
				"from": 2824560,
				"to": 2826800
			},
			"text": " and what I'm putting through."
		},
		{
			"timestamps": {
				"from": "00:47:06,800",
				"to": "00:47:11,280"
			},
			"offsets": {
				"from": 2826800,
				"to": 2831280
			},
			"text": " Sort of third, I have control of my own infrastructure,"
		},
		{
			"timestamps": {
				"from": "00:47:11,280",
				"to": "00:47:12,440"
			},
			"offsets": {
				"from": 2831280,
				"to": 2832440
			},
			"text": " so I'm not dependent."
		},
		{
			"timestamps": {
				"from": "00:47:12,440",
				"to": "00:47:15,440"
			},
			"offsets": {
				"from": 2832440,
				"to": 2835440
			},
			"text": " The graph is decentralized on a fantastic protocol,"
		},
		{
			"timestamps": {
				"from": "00:47:15,440",
				"to": "00:47:18,960"
			},
			"offsets": {
				"from": 2835440,
				"to": 2838960
			},
			"text": " but having your own data set, which your own database"
		},
		{
			"timestamps": {
				"from": "00:47:18,960",
				"to": "00:47:22,320"
			},
			"offsets": {
				"from": 2838960,
				"to": 2842320
			},
			"text": " that you know exactly what's happening on is extremely useful."
		},
		{
			"timestamps": {
				"from": "00:47:22,320",
				"to": "00:47:26,560"
			},
			"offsets": {
				"from": 2842320,
				"to": 2846560
			},
			"text": " Fourth, you don't have to pay, it's free."
		},
		{
			"timestamps": {
				"from": "00:47:27,560",
				"to": "00:47:29,560"
			},
			"offsets": {
				"from": 2847560,
				"to": 2849560
			},
			"text": " (laughs)"
		},
		{
			"timestamps": {
				"from": "00:47:29,560",
				"to": "00:47:31,720"
			},
			"offsets": {
				"from": 2849560,
				"to": 2851720
			},
			"text": " Yeah, I guess that's like some of them,"
		},
		{
			"timestamps": {
				"from": "00:47:31,720",
				"to": "00:47:34,480"
			},
			"offsets": {
				"from": 2851720,
				"to": 2854480
			},
			"text": " but really my main pitch for it is that"
		},
		{
			"timestamps": {
				"from": "00:47:34,480",
				"to": "00:47:37,240"
			},
			"offsets": {
				"from": 2854480,
				"to": 2857240
			},
			"text": " this isn't that much code, it's not expensive to run."
		},
		{
			"timestamps": {
				"from": "00:47:37,240",
				"to": "00:47:40,280"
			},
			"offsets": {
				"from": 2857240,
				"to": 2860280
			},
			"text": " It's mainly really just doing HTTP calls."
		},
		{
			"timestamps": {
				"from": "00:47:40,280",
				"to": "00:47:43,600"
			},
			"offsets": {
				"from": 2860280,
				"to": 2863600
			},
			"text": " You can run this for free on any cloud provider"
		},
		{
			"timestamps": {
				"from": "00:47:43,600",
				"to": "00:47:47,840"
			},
			"offsets": {
				"from": 2863600,
				"to": 2867840
			},
			"text": " on like the ET micro or whatever the AWS equivalent is."
		},
		{
			"timestamps": {
				"from": "00:47:47,840",
				"to": "00:47:49,600"
			},
			"offsets": {
				"from": 2867840,
				"to": 2869600
			},
			"text": " You can run it on the free tier."
		},
		{
			"timestamps": {
				"from": "00:47:49,600",
				"to": "00:47:52,120"
			},
			"offsets": {
				"from": 2869600,
				"to": 2872120
			},
			"text": " Superbase has free Postgres databases."
		},
		{
			"timestamps": {
				"from": "00:47:52,120",
				"to": "00:47:54,360"
			},
			"offsets": {
				"from": 2872120,
				"to": 2874360
			},
			"text": " You're running your own infrastructure,"
		},
		{
			"timestamps": {
				"from": "00:47:54,360",
				"to": "00:47:55,520"
			},
			"offsets": {
				"from": 2874360,
				"to": 2875520
			},
			"text": " creating your own DAP."
		},
		{
			"timestamps": {
				"from": "00:47:56,400",
				"to": "00:47:59,000"
			},
			"offsets": {
				"from": 2876400,
				"to": 2879000
			},
			"text": " And it has no cost to you whatsoever."
		},
		{
			"timestamps": {
				"from": "00:47:59,000",
				"to": "00:48:02,000"
			},
			"offsets": {
				"from": 2879000,
				"to": 2882000
			},
			"text": " Yeah, anyone else?"
		},
		{
			"timestamps": {
				"from": "00:48:02,000",
				"to": "00:48:02,840"
			},
			"offsets": {
				"from": 2882000,
				"to": 2882840
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:48:02,840",
				"to": "00:48:05,200"
			},
			"offsets": {
				"from": 2882840,
				"to": 2885200
			},
			"text": " (indistinct)"
		},
		{
			"timestamps": {
				"from": "00:48:05,200",
				"to": "00:48:24,400"
			},
			"offsets": {
				"from": 2885200,
				"to": 2904400
			},
			"text": " So yes, there is a way to handle this"
		},
		{
			"timestamps": {
				"from": "00:48:24,400",
				"to": "00:48:26,920"
			},
			"offsets": {
				"from": 2904400,
				"to": 2906920
			},
			"text": " and you can subscribe, so there's a function called"
		},
		{
			"timestamps": {
				"from": "00:48:26,920",
				"to": "00:48:29,800"
			},
			"offsets": {
				"from": 2906920,
				"to": 2909800
			},
			"text": " subscribe new head inside the Geth client."
		},
		{
			"timestamps": {
				"from": "00:48:29,800",
				"to": "00:48:31,800"
			},
			"offsets": {
				"from": 2909800,
				"to": 2911800
			},
			"text": " And every single time there's a new block header"
		},
		{
			"timestamps": {
				"from": "00:48:31,800",
				"to": "00:48:33,840"
			},
			"offsets": {
				"from": 2911800,
				"to": 2913840
			},
			"text": " or an uncle, you'll get a message there."
		},
		{
			"timestamps": {
				"from": "00:48:33,840",
				"to": "00:48:36,600"
			},
			"offsets": {
				"from": 2913840,
				"to": 2916600
			},
			"text": " So you can make a service where you're looking for uncles."
		},
		{
			"timestamps": {
				"from": "00:48:36,600",
				"to": "00:48:38,440"
			},
			"offsets": {
				"from": 2916600,
				"to": 2918440
			},
			"text": " It'll give you the information you need."
		},
		{
			"timestamps": {
				"from": "00:48:38,440",
				"to": "00:48:41,880"
			},
			"offsets": {
				"from": 2918440,
				"to": 2921880
			},
			"text": " And then you can look at what that uncle did"
		},
		{
			"timestamps": {
				"from": "00:48:41,880",
				"to": "00:48:44,320"
			},
			"offsets": {
				"from": 2921880,
				"to": 2924320
			},
			"text": " and it should produce new events."
		},
		{
			"timestamps": {
				"from": "00:48:44,320",
				"to": "00:48:46,600"
			},
			"offsets": {
				"from": 2924320,
				"to": 2926600
			},
			"text": " And it should tell you like the removed tag"
		},
		{
			"timestamps": {
				"from": "00:48:46,600",
				"to": "00:48:48,440"
			},
			"offsets": {
				"from": 2926600,
				"to": 2928440
			},
			"text": " for the event, for the lot."
		},
		{
			"timestamps": {
				"from": "00:48:48,440",
				"to": "00:48:51,120"
			},
			"offsets": {
				"from": 2928440,
				"to": 2931120
			},
			"text": " (indistinct)"
		},
		{
			"timestamps": {
				"from": "00:48:51,200",
				"to": "00:48:53,440"
			},
			"offsets": {
				"from": 2931200,
				"to": 2933440
			},
			"text": " (indistinct)"
		},
		{
			"timestamps": {
				"from": "00:48:53,440",
				"to": "00:48:58,240"
			},
			"offsets": {
				"from": 2933440,
				"to": 2938240
			},
			"text": " So you can retrieve, so when your block hash gets uncalled,"
		},
		{
			"timestamps": {
				"from": "00:48:58,240",
				"to": "00:49:00,720"
			},
			"offsets": {
				"from": 2938240,
				"to": 2940720
			},
			"text": " like let's just assume that you detected properly"
		},
		{
			"timestamps": {
				"from": "00:49:00,720",
				"to": "00:49:02,440"
			},
			"offsets": {
				"from": 2940720,
				"to": 2942440
			},
			"text": " through a subscribe new head,"
		},
		{
			"timestamps": {
				"from": "00:49:02,440",
				"to": "00:49:05,760"
			},
			"offsets": {
				"from": 2942440,
				"to": 2945760
			},
			"text": " you can re-request that block through the block hash"
		},
		{
			"timestamps": {
				"from": "00:49:05,760",
				"to": "00:49:09,160"
			},
			"offsets": {
				"from": 2945760,
				"to": 2949160
			},
			"text": " and then it'll give you inside the log field,"
		},
		{
			"timestamps": {
				"from": "00:49:09,160",
				"to": "00:49:11,520"
			},
			"offsets": {
				"from": 2949160,
				"to": 2951520
			},
			"text": " a removed field, which is a ball to tell you"
		},
		{
			"timestamps": {
				"from": "00:49:11,520",
				"to": "00:49:13,520"
			},
			"offsets": {
				"from": 2951520,
				"to": 2953520
			},
			"text": " if that log is being deleted or not."
		},
		{
			"timestamps": {
				"from": "00:49:13,520",
				"to": "00:49:15,920"
			},
			"offsets": {
				"from": 2953520,
				"to": 2955920
			},
			"text": " And if it has been deleted, then you can mark that"
		},
		{
			"timestamps": {
				"from": "00:49:15,920",
				"to": "00:49:16,760"
			},
			"offsets": {
				"from": 2955920,
				"to": 2956760
			},
			"text": " in your database."
		},
		{
			"timestamps": {
				"from": "00:49:16,760",
				"to": "00:49:18,640"
			},
			"offsets": {
				"from": 2956760,
				"to": 2958640
			},
			"text": " You can delete the row or you could,"
		},
		{
			"timestamps": {
				"from": "00:49:18,640",
				"to": "00:49:20,360"
			},
			"offsets": {
				"from": 2958640,
				"to": 2960360
			},
			"text": " it depends on your private key."
		},
		{
			"timestamps": {
				"from": "00:49:20,360",
				"to": "00:49:22,760"
			},
			"offsets": {
				"from": 2960360,
				"to": 2962760
			},
			"text": " Sorry, your primary key set up."
		},
		{
			"timestamps": {
				"from": "00:49:22,760",
				"to": "00:49:25,280"
			},
			"offsets": {
				"from": 2962760,
				"to": 2965280
			},
			"text": " You can delete it or change that variable to true"
		},
		{
			"timestamps": {
				"from": "00:49:25,280",
				"to": "00:49:30,200"
			},
			"offsets": {
				"from": 2965280,
				"to": 2970200
			},
			"text": " that it has been removed to mark that it's not valuable done."
		},
		{
			"timestamps": {
				"from": "00:49:30,200",
				"to": "00:49:33,920"
			},
			"offsets": {
				"from": 2970200,
				"to": 2973920
			},
			"text": " Okay, looks like we might throw a raw bay here instead."
		},
		{
			"timestamps": {
				"from": "00:49:33,920",
				"to": "00:49:37,600"
			},
			"offsets": {
				"from": 2973920,
				"to": 2977600
			},
			"text": " Yeah, anyone else?"
		},
		{
			"timestamps": {
				"from": "00:49:37,600",
				"to": "00:49:38,440"
			},
			"offsets": {
				"from": 2977600,
				"to": 2978440
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:49:38,440",
				"to": "00:49:45,840"
			},
			"offsets": {
				"from": 2978440,
				"to": 2985840
			},
			"text": " Yeah."
		},
		{
			"timestamps": {
				"from": "00:49:48,320",
				"to": "00:49:50,240"
			},
			"offsets": {
				"from": 2988320,
				"to": 2990240
			},
			"text": " Sort of hardware that you need."
		},
		{
			"timestamps": {
				"from": "00:49:50,240",
				"to": "00:49:56,920"
			},
			"offsets": {
				"from": 2990240,
				"to": 2996920
			},
			"text": " So I'll say like for a couple different components."
		},
		{
			"timestamps": {
				"from": "00:49:56,920",
				"to": "00:49:59,560"
			},
			"offsets": {
				"from": 2996920,
				"to": 2999560
			},
			"text": " From a database point of view, absolutely,"
		},
		{
			"timestamps": {
				"from": "00:49:59,560",
				"to": "00:50:01,800"
			},
			"offsets": {
				"from": 2999560,
				"to": 3001800
			},
			"text": " it depends what sort of service you're running,"
		},
		{
			"timestamps": {
				"from": "00:50:01,800",
				"to": "00:50:03,640"
			},
			"offsets": {
				"from": 3001800,
				"to": 3003640
			},
			"text": " how quickly you wanna retrieve that data."
		},
		{
			"timestamps": {
				"from": "00:50:03,640",
				"to": "00:50:07,560"
			},
			"offsets": {
				"from": 3003640,
				"to": 3007560
			},
			"text": " But in terms of storage, I don't know,"
		},
		{
			"timestamps": {
				"from": "00:50:07,560",
				"to": "00:50:12,160"
			},
			"offsets": {
				"from": 3007560,
				"to": 3012160
			},
			"text": " I would say maybe 600, 700 gigs for the database."
		},
		{
			"timestamps": {
				"from": "00:50:12,160",
				"to": "00:50:15,320"
			},
			"offsets": {
				"from": 3012160,
				"to": 3015320
			},
			"text": " The more difficult component is if you wanna do that"
		},
		{
			"timestamps": {
				"from": "00:50:15,320",
				"to": "00:50:18,160"
			},
			"offsets": {
				"from": 3015320,
				"to": 3018160
			},
			"text": " historically for every single block number,"
		},
		{
			"timestamps": {
				"from": "00:50:18,160",
				"to": "00:50:22,040"
			},
			"offsets": {
				"from": 3018160,
				"to": 3022040
			},
			"text": " you're gonna run into hiccups with having nodes,"
		},
		{
			"timestamps": {
				"from": "00:50:22,040",
				"to": "00:50:24,080"
			},
			"offsets": {
				"from": 3022040,
				"to": 3024080
			},
			"text": " requesting that data from nodes."
		},
		{
			"timestamps": {
				"from": "00:50:24,080",
				"to": "00:50:26,480"
			},
			"offsets": {
				"from": 3024080,
				"to": 3026480
			},
			"text": " So that's gonna be very expensive if you're doing that"
		},
		{
			"timestamps": {
				"from": "00:50:26,480",
				"to": "00:50:29,000"
			},
			"offsets": {
				"from": 3026480,
				"to": 3029000
			},
			"text": " through alchemy or in Fure or one of those node subscribers"
		},
		{
			"timestamps": {
				"from": "00:50:29,000",
				"to": "00:50:30,520"
			},
			"offsets": {
				"from": 3029000,
				"to": 3030520
			},
			"text": " where you're paying per call."
		},
		{
			"timestamps": {
				"from": "00:50:30,520",
				"to": "00:50:31,800"
			},
			"offsets": {
				"from": 3030520,
				"to": 3031800
			},
			"text": " And if you're running your own node,"
		},
		{
			"timestamps": {
				"from": "00:50:31,800",
				"to": "00:50:34,320"
			},
			"offsets": {
				"from": 3031800,
				"to": 3034320
			},
			"text": " I would say one isn't enough if you wanted to finish"
		},
		{
			"timestamps": {
				"from": "00:50:34,320",
				"to": "00:50:35,520"
			},
			"offsets": {
				"from": 3034320,
				"to": 3035520
			},
			"text": " like this century."
		},
		{
			"timestamps": {
				"from": "00:50:35,520",
				"to": "00:50:40,520"
			},
			"offsets": {
				"from": 3035520,
				"to": 3040520
			},
			"text": " So what I would do is run, you know, whatever 20 nodes,"
		},
		{
			"timestamps": {
				"from": "00:50:40,520",
				"to": "00:50:44,080"
			},
			"offsets": {
				"from": 3040520,
				"to": 3044080
			},
			"text": " hook them all up through historical data"
		},
		{
			"timestamps": {
				"from": "00:50:44,080",
				"to": "00:50:45,760"
			},
			"offsets": {
				"from": 3044080,
				"to": 3045760
			},
			"text": " so you can use snapshots now."
		},
		{
			"timestamps": {
				"from": "00:50:45,760",
				"to": "00:50:48,000"
			},
			"offsets": {
				"from": 3045760,
				"to": 3048000
			},
			"text": " So it's nice and easy to set that up."
		},
		{
			"timestamps": {
				"from": "00:50:48,000",
				"to": "00:50:51,240"
			},
			"offsets": {
				"from": 3048000,
				"to": 3051240
			},
			"text": " And then have a load balancer and distribute out your calls"
		},
		{
			"timestamps": {
				"from": "00:50:51,240",
				"to": "00:50:52,480"
			},
			"offsets": {
				"from": 3051240,
				"to": 3052480
			},
			"text": " into the different nodes."
		},
		{
			"timestamps": {
				"from": "00:50:52,480",
				"to": "00:50:54,600"
			},
			"offsets": {
				"from": 3052480,
				"to": 3054600
			},
			"text": " And that's probably the quickest way to do it."
		},
		{
			"timestamps": {
				"from": "00:50:54,600",
				"to": "00:50:57,760"
			},
			"offsets": {
				"from": 3054600,
				"to": 3057760
			},
			"text": " In terms of the actual indexing, pretty lightweight."
		},
		{
			"timestamps": {
				"from": "00:50:57,760",
				"to": "00:50:59,360"
			},
			"offsets": {
				"from": 3057760,
				"to": 3059360
			},
			"text": " I wouldn't really worry about it."
		},
		{
			"timestamps": {
				"from": "00:50:59,360",
				"to": "00:51:02,040"
			},
			"offsets": {
				"from": 3059360,
				"to": 3062040
			},
			"text": " The way I normally run it is have a Kubernetes cluster"
		},
		{
			"timestamps": {
				"from": "00:51:02,040",
				"to": "00:51:03,920"
			},
			"offsets": {
				"from": 3062040,
				"to": 3063920
			},
			"text": " and I'm just auto scale as I needed."
		},
		{
			"timestamps": {
				"from": "00:51:03,920",
				"to": "00:51:06,600"
			},
			"offsets": {
				"from": 3063920,
				"to": 3066600
			},
			"text": " Oh, yes."
		},
		{
			"timestamps": {
				"from": "00:51:06,600",
				"to": "00:51:14,120"
			},
			"offsets": {
				"from": 3066600,
				"to": 3074120
			},
			"text": " - That's a long term performance, like a new brick."
		},
		{
			"timestamps": {
				"from": "00:51:14,120",
				"to": "00:51:16,160"
			},
			"offsets": {
				"from": 3074120,
				"to": 3076160
			},
			"text": " This structure can be used."
		},
		{
			"timestamps": {
				"from": "00:51:16,160",
				"to": "00:51:17,000"
			},
			"offsets": {
				"from": 3076160,
				"to": 3077000
			},
			"text": " - Okay."
		},
		{
			"timestamps": {
				"from": "00:51:17,040",
				"to": "00:51:17,880"
			},
			"offsets": {
				"from": 3077040,
				"to": 3077880
			},
			"text": " - Okay."
		},
		{
			"timestamps": {
				"from": "00:51:17,880",
				"to": "00:51:22,920"
			},
			"offsets": {
				"from": 3077880,
				"to": 3082920
			},
			"text": " Okay, it really depends what your application is doing."
		},
		{
			"timestamps": {
				"from": "00:51:22,920",
				"to": "00:51:27,800"
			},
			"offsets": {
				"from": 3082920,
				"to": 3087800
			},
			"text": " But what I would say is that for long term use,"
		},
		{
			"timestamps": {
				"from": "00:51:27,800",
				"to": "00:51:30,400"
			},
			"offsets": {
				"from": 3087800,
				"to": 3090400
			},
			"text": " I would recommend a relational database system,"
		},
		{
			"timestamps": {
				"from": "00:51:30,400",
				"to": "00:51:33,760"
			},
			"offsets": {
				"from": 3090400,
				"to": 3093760
			},
			"text": " so SQL, just because you can get a lot more use out of it."
		},
		{
			"timestamps": {
				"from": "00:51:33,760",
				"to": "00:51:35,680"
			},
			"offsets": {
				"from": 3093760,
				"to": 3095680
			},
			"text": " And if you're storing the data long term,"
		},
		{
			"timestamps": {
				"from": "00:51:35,680",
				"to": "00:51:37,640"
			},
			"offsets": {
				"from": 3095680,
				"to": 3097640
			},
			"text": " you probably are imagining some use cases"
		},
		{
			"timestamps": {
				"from": "00:51:37,640",
				"to": "00:51:39,040"
			},
			"offsets": {
				"from": 3097640,
				"to": 3099040
			},
			"text": " that you don't have yet."
		},
		{
			"timestamps": {
				"from": "00:51:39,040",
				"to": "00:51:42,000"
			},
			"offsets": {
				"from": 3099040,
				"to": 3102000
			},
			"text": " No SQL, I would suggest for when you need"
		},
		{
			"timestamps": {
				"from": "00:51:42,000",
				"to": "00:51:43,960"
			},
			"offsets": {
				"from": 3102000,
				"to": 3103960
			},
			"text": " really quick retrieval of that data."
		},
		{
			"timestamps": {
				"from": "00:51:45,080",
				"to": "00:51:47,400"
			},
			"offsets": {
				"from": 3105080,
				"to": 3107400
			},
			"text": " But in terms of sort of data strategy,"
		},
		{
			"timestamps": {
				"from": "00:51:47,400",
				"to": "00:51:50,280"
			},
			"offsets": {
				"from": 3107400,
				"to": 3110280
			},
			"text": " a pretty common one that I've been successful with"
		},
		{
			"timestamps": {
				"from": "00:51:50,280",
				"to": "00:51:53,320"
			},
			"offsets": {
				"from": 3110280,
				"to": 3113320
			},
			"text": " is time partitioning my database."
		},
		{
			"timestamps": {
				"from": "00:51:53,320",
				"to": "00:51:58,000"
			},
			"offsets": {
				"from": 3113320,
				"to": 3118000
			},
			"text": " For those who are familiar, partitioning is sort of,"
		},
		{
			"timestamps": {
				"from": "00:51:58,000",
				"to": "00:52:01,280"
			},
			"offsets": {
				"from": 3118000,
				"to": 3121280
			},
			"text": " imagine you have a CSV and you have a huge Excel file."
		},
		{
			"timestamps": {
				"from": "00:52:01,280",
				"to": "00:52:03,680"
			},
			"offsets": {
				"from": 3121280,
				"to": 3123680
			},
			"text": " Now, instead of having this huge Excel file"
		},
		{
			"timestamps": {
				"from": "00:52:03,680",
				"to": "00:52:04,680"
			},
			"offsets": {
				"from": 3123680,
				"to": 3124680
			},
			"text": " that I have to search through,"
		},
		{
			"timestamps": {
				"from": "00:52:04,680",
				"to": "00:52:08,200"
			},
			"offsets": {
				"from": 3124680,
				"to": 3128200
			},
			"text": " I break out the Excel file into like five different files"
		},
		{
			"timestamps": {
				"from": "00:52:08,200",
				"to": "00:52:10,280"
			},
			"offsets": {
				"from": 3128200,
				"to": 3130280
			},
			"text": " and I define them by a range."
		},
		{
			"timestamps": {
				"from": "00:52:10,280",
				"to": "00:52:12,520"
			},
			"offsets": {
				"from": 3130280,
				"to": 3132520
			},
			"text": " And now I can just search through that range"
		},
		{
			"timestamps": {
				"from": "00:52:12,520",
				"to": "00:52:14,480"
			},
			"offsets": {
				"from": 3132520,
				"to": 3134480
			},
			"text": " for a particular transaction."
		},
		{
			"timestamps": {
				"from": "00:52:14,480",
				"to": "00:52:16,640"
			},
			"offsets": {
				"from": 3134480,
				"to": 3136640
			},
			"text": " So there's lots of time partition databases,"
		},
		{
			"timestamps": {
				"from": "00:52:16,640",
				"to": "00:52:19,800"
			},
			"offsets": {
				"from": 3136640,
				"to": 3139800
			},
			"text": " but I would time partition your data if that's relevant"
		},
		{
			"timestamps": {
				"from": "00:52:19,800",
				"to": "00:52:22,400"
			},
			"offsets": {
				"from": 3139800,
				"to": 3142400
			},
			"text": " and then create indexes on everything"
		},
		{
			"timestamps": {
				"from": "00:52:22,400",
				"to": "00:52:23,960"
			},
			"offsets": {
				"from": 3142400,
				"to": 3143960
			},
			"text": " the regular blockchain does"
		},
		{
			"timestamps": {
				"from": "00:52:23,960",
				"to": "00:52:26,040"
			},
			"offsets": {
				"from": 3143960,
				"to": 3146040
			},
			"text": " and also anything of direct interest to you."
		},
		{
			"timestamps": {
				"from": "00:52:26,040",
				"to": "00:52:29,040"
			},
			"offsets": {
				"from": 3146040,
				"to": 3149040
			},
			"text": " So just like a congregate index, so whatever you want,"
		},
		{
			"timestamps": {
				"from": "00:52:29,040",
				"to": "00:52:31,600"
			},
			"offsets": {
				"from": 3149040,
				"to": 3151600
			},
			"text": " like block number plus the value of some variable"
		},
		{
			"timestamps": {
				"from": "00:52:31,600",
				"to": "00:52:34,480"
			},
			"offsets": {
				"from": 3151600,
				"to": 3154480
			},
			"text": " plus like topics error hash, for example."
		},
		{
			"timestamps": {
				"from": "00:52:34,480",
				"to": "00:52:38,120"
			},
			"offsets": {
				"from": 3154480,
				"to": 3158120
			},
			"text": " Also another good thing to do is to break apart"
		},
		{
			"timestamps": {
				"from": "00:52:38,120",
				"to": "00:52:41,040"
			},
			"offsets": {
				"from": 3158120,
				"to": 3161040
			},
			"text": " into different tables, your events."
		},
		{
			"timestamps": {
				"from": "00:52:43,440",
				"to": "00:52:46,360"
			},
			"offsets": {
				"from": 3163440,
				"to": 3166360
			},
			"text": " Yeah, I think that sort of goes for best retrieval."
		},
		{
			"timestamps": {
				"from": "00:52:46,360",
				"to": "00:52:49,080"
			},
			"offsets": {
				"from": 3166360,
				"to": 3169080
			},
			"text": " Obviously also if your database is getting huge,"
		},
		{
			"timestamps": {
				"from": "00:52:49,080",
				"to": "00:52:52,600"
			},
			"offsets": {
				"from": 3169080,
				"to": 3172600
			},
			"text": " also separate out into different nodes"
		},
		{
			"timestamps": {
				"from": "00:52:52,600",
				"to": "00:52:55,920"
			},
			"offsets": {
				"from": 3172600,
				"to": 3175920
			},
			"text": " so you're not paying for like vertical scaling."
		},
		{
			"timestamps": {
				"from": "00:52:55,920",
				"to": "00:53:00,400"
			},
			"offsets": {
				"from": 3175920,
				"to": 3180400
			},
			"text": " Oh, the other one I didn't mention is graph databases."
		},
		{
			"timestamps": {
				"from": "00:53:00,400",
				"to": "00:53:02,480"
			},
			"offsets": {
				"from": 3180400,
				"to": 3182480
			},
			"text": " I haven't seen that much use for them."
		},
		{
			"timestamps": {
				"from": "00:53:02,480",
				"to": "00:53:04,280"
			},
			"offsets": {
				"from": 3182480,
				"to": 3184280
			},
			"text": " I haven't used them myself, sorry,"
		},
		{
			"timestamps": {
				"from": "00:53:04,280",
				"to": "00:53:06,120"
			},
			"offsets": {
				"from": 3184280,
				"to": 3186120
			},
			"text": " but that's also an extremely powerful way"
		},
		{
			"timestamps": {
				"from": "00:53:06,120",
				"to": "00:53:08,000"
			},
			"offsets": {
				"from": 3186120,
				"to": 3188000
			},
			"text": " to store your blockchain data"
		},
		{
			"timestamps": {
				"from": "00:53:08,000",
				"to": "00:53:10,880"
			},
			"offsets": {
				"from": 3188000,
				"to": 3190880
			},
			"text": " so I can see the relationships between different addresses"
		},
		{
			"timestamps": {
				"from": "00:53:10,880",
				"to": "00:53:14,040"
			},
			"offsets": {
				"from": 3190880,
				"to": 3194040
			},
			"text": " or I can see the relationship between, for example,"
		},
		{
			"timestamps": {
				"from": "00:53:14,040",
				"to": "00:53:16,240"
			},
			"offsets": {
				"from": 3194040,
				"to": 3196240
			},
			"text": " like oracles and the Aave market."
		},
		{
			"timestamps": {
				"from": "00:53:16,240",
				"to": "00:53:19,200"
			},
			"offsets": {
				"from": 3196240,
				"to": 3199200
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:53:19,200",
				"to": "00:53:30,040"
			},
			"offsets": {
				"from": 3199200,
				"to": 3210040
			},
			"text": " Sync for indexing."
		},
		{
			"timestamps": {
				"from": "00:53:30,040",
				"to": "00:53:35,640"
			},
			"offsets": {
				"from": 3210040,
				"to": 3215640
			},
			"text": " So the different channels, I mean, it's parallelization,"
		},
		{
			"timestamps": {
				"from": "00:53:35,640",
				"to": "00:53:38,400"
			},
			"offsets": {
				"from": 3215640,
				"to": 3218400
			},
			"text": " but essentially I don't have to wait for one request"
		},
		{
			"timestamps": {
				"from": "00:53:38,400",
				"to": "00:53:41,200"
			},
			"offsets": {
				"from": 3218400,
				"to": 3221200
			},
			"text": " to get through before I do the other one."
		},
		{
			"timestamps": {
				"from": "00:53:41,200",
				"to": "00:53:43,280"
			},
			"offsets": {
				"from": 3221200,
				"to": 3223280
			},
			"text": " So it's very, very useful."
		},
		{
			"timestamps": {
				"from": "00:53:43,280",
				"to": "00:53:45,480"
			},
			"offsets": {
				"from": 3223280,
				"to": 3225480
			},
			"text": " So I'd say if you're doing the subscribe filter logs method"
		},
		{
			"timestamps": {
				"from": "00:53:45,480",
				"to": "00:53:47,280"
			},
			"offsets": {
				"from": 3225480,
				"to": 3227280
			},
			"text": " when you're getting one event at a time,"
		},
		{
			"timestamps": {
				"from": "00:53:47,280",
				"to": "00:53:50,240"
			},
			"offsets": {
				"from": 3227280,
				"to": 3230240
			},
			"text": " you're probably absolutely fine without using a routine."
		},
		{
			"timestamps": {
				"from": "00:53:50,240",
				"to": "00:53:51,800"
			},
			"offsets": {
				"from": 3230240,
				"to": 3231800
			},
			"text": " But if I'm doing the filter log method"
		},
		{
			"timestamps": {
				"from": "00:53:51,800",
				"to": "00:53:54,640"
			},
			"offsets": {
				"from": 3231800,
				"to": 3234640
			},
			"text": " and I'm requesting a huge amount of logs at the same time"
		},
		{
			"timestamps": {
				"from": "00:53:54,640",
				"to": "00:53:57,520"
			},
			"offsets": {
				"from": 3234640,
				"to": 3237520
			},
			"text": " and I have additional calls to do on each of those,"
		},
		{
			"timestamps": {
				"from": "00:53:57,520",
				"to": "00:54:00,440"
			},
			"offsets": {
				"from": 3237520,
				"to": 3240440
			},
			"text": " that's where parallelization will really help you out."
		},
		{
			"timestamps": {
				"from": "00:54:00,440",
				"to": "00:54:03,240"
			},
			"offsets": {
				"from": 3240440,
				"to": 3243240
			},
			"text": " You'll be able to make thousands, millions of calls"
		},
		{
			"timestamps": {
				"from": "00:54:03,240",
				"to": "00:54:05,360"
			},
			"offsets": {
				"from": 3243240,
				"to": 3245360
			},
			"text": " at the same time instead of one at a time,"
		},
		{
			"timestamps": {
				"from": "00:54:05,360",
				"to": "00:54:07,440"
			},
			"offsets": {
				"from": 3245360,
				"to": 3247440
			},
			"text": " you're gonna be cutting down the amount of time"
		},
		{
			"timestamps": {
				"from": "00:54:07,440",
				"to": "00:54:11,440"
			},
			"offsets": {
				"from": 3247440,
				"to": 3251440
			},
			"text": " you need to index from whatever weeks to hours."
		},
		{
			"timestamps": {
				"from": "00:54:11,440",
				"to": "00:54:22,920"
			},
			"offsets": {
				"from": 3251440,
				"to": 3262920
			},
			"text": " Yeah, you can insert more than one row at the same time."
		},
		{
			"timestamps": {
				"from": "00:54:22,920",
				"to": "00:54:27,000"
			},
			"offsets": {
				"from": 3262920,
				"to": 3267000
			},
			"text": " I could run multiple index programs, for example,"
		},
		{
			"timestamps": {
				"from": "00:54:27,000",
				"to": "00:54:31,200"
			},
			"offsets": {
				"from": 3267000,
				"to": 3271200
			},
			"text": " from like block range zero to 100, 100 to 200, 300 to 400"
		},
		{
			"timestamps": {
				"from": "00:54:31,200",
				"to": "00:54:32,880"
			},
			"offsets": {
				"from": 3271200,
				"to": 3272880
			},
			"text": " and they can all insert separately."
		},
		{
			"timestamps": {
				"from": "00:54:32,880",
				"to": "00:54:34,880"
			},
			"offsets": {
				"from": 3272880,
				"to": 3274880
			},
			"text": " So I'm finishing that index far quicker"
		},
		{
			"timestamps": {
				"from": "00:54:34,880",
				"to": "00:54:37,920"
			},
			"offsets": {
				"from": 3274880,
				"to": 3277920
			},
			"text": " than if I had to go from zero to 400 on one routine,"
		},
		{
			"timestamps": {
				"from": "00:54:37,920",
				"to": "00:54:39,040"
			},
			"offsets": {
				"from": 3277920,
				"to": 3279040
			},
			"text": " or one program."
		},
		{
			"timestamps": {
				"from": "00:54:39,040",
				"to": "00:54:41,000"
			},
			"offsets": {
				"from": 3279040,
				"to": 3281000
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:54:41,000",
				"to": "00:54:56,000"
			},
			"offsets": {
				"from": 3281000,
				"to": 3296000
			},
			"text": " Yeah, I mean, node providers are fantastic"
		},
		{
			"timestamps": {
				"from": "00:54:56,000",
				"to": "00:54:57,440"
			},
			"offsets": {
				"from": 3296000,
				"to": 3297440
			},
			"text": " and highly professional."
		},
		{
			"timestamps": {
				"from": "00:54:57,440",
				"to": "00:55:01,520"
			},
			"offsets": {
				"from": 3297440,
				"to": 3301520
			},
			"text": " So you're gonna get amazing service"
		},
		{
			"timestamps": {
				"from": "00:55:01,520",
				"to": "00:55:04,120"
			},
			"offsets": {
				"from": 3301520,
				"to": 3304120
			},
			"text": " and you're not gonna really experience much delays there,"
		},
		{
			"timestamps": {
				"from": "00:55:04,120",
				"to": "00:55:06,000"
			},
			"offsets": {
				"from": 3304120,
				"to": 3306000
			},
			"text": " but you can set up your node in GCP"
		},
		{
			"timestamps": {
				"from": "00:55:06,000",
				"to": "00:55:10,200"
			},
			"offsets": {
				"from": 3306000,
				"to": 3310200
			},
			"text": " and you should not really have too much more of a delay."
		},
		{
			"timestamps": {
				"from": "00:55:10,200",
				"to": "00:55:11,760"
			},
			"offsets": {
				"from": 3310200,
				"to": 3311760
			},
			"text": " The bigger risk of running your own node"
		},
		{
			"timestamps": {
				"from": "00:55:11,760",
				"to": "00:55:14,680"
			},
			"offsets": {
				"from": 3311760,
				"to": 3314680
			},
			"text": " is if you make a mistake or you're missing a get update,"
		},
		{
			"timestamps": {
				"from": "00:55:14,680",
				"to": "00:55:16,280"
			},
			"offsets": {
				"from": 3314680,
				"to": 3316280
			},
			"text": " a lot of the manual stuff you have to do"
		},
		{
			"timestamps": {
				"from": "00:55:16,280",
				"to": "00:55:18,280"
			},
			"offsets": {
				"from": 3316280,
				"to": 3318280
			},
			"text": " around managing your node is automatically done"
		},
		{
			"timestamps": {
				"from": "00:55:18,280",
				"to": "00:55:20,600"
			},
			"offsets": {
				"from": 3318280,
				"to": 3320600
			},
			"text": " by node providers while you have to take care"
		},
		{
			"timestamps": {
				"from": "00:55:20,600",
				"to": "00:55:22,040"
			},
			"offsets": {
				"from": 3320600,
				"to": 3322040
			},
			"text": " of those operations yourself."
		},
		{
			"timestamps": {
				"from": "00:55:22,040",
				"to": "00:55:26,280"
			},
			"offsets": {
				"from": 3322040,
				"to": 3326280
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:55:26,280",
				"to": "00:55:33,040"
			},
			"offsets": {
				"from": 3326280,
				"to": 3333040
			},
			"text": " Okay."
		},
		{
			"timestamps": {
				"from": "00:55:33,920",
				"to": "00:55:35,800"
			},
			"offsets": {
				"from": 3333920,
				"to": 3335800
			},
			"text": " Mempal data, yes."
		},
		{
			"timestamps": {
				"from": "00:55:35,800",
				"to": "00:55:37,800"
			},
			"offsets": {
				"from": 3335800,
				"to": 3337800
			},
			"text": " Are you trying to do like arbitrage or something,"
		},
		{
			"timestamps": {
				"from": "00:55:37,800",
				"to": "00:55:38,640"
			},
			"offsets": {
				"from": 3337800,
				"to": 3338640
			},
			"text": " or something?"
		},
		{
			"timestamps": {
				"from": "00:55:38,640",
				"to": "00:55:39,800"
			},
			"offsets": {
				"from": 3338640,
				"to": 3339800
			},
			"text": " - Not guessing on something else."
		},
		{
			"timestamps": {
				"from": "00:55:39,800",
				"to": "00:55:41,200"
			},
			"offsets": {
				"from": 3339800,
				"to": 3341200
			},
			"text": " - Okay."
		},
		{
			"timestamps": {
				"from": "00:55:41,200",
				"to": "00:55:43,880"
			},
			"offsets": {
				"from": 3341200,
				"to": 3343880
			},
			"text": " One thing that you can do is that you can run multiple nodes"
		},
		{
			"timestamps": {
				"from": "00:55:43,880",
				"to": "00:55:45,800"
			},
			"offsets": {
				"from": 3343880,
				"to": 3345800
			},
			"text": " in different regions because the mempool"
		},
		{
			"timestamps": {
				"from": "00:55:45,800",
				"to": "00:55:49,280"
			},
			"offsets": {
				"from": 3345800,
				"to": 3349280
			},
			"text": " is not necessarily synced between all nodes at the same time."
		},
		{
			"timestamps": {
				"from": "00:55:49,280",
				"to": "00:55:51,640"
			},
			"offsets": {
				"from": 3349280,
				"to": 3351640
			},
			"text": " So a popular setup is to run three or four nodes"
		},
		{
			"timestamps": {
				"from": "00:55:51,640",
				"to": "00:55:54,360"
			},
			"offsets": {
				"from": 3351640,
				"to": 3354360
			},
			"text": " in different regions and they'll have different peers"
		},
		{
			"timestamps": {
				"from": "00:55:54,360",
				"to": "00:55:58,120"
			},
			"offsets": {
				"from": 3354360,
				"to": 3358120
			},
			"text": " and you can congregate that data yourself"
		},
		{
			"timestamps": {
				"from": "00:55:58,120",
				"to": "00:55:59,360"
			},
			"offsets": {
				"from": 3358120,
				"to": 3359360
			},
			"text": " like through another process"
		},
		{
			"timestamps": {
				"from": "00:55:59,360",
				"to": "00:56:02,000"
			},
			"offsets": {
				"from": 3359360,
				"to": 3362000
			},
			"text": " and that way you'll get a much more complete view"
		},
		{
			"timestamps": {
				"from": "00:56:02,000",
				"to": "00:56:05,360"
			},
			"offsets": {
				"from": 3362000,
				"to": 3365360
			},
			"text": " of the mempool at like block execution time."
		},
		{
			"timestamps": {
				"from": "00:56:05,360",
				"to": "00:56:06,200"
			},
			"offsets": {
				"from": 3365360,
				"to": 3366200
			},
			"text": " Yes."
		},
		{
			"timestamps": {
				"from": "00:56:06,200",
				"to": "00:56:08,440"
			},
			"offsets": {
				"from": 3366200,
				"to": 3368440
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:56:08,440",
				"to": "00:56:17,360"
			},
			"offsets": {
				"from": 3368440,
				"to": 3377360
			},
			"text": " - Okay."
		},
		{
			"timestamps": {
				"from": "00:56:17,360",
				"to": "00:56:22,960"
			},
			"offsets": {
				"from": 3377360,
				"to": 3382960
			},
			"text": " Sorry, I have like five more minutes."
		},
		{
			"timestamps": {
				"from": "00:56:22,960",
				"to": "00:56:23,800"
			},
			"offsets": {
				"from": 3382960,
				"to": 3383800
			},
			"text": " Anyone else?"
		},
		{
			"timestamps": {
				"from": "00:56:23,800",
				"to": "00:56:26,520"
			},
			"offsets": {
				"from": 3383800,
				"to": 3386520
			},
			"text": " All right."
		},
		{
			"timestamps": {
				"from": "00:56:26,520",
				"to": "00:56:28,000"
			},
			"offsets": {
				"from": 3386520,
				"to": 3388000
			},
			"text": " Okay, fantastic."
		},
		{
			"timestamps": {
				"from": "00:56:29,480",
				"to": "00:56:31,240"
			},
			"offsets": {
				"from": 3389480,
				"to": 3391240
			},
			"text": " Yeah, thank you for listening."
		},
		{
			"timestamps": {
				"from": "00:56:31,240",
				"to": "00:56:32,600"
			},
			"offsets": {
				"from": 3391240,
				"to": 3392600
			},
			"text": " Here are my details."
		},
		{
			"timestamps": {
				"from": "00:56:32,600",
				"to": "00:56:33,440"
			},
			"offsets": {
				"from": 3392600,
				"to": 3393440
			},
			"text": " Thank you."
		},
		{
			"timestamps": {
				"from": "00:56:33,440",
				"to": "00:56:35,680"
			},
			"offsets": {
				"from": 3393440,
				"to": 3395680
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:56:35,680",
				"to": "00:56:37,920"
			},
			"offsets": {
				"from": 3395680,
				"to": 3397920
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:56:37,920",
				"to": "00:56:40,160"
			},
			"offsets": {
				"from": 3397920,
				"to": 3400160
			},
			"text": " (mumbling)"
		},
		{
			"timestamps": {
				"from": "00:56:40,160",
				"to": "00:56:44,160"
			},
			"offsets": {
				"from": 3400160,
				"to": 3404160
			},
			"text": " [ Silence ]"
		}
	]
}
