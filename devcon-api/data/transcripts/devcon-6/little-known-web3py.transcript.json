{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:13,600"
			},
			"offsets": {
				"from": 0,
				"to": 13600
			},
			"text": " [Music]"
		},
		{
			"timestamps": {
				"from": "00:00:13,600",
				"to": "00:00:15,680"
			},
			"offsets": {
				"from": 13600,
				"to": 15680
			},
			"text": " I think it's important to start with the why question."
		},
		{
			"timestamps": {
				"from": "00:00:15,680",
				"to": "00:00:19,040"
			},
			"offsets": {
				"from": 15680,
				"to": 19040
			},
			"text": " So besides selling JPEG monkeys, what are we all doing here?"
		},
		{
			"timestamps": {
				"from": "00:00:19,040",
				"to": "00:00:23,480"
			},
			"offsets": {
				"from": 19040,
				"to": 23480
			},
			"text": " I think we've reached a critical mass, or we've gathered a critical mass of people here,"
		},
		{
			"timestamps": {
				"from": "00:00:23,480",
				"to": "00:00:28,440"
			},
			"offsets": {
				"from": 23480,
				"to": 28440
			},
			"text": " that actually believe we stand a chance at re-architecting, rethinking,"
		},
		{
			"timestamps": {
				"from": "00:00:28,440",
				"to": "00:00:33,360"
			},
			"offsets": {
				"from": 28440,
				"to": 33360
			},
			"text": " and even adopting some core-level systems that we rely on,"
		},
		{
			"timestamps": {
				"from": "00:00:33,360",
				"to": "00:00:38,680"
			},
			"offsets": {
				"from": 33360,
				"to": 38680
			},
			"text": " things that touch on our governance systems, our financial systems,"
		},
		{
			"timestamps": {
				"from": "00:00:38,680",
				"to": "00:00:44,640"
			},
			"offsets": {
				"from": 38680,
				"to": 44640
			},
			"text": " and some of our social coordination systems, so how we work together."
		},
		{
			"timestamps": {
				"from": "00:00:44,640",
				"to": "00:00:51,880"
			},
			"offsets": {
				"from": 44640,
				"to": 51880
			},
			"text": " I think our window of opportunity is unknown, so ultimately we should seize on that while we've got it."
		},
		{
			"timestamps": {
				"from": "00:00:51,880",
				"to": "00:01:01,560"
			},
			"offsets": {
				"from": 51880,
				"to": 61560
			},
			"text": " The success of Ethereum and decentralized technologies is, or perhaps should be measured in terms of adoption,"
		},
		{
			"timestamps": {
				"from": "00:01:01,560",
				"to": "00:01:08,520"
			},
			"offsets": {
				"from": 61560,
				"to": 68520
			},
			"text": " and by adoption I think that at least a couple of the things that move the needle most"
		},
		{
			"timestamps": {
				"from": "00:01:08,520",
				"to": "00:01:15,800"
			},
			"offsets": {
				"from": 68520,
				"to": 75800
			},
			"text": " are number one that we're solving real problems, and number two that we are providing powerful and accessible tools"
		},
		{
			"timestamps": {
				"from": "00:01:15,800",
				"to": "00:01:18,680"
			},
			"offsets": {
				"from": 75800,
				"to": 78680
			},
			"text": " for people to solve real problems."
		},
		{
			"timestamps": {
				"from": "00:01:18,680",
				"to": "00:01:29,920"
			},
			"offsets": {
				"from": 78680,
				"to": 89920
			},
			"text": " And my thesis here is that the latter comes first, and in that it is unlikely that one dap will solve all the world's problems,"
		},
		{
			"timestamps": {
				"from": "00:01:29,920",
				"to": "00:01:32,680"
			},
			"offsets": {
				"from": 89920,
				"to": 92680
			},
			"text": " or one sphere of the world's problems, right?"
		},
		{
			"timestamps": {
				"from": "00:01:32,680",
				"to": "00:01:40,120"
			},
			"offsets": {
				"from": 92680,
				"to": 100120
			},
			"text": " By putting powerful and accessible tools in people's hands enables them to solve their problems locally,"
		},
		{
			"timestamps": {
				"from": "00:01:40,120",
				"to": "00:01:43,480"
			},
			"offsets": {
				"from": 100120,
				"to": 103480
			},
			"text": " and so that's where I think I can move the needle anyway."
		},
		{
			"timestamps": {
				"from": "00:01:43,480",
				"to": "00:01:50,680"
			},
			"offsets": {
				"from": 103480,
				"to": 110680
			},
			"text": " So this is the framing for this talk. My goal is to increase awareness of a set of Python tools,"
		},
		{
			"timestamps": {
				"from": "00:01:50,680",
				"to": "00:01:56,680"
			},
			"offsets": {
				"from": 110680,
				"to": 116680
			},
			"text": " some best practices, and some other projects that I think you might benefit from being aware of."
		},
		{
			"timestamps": {
				"from": "00:01:56,680",
				"to": "00:02:02,600"
			},
			"offsets": {
				"from": 116680,
				"to": 122600
			},
			"text": " Sort of the template for this talk is that I'll give you just enough information to know whether you want to learn more about it,"
		},
		{
			"timestamps": {
				"from": "00:02:02,600",
				"to": "00:02:07,080"
			},
			"offsets": {
				"from": 122600,
				"to": 127080
			},
			"text": " and point to somewhere where you can learn some more."
		},
		{
			"timestamps": {
				"from": "00:02:07,080",
				"to": "00:02:14,440"
			},
			"offsets": {
				"from": 127080,
				"to": 134440
			},
			"text": " So this is a blog post I wrote about a year ago now that I think is still relevant, that digs a bit further into this call to action."
		},
		{
			"timestamps": {
				"from": "00:02:14,440",
				"to": "00:02:20,200"
			},
			"offsets": {
				"from": 134440,
				"to": 140200
			},
			"text": " So this is meant to be beginner-friendly, sort of a series of lightning talks smushed together."
		},
		{
			"timestamps": {
				"from": "00:02:20,200",
				"to": "00:02:25,640"
			},
			"offsets": {
				"from": 140200,
				"to": 145640
			},
			"text": " Sound good? My perspective is informed by five years at the Ethereum Foundation,"
		},
		{
			"timestamps": {
				"from": "00:02:25,640",
				"to": "00:02:29,720"
			},
			"offsets": {
				"from": 145640,
				"to": 149720
			},
			"text": " thinking a lot about what it takes to get people to adapt this technology."
		},
		{
			"timestamps": {
				"from": "00:02:29,720",
				"to": "00:02:35,960"
			},
			"offsets": {
				"from": 149720,
				"to": 155960
			},
			"text": " Starting on the Mist Browser team where we produce one of the first UIs for Ethereum,"
		},
		{
			"timestamps": {
				"from": "00:02:35,960",
				"to": "00:02:44,440"
			},
			"offsets": {
				"from": 155960,
				"to": 164440
			},
			"text": " when we sunset that, the team moved over to do some UI experiments on configuring and running Ethereum clients,"
		},
		{
			"timestamps": {
				"from": "00:02:44,440",
				"to": "00:02:51,080"
			},
			"offsets": {
				"from": 164440,
				"to": 171080
			},
			"text": " called that Ethereum Grid, and a couple years ago I pivoted to the Snake Chalmers team, the Ethereum Python team,"
		},
		{
			"timestamps": {
				"from": "00:02:51,080",
				"to": "00:02:56,360"
			},
			"offsets": {
				"from": 171080,
				"to": 176360
			},
			"text": " where I write some code, but also prioritize creating education content."
		},
		{
			"timestamps": {
				"from": "00:02:56,360",
				"to": "00:02:59,240"
			},
			"offsets": {
				"from": 176360,
				"to": 179240
			},
			"text": " In the last year and a half, my life has done some zigging and zagging."
		},
		{
			"timestamps": {
				"from": "00:02:59,240",
				"to": "00:03:04,520"
			},
			"offsets": {
				"from": 179240,
				"to": 184520
			},
			"text": " My wife and I welcomed triplets into our family, and then while I was on paternity leave,"
		},
		{
			"timestamps": {
				"from": "00:03:04,520",
				"to": "00:03:10,360"
			},
			"offsets": {
				"from": 184520,
				"to": 190360
			},
			"text": " I helped establish Developer Dow, which is a very reasonable thing to do."
		},
		{
			"timestamps": {
				"from": "00:03:10,360",
				"to": "00:03:16,760"
			},
			"offsets": {
				"from": 190360,
				"to": 196760
			},
			"text": " I'm excited about Developer Dow because it's sort of this hive mind of bright and passionate people,"
		},
		{
			"timestamps": {
				"from": "00:03:16,760",
				"to": "00:03:22,360"
			},
			"offsets": {
				"from": 196760,
				"to": 202360
			},
			"text": " all sort of focused in digging into this solving challenges of adoption."
		},
		{
			"timestamps": {
				"from": "00:03:22,360",
				"to": "00:03:26,360"
			},
			"offsets": {
				"from": 202360,
				"to": 206360
			},
			"text": " I'm proud to be part of this Ethereum Foundation Python team."
		},
		{
			"timestamps": {
				"from": "00:03:26,360",
				"to": "00:03:32,440"
			},
			"offsets": {
				"from": 206360,
				"to": 212440
			},
			"text": " We are a small team, and most of us will be hanging out at an impact booth hub"
		},
		{
			"timestamps": {
				"from": "00:03:33,240",
				"to": "00:03:38,280"
			},
			"offsets": {
				"from": 213240,
				"to": 218280
			},
			"text": " for a lot of the day tomorrow. So if you want to come say, hey, meet some of the team and get some"
		},
		{
			"timestamps": {
				"from": "00:03:38,280",
				"to": "00:03:44,680"
			},
			"offsets": {
				"from": 218280,
				"to": 224680
			},
			"text": " very exclusive, snakey, mixed snakeface swag, come find us there, come hang out."
		},
		{
			"timestamps": {
				"from": "00:03:44,680",
				"to": "00:03:51,800"
			},
			"offsets": {
				"from": 224680,
				"to": 231800
			},
			"text": " We just welcomed our fifth teammate this month, Linda. So, hi Linda. Welcome to the ruckus."
		},
		{
			"timestamps": {
				"from": "00:03:51,800",
				"to": "00:03:56,120"
			},
			"offsets": {
				"from": 231800,
				"to": 236120
			},
			"text": " I'm going to take a moment to burn a couple seconds in time here that I don't really have,"
		},
		{
			"timestamps": {
				"from": "00:03:56,120",
				"to": "00:04:02,120"
			},
			"offsets": {
				"from": 236120,
				"to": 242120
			},
			"text": " to say that this is like a full circle moment for me. When I joined the EF in 2017, my first"
		},
		{
			"timestamps": {
				"from": "00:04:02,120",
				"to": "00:04:09,560"
			},
			"offsets": {
				"from": 242120,
				"to": 249560
			},
			"text": " dev con was in Cancun, devcon 3, and Ebb Frogga is in the audience who was on stage, given a shout"
		},
		{
			"timestamps": {
				"from": "00:04:09,560",
				"to": "00:04:14,280"
			},
			"offsets": {
				"from": 249560,
				"to": 254280
			},
			"text": " out, or like given the talk for the Miss Browser team, and he gave me a welcome shout out. So,"
		},
		{
			"timestamps": {
				"from": "00:04:14,280",
				"to": "00:04:21,320"
			},
			"offsets": {
				"from": 254280,
				"to": 261320
			},
			"text": " it brings me joy to make this a newfound tradition. Quickly, the EF Python team manages or maintains"
		},
		{
			"timestamps": {
				"from": "00:04:21,320",
				"to": "00:04:30,120"
			},
			"offsets": {
				"from": 261320,
				"to": 270120
			},
			"text": " about a dozen Python libraries, most notably Web3Py and PyVM. The rest sort of roll up into"
		},
		{
			"timestamps": {
				"from": "00:04:30,680",
				"to": "00:04:35,800"
			},
			"offsets": {
				"from": 270680,
				"to": 275800
			},
			"text": " those two libraries, or help make those two libraries work. A shout out to our open source"
		},
		{
			"timestamps": {
				"from": "00:04:35,800",
				"to": "00:04:43,080"
			},
			"offsets": {
				"from": 275800,
				"to": 283080
			},
			"text": " community of contributors. They also help things move along here, and shout out to our"
		},
		{
			"timestamps": {
				"from": "00:04:43,080",
				"to": "00:04:48,360"
			},
			"offsets": {
				"from": 283080,
				"to": 288360
			},
			"text": " the snake charmers who've come before us that kicked off essentially all of these libraries."
		},
		{
			"timestamps": {
				"from": "00:04:48,360",
				"to": "00:04:53,640"
			},
			"offsets": {
				"from": 288360,
				"to": 293640
			},
			"text": " Let's get to Web3Py then. Starting with the why question again. Why does Web3Py need to exist?"
		},
		{
			"timestamps": {
				"from": "00:04:53,640",
				"to": "00:05:01,960"
			},
			"offsets": {
				"from": 293640,
				"to": 301960
			},
			"text": " And the same question is applicable to Ether's JS, Web3JS, and libraries in other languages."
		},
		{
			"timestamps": {
				"from": "00:05:01,960",
				"to": "00:05:08,280"
			},
			"offsets": {
				"from": 301960,
				"to": 308280
			},
			"text": " The short answer is because JSON RPC exists, or more specifically that the execution client"
		},
		{
			"timestamps": {
				"from": "00:05:08,280",
				"to": "00:05:15,160"
			},
			"offsets": {
				"from": 308280,
				"to": 315160
			},
			"text": " synetherium speak JSON RPC, if you want to communicate with them, you have to speak"
		},
		{
			"timestamps": {
				"from": "00:05:15,160",
				"to": "00:05:21,080"
			},
			"offsets": {
				"from": 315160,
				"to": 321080
			},
			"text": " their JSON RPC standard effectively. So, in a command line, if you want to make an"
		},
		{
			"timestamps": {
				"from": "00:05:21,080",
				"to": "00:05:25,960"
			},
			"offsets": {
				"from": 321080,
				"to": 325960
			},
			"text": " eth call request to an etherium node, it might look like this, where you've got a stringified"
		},
		{
			"timestamps": {
				"from": "00:05:25,960",
				"to": "00:05:31,480"
			},
			"offsets": {
				"from": 325960,
				"to": 331480
			},
			"text": " JSON object that you're passing along. If therion client comes back to you with this"
		},
		{
			"timestamps": {
				"from": "00:05:31,480",
				"to": "00:05:39,160"
			},
			"offsets": {
				"from": 331480,
				"to": 339160
			},
			"text": " bit of this blob of data, which is then up to you to decode and make sense of. Web3Py and similar"
		},
		{
			"timestamps": {
				"from": "00:05:39,160",
				"to": "00:05:44,200"
			},
			"offsets": {
				"from": 339160,
				"to": 344200
			},
			"text": " libraries give you a human readable interface for this, so you make the request for whatever it is"
		},
		{
			"timestamps": {
				"from": "00:05:44,200",
				"to": "00:05:50,520"
			},
			"offsets": {
				"from": 344200,
				"to": 350520
			},
			"text": " you're looking for, and ideally you get back exactly the data you're looking for. For the deep dive"
		},
		{
			"timestamps": {
				"from": "00:05:50,520",
				"to": "00:05:55,800"
			},
			"offsets": {
				"from": 350520,
				"to": 355800
			},
			"text": " into what happens under the hood there, got another blog post for you. So, what might you know Web3Py"
		},
		{
			"timestamps": {
				"from": "00:05:55,800",
				"to": "00:06:01,640"
			},
			"offsets": {
				"from": 355800,
				"to": 361640
			},
			"text": " for already? In order to communicate with an Ethereum client, you'll have to configure a provider."
		},
		{
			"timestamps": {
				"from": "00:06:01,640",
				"to": "00:06:10,760"
			},
			"offsets": {
				"from": 361640,
				"to": 370760
			},
			"text": " This is your friendly reminder that the most secure way to do this is to run your own node on"
		},
		{
			"timestamps": {
				"from": "00:06:10,760",
				"to": "00:06:17,240"
			},
			"offsets": {
				"from": 370760,
				"to": 377240
			},
			"text": " your own machine and connect to it via an IPC socket. All know well that this is an unreasonable"
		},
		{
			"timestamps": {
				"from": "00:06:17,240",
				"to": "00:06:23,240"
			},
			"offsets": {
				"from": 377240,
				"to": 383240
			},
			"text": " ask for most of the Ethereum community. So, I'd like to plug here another project to keep an eye out on"
		},
		{
			"timestamps": {
				"from": "00:06:23,240",
				"to": "00:06:29,880"
			},
			"offsets": {
				"from": 383240,
				"to": 389880
			},
			"text": " the portal network. There was a great talk given yesterday by Piper Merriam about the portal network,"
		},
		{
			"timestamps": {
				"from": "00:06:29,880",
				"to": "00:06:35,240"
			},
			"offsets": {
				"from": 389880,
				"to": 395240
			},
			"text": " what it is, how it works, what the progress is. The idea here is that there is a fundamental"
		},
		{
			"timestamps": {
				"from": "00:06:35,240",
				"to": "00:06:42,920"
			},
			"offsets": {
				"from": 395240,
				"to": 402920
			},
			"text": " redesign of the peer-to-peer protocols to actually allow light clients that are light enough to run"
		},
		{
			"timestamps": {
				"from": "00:06:42,920",
				"to": "00:06:48,520"
			},
			"offsets": {
				"from": 402920,
				"to": 408520
			},
			"text": " in your consumer-grade hardware. So, your laptops, your Raspberry Pies even. That's in flight. There"
		},
		{
			"timestamps": {
				"from": "00:06:48,520",
				"to": "00:06:54,840"
			},
			"offsets": {
				"from": 408520,
				"to": 414840
			},
			"text": " are three clients that are being implemented and the spec is effectively done already. So,"
		},
		{
			"timestamps": {
				"from": "00:06:54,840",
				"to": "00:07:02,120"
			},
			"offsets": {
				"from": 414840,
				"to": 422120
			},
			"text": " hopefully coming soon. In the meantime, use your HTTP or WebSockets providers as needed and once"
		},
		{
			"timestamps": {
				"from": "00:07:02,120",
				"to": "00:07:09,720"
			},
			"offsets": {
				"from": 422120,
				"to": 429720
			},
			"text": " connected to your node, you can do various things like look up account balances, convert between"
		},
		{
			"timestamps": {
				"from": "00:07:09,720",
				"to": "00:07:18,040"
			},
			"offsets": {
				"from": 429720,
				"to": 438040
			},
			"text": " way and ether. Send ether from one account to another, deploy contracts, interact with deployed"
		},
		{
			"timestamps": {
				"from": "00:07:18,040",
				"to": "00:07:25,240"
			},
			"offsets": {
				"from": 438040,
				"to": 445240
			},
			"text": " contracts, get blocked data or transaction data and then watch for events as they occur on chain."
		},
		{
			"timestamps": {
				"from": "00:07:25,240",
				"to": "00:07:30,680"
			},
			"offsets": {
				"from": 445240,
				"to": 450680
			},
			"text": " That was intentionally quick. If any of these concepts are new to you or you're new to Ethereum"
		},
		{
			"timestamps": {
				"from": "00:07:30,680",
				"to": "00:07:36,280"
			},
			"offsets": {
				"from": 450680,
				"to": 456280
			},
			"text": " in general, then welcome to this weird and wonderful world and our docs are fairly good but I've"
		},
		{
			"timestamps": {
				"from": "00:07:36,280",
				"to": "00:07:40,760"
			},
			"offsets": {
				"from": 456280,
				"to": 460760
			},
			"text": " also written a couple of introductory blog posts that will hopefully make these concepts a bit"
		},
		{
			"timestamps": {
				"from": "00:07:40,760",
				"to": "00:07:49,160"
			},
			"offsets": {
				"from": 460760,
				"to": 469160
			},
			"text": " easier. So, what's new? A lot of work has gone into making async functionality just plain work in"
		},
		{
			"timestamps": {
				"from": "00:07:49,160",
				"to": "00:07:54,760"
			},
			"offsets": {
				"from": 469160,
				"to": 474760
			},
			"text": " Web3Py this year. We've started with the HTTP provider because that's where the biggest"
		},
		{
			"timestamps": {
				"from": "00:07:54,760",
				"to": "00:08:02,040"
			},
			"offsets": {
				"from": 474760,
				"to": 482040
			},
			"text": " bang for the buck is. This is available today in beta versions of Web3Py. Instantiating or like"
		},
		{
			"timestamps": {
				"from": "00:08:02,040",
				"to": "00:08:08,680"
			},
			"offsets": {
				"from": 482040,
				"to": 488680
			},
			"text": " configuring these new providers is a little bit more verbose and that will improve over time but"
		},
		{
			"timestamps": {
				"from": "00:08:08,680",
				"to": "00:08:16,040"
			},
			"offsets": {
				"from": 488680,
				"to": 496040
			},
			"text": " you're welcome to use it already. So, very quickly, again, an example of what some Python or asynchronous"
		},
		{
			"timestamps": {
				"from": "00:08:16,040",
				"to": "00:08:23,000"
			},
			"offsets": {
				"from": 496040,
				"to": 503000
			},
			"text": " Python code might look like. In this example, we're just grabbing the first 50 blocks from the"
		},
		{
			"timestamps": {
				"from": "00:08:23,000",
				"to": "00:08:29,240"
			},
			"offsets": {
				"from": 503000,
				"to": 509240
			},
			"text": " Ethereum blockchain using async I/Os as completed method. So, as each one of those requests goes to"
		},
		{
			"timestamps": {
				"from": "00:08:29,240",
				"to": "00:08:34,440"
			},
			"offsets": {
				"from": 509240,
				"to": 514440
			},
			"text": " your remote node and comes back, we just print out the block number that was received. So,"
		},
		{
			"timestamps": {
				"from": "00:08:34,440",
				"to": "00:08:40,680"
			},
			"offsets": {
				"from": 514440,
				"to": 520680
			},
			"text": " you'll get it in this case, a fairly random order. But the takeaway here is that if you spend a lot"
		},
		{
			"timestamps": {
				"from": "00:08:40,680",
				"to": "00:08:49,000"
			},
			"offsets": {
				"from": 520680,
				"to": 529000
			},
			"text": " of your application doing read operations, you, in particular, to and from a remote node,"
		},
		{
			"timestamps": {
				"from": "00:08:49,000",
				"to": "00:08:57,320"
			},
			"offsets": {
				"from": 529000,
				"to": 537320
			},
			"text": " you can see some massive performance improvements like in the neighborhood of 10x moving right"
		},
		{
			"timestamps": {
				"from": "00:08:57,320",
				"to": "00:09:04,040"
			},
			"offsets": {
				"from": 537320,
				"to": 544040
			},
			"text": " along. ENS support is not new to Web3Py but it's gotten some love in the last year. So,"
		},
		{
			"timestamps": {
				"from": "00:09:04,040",
				"to": "00:09:09,640"
			},
			"offsets": {
				"from": 544040,
				"to": 549640
			},
			"text": " you might know it best for looking up the, like it's read operations. So, looking up the in address"
		},
		{
			"timestamps": {
				"from": "00:09:09,640",
				"to": "00:09:15,560"
			},
			"offsets": {
				"from": 549640,
				"to": 555560
			},
			"text": " and address for a name, resolving a name from an address or getting some arbitrary text that"
		},
		{
			"timestamps": {
				"from": "00:09:15,560",
				"to": "00:09:24,200"
			},
			"offsets": {
				"from": 555560,
				"to": 564200
			},
			"text": " ENS allows you to store as part of your record. New this year is async support for ENS. So,"
		},
		{
			"timestamps": {
				"from": "00:09:24,920",
				"to": "00:09:30,200"
			},
			"offsets": {
				"from": 564920,
				"to": 570200
			},
			"text": " if for whatever reason you want to fetch the address of shack, metallic, and paris-hilton"
		},
		{
			"timestamps": {
				"from": "00:09:30,200",
				"to": "00:09:35,080"
			},
			"offsets": {
				"from": 570200,
				"to": 575080
			},
			"text": " in 30 times in rapid succession, you can see some massive gains in performance here."
		},
		{
			"timestamps": {
				"from": "00:09:35,080",
				"to": "00:09:42,280"
			},
			"offsets": {
				"from": 575080,
				"to": 582280
			},
			"text": " Same async I/O as completed code sample there. That's the takeaway. Your gains are,"
		},
		{
			"timestamps": {
				"from": "00:09:42,280",
				"to": "00:09:51,560"
			},
			"offsets": {
				"from": 582280,
				"to": 591560
			},
			"text": " might be even more significant than the standard Web3 methods. Let's get a little weirder. Web3Py"
		},
		{
			"timestamps": {
				"from": "00:09:51,560",
				"to": "00:10:02,760"
			},
			"offsets": {
				"from": 591560,
				"to": 602760
			},
			"text": " introduced support for CCIP read functionality. So, this EIP was introduced by Nick Johnson of"
		},
		{
			"timestamps": {
				"from": "00:10:02,760",
				"to": "00:10:12,360"
			},
			"offsets": {
				"from": 602760,
				"to": 612360
			},
			"text": " ENS. CCIP stands for cross-chain improvement proposal and read alludes to your reading some data on"
		},
		{
			"timestamps": {
				"from": "00:10:12,360",
				"to": "00:10:21,400"
			},
			"offsets": {
				"from": 612360,
				"to": 621400
			},
			"text": " off-chain or otherwise not on Ethereum mainnet. So, this EIP introduced a standard for"
		},
		{
			"timestamps": {
				"from": "00:10:21,400",
				"to": "00:10:28,200"
			},
			"offsets": {
				"from": 621400,
				"to": 628200
			},
			"text": " contracts to let the user know it's going to fetch some data from somewhere else other than"
		},
		{
			"timestamps": {
				"from": "00:10:28,200",
				"to": "00:10:34,040"
			},
			"offsets": {
				"from": 628200,
				"to": 634040
			},
			"text": " mainnet Ethereum. The simple version of how this works or what this introduces is just a pattern"
		},
		{
			"timestamps": {
				"from": "00:10:34,040",
				"to": "00:10:43,240"
			},
			"offsets": {
				"from": 634040,
				"to": 643240
			},
			"text": " for using a custom solidity error to return some metadata. In of note, you can include one or more"
		},
		{
			"timestamps": {
				"from": "00:10:43,240",
				"to": "00:10:50,680"
			},
			"offsets": {
				"from": 643240,
				"to": 650680
			},
			"text": " URLs where that off-chain data can be fetched from and then a callback function for where that"
		},
		{
			"timestamps": {
				"from": "00:10:50,680",
				"to": "00:10:57,000"
			},
			"offsets": {
				"from": 650680,
				"to": 657000
			},
			"text": " off-chain data should be returned to be verified as authentic essentially. This diagram"
		},
		{
			"timestamps": {
				"from": "00:10:57,000",
				"to": "00:11:03,560"
			},
			"offsets": {
				"from": 657000,
				"to": 663560
			},
			"text": " is included in the EIP and we're going to use it as a quick example of what this looks like in"
		},
		{
			"timestamps": {
				"from": "00:11:03,560",
				"to": "00:11:12,600"
			},
			"offsets": {
				"from": 663560,
				"to": 672600
			},
			"text": " practice. So, the use case for chat through is ENS placing some or there. Let's say ENS is"
		},
		{
			"timestamps": {
				"from": "00:11:12,600",
				"to": "00:11:19,880"
			},
			"offsets": {
				"from": 672600,
				"to": 679880
			},
			"text": " some subdomain is registered on a layer two like optimism. In our case, the client is your Web3."
		},
		{
			"timestamps": {
				"from": "00:11:20,440",
				"to": "00:11:28,200"
			},
			"offsets": {
				"from": 680440,
				"to": 688200
			},
			"text": " Script or app, we will be making some funk in this case is looking to resolve the domain or the"
		},
		{
			"timestamps": {
				"from": "00:11:28,200",
				"to": "00:11:35,480"
			},
			"offsets": {
				"from": 688200,
				"to": 695480
			},
			"text": " subdomain of an address. The contract is an ENS resolver contract that says this value does not"
		},
		{
			"timestamps": {
				"from": "00:11:35,480",
				"to": "00:11:41,640"
			},
			"offsets": {
				"from": 695480,
				"to": 701640
			},
			"text": " live on mainnet Ethereum but you can find it on off-chain somewhere at this optimism gateway,"
		},
		{
			"timestamps": {
				"from": "00:11:41,640",
				"to": "00:11:47,160"
			},
			"offsets": {
				"from": 701640,
				"to": 707160
			},
			"text": " for example, and that information is packaged up in this off-chain lookup revert message."
		},
		{
			"timestamps": {
				"from": "00:11:47,800",
				"to": "00:11:51,320"
			},
			"offsets": {
				"from": 707800,
				"to": 711320
			},
			"text": " So, under the hood, without the user having to know this is even happening,"
		},
		{
			"timestamps": {
				"from": "00:11:51,320",
				"to": "00:11:59,640"
			},
			"offsets": {
				"from": 711320,
				"to": 719640
			},
			"text": " Web3Py will go and make a get or post request to that optimism gateway, get that address back"
		},
		{
			"timestamps": {
				"from": "00:11:59,640",
				"to": "00:12:07,160"
			},
			"offsets": {
				"from": 719640,
				"to": 727160
			},
			"text": " and then pass the relevant data to the specified callback function. The callback function within"
		},
		{
			"timestamps": {
				"from": "00:12:07,160",
				"to": "00:12:12,440"
			},
			"offsets": {
				"from": 727160,
				"to": 732440
			},
			"text": " the same ENS resolver contract then reads the signature, verifies that this address came from"
		},
		{
			"timestamps": {
				"from": "00:12:13,240",
				"to": "00:12:21,720"
			},
			"offsets": {
				"from": 733240,
				"to": 741720
			},
			"text": " a source that it trusts and sends back along the answer to Web3Py. So, from a user standpoint,"
		},
		{
			"timestamps": {
				"from": "00:12:21,720",
				"to": "00:12:28,120"
			},
			"offsets": {
				"from": 741720,
				"to": 748120
			},
			"text": " this looks dead simple, right? You are just looking up the address for a name and you get a value back"
		},
		{
			"timestamps": {
				"from": "00:12:28,120",
				"to": "00:12:36,920"
			},
			"offsets": {
				"from": 748120,
				"to": 756920
			},
			"text": " and this address might actually live on optimism on another L2 on somewhere else entirely. So,"
		},
		{
			"timestamps": {
				"from": "00:12:36,920",
				"to": "00:12:41,320"
			},
			"offsets": {
				"from": 756920,
				"to": 761320
			},
			"text": " just for context here, ENS had to implement a protocol change of their own to support this"
		},
		{
			"timestamps": {
				"from": "00:12:41,320",
				"to": "00:12:47,560"
			},
			"offsets": {
				"from": 761320,
				"to": 767560
			},
			"text": " functionality called wildcard resolution. If you are interested here, they have a full open source"
		},
		{
			"timestamps": {
				"from": "00:12:47,560",
				"to": "00:12:53,960"
			},
			"offsets": {
				"from": 767560,
				"to": 773960
			},
			"text": " example of their resolver contract that supports this functionality. Also, note, Nick is giving a"
		},
		{
			"timestamps": {
				"from": "00:12:53,960",
				"to": "00:13:00,760"
			},
			"offsets": {
				"from": 773960,
				"to": 780760
			},
			"text": " talk directly after this one and I believe he is digging in a bit further into CCIP read functionality."
		},
		{
			"timestamps": {
				"from": "00:13:00,760",
				"to": "00:13:06,280"
			},
			"offsets": {
				"from": 780760,
				"to": 786280
			},
			"text": " Cool little update from last week, the lens protocol folks announced that they are going to be using"
		},
		{
			"timestamps": {
				"from": "00:13:06,280",
				"to": "00:13:16,920"
			},
			"offsets": {
				"from": 786280,
				"to": 796920
			},
			"text": " the same feature set to supply social graph data from their protocol via their own ENS"
		},
		{
			"timestamps": {
				"from": "00:13:16,920",
				"to": "00:13:22,360"
			},
			"offsets": {
				"from": 796920,
				"to": 802360
			},
			"text": " resolvers, I guess they are running. If for whatever reason this functionality introduces some"
		},
		{
			"timestamps": {
				"from": "00:13:22,360",
				"to": "00:13:28,680"
			},
			"offsets": {
				"from": 802360,
				"to": 808680
			},
			"text": " security concern that is not compatible with your use case, you can fundamentally disable that at"
		},
		{
			"timestamps": {
				"from": "00:13:28,680",
				"to": "00:13:37,400"
			},
			"offsets": {
				"from": 808680,
				"to": 817400
			},
			"text": " the provider level or at the call level. And then again, for more information, go hang out with Nick"
		},
		{
			"timestamps": {
				"from": "00:13:37,400",
				"to": "00:13:43,160"
			},
			"offsets": {
				"from": 817400,
				"to": 823160
			},
			"text": " or check out this blog post. If you are looking to do something outside of the normal scope of"
		},
		{
			"timestamps": {
				"from": "00:13:43,160",
				"to": "00:13:49,720"
			},
			"offsets": {
				"from": 823160,
				"to": 829720
			},
			"text": " what Web3Py does, you have a few options. The first is middleware and this is the most common"
		},
		{
			"timestamps": {
				"from": "00:13:49,720",
				"to": "00:13:56,360"
			},
			"offsets": {
				"from": 829720,
				"to": 836360
			},
			"text": " tool you will reach for. Effectively what it does is it lets you inject some behavior either just"
		},
		{
			"timestamps": {
				"from": "00:13:56,360",
				"to": "00:14:02,840"
			},
			"offsets": {
				"from": 836360,
				"to": 842840
			},
			"text": " before a call goes out or just when it returns. So you might be using this for some special"
		},
		{
			"timestamps": {
				"from": "00:14:02,840",
				"to": "00:14:10,040"
			},
			"offsets": {
				"from": 842840,
				"to": 850040
			},
			"text": " logging behavior, some data visualization, some additional munging of data points or"
		},
		{
			"timestamps": {
				"from": "00:14:10,040",
				"to": "00:14:14,920"
			},
			"offsets": {
				"from": 850040,
				"to": 854920
			},
			"text": " whatever your use case might be. It is pretty flexible. And then you inject that into what we"
		},
		{
			"timestamps": {
				"from": "00:14:14,920",
				"to": "00:14:22,680"
			},
			"offsets": {
				"from": 854920,
				"to": 862680
			},
			"text": " call our middleware onion. Your next option is a custom method. So if you are using a client like"
		},
		{
			"timestamps": {
				"from": "00:14:23,320",
				"to": "00:14:31,160"
			},
			"offsets": {
				"from": 863320,
				"to": 871160
			},
			"text": " Aragon or Otterscan, one of these that have some non-standard RPC functions, you can choose just"
		},
		{
			"timestamps": {
				"from": "00:14:31,160",
				"to": "00:14:37,560"
			},
			"offsets": {
				"from": 871160,
				"to": 877560
			},
			"text": " to lump those directly into the ETH module or whatever feels appropriate for you. You can use"
		},
		{
			"timestamps": {
				"from": "00:14:37,560",
				"to": "00:14:43,960"
			},
			"offsets": {
				"from": 877560,
				"to": 883960
			},
			"text": " some of our data formatters and call that just like you would any other ETH method. Also,"
		},
		{
			"timestamps": {
				"from": "00:14:43,960",
				"to": "00:14:50,920"
			},
			"offsets": {
				"from": 883960,
				"to": 890920
			},
			"text": " the note here is that you can use this to override any existing method in the module. So if you"
		},
		{
			"timestamps": {
				"from": "00:14:50,920",
				"to": "00:14:57,000"
			},
			"offsets": {
				"from": 890920,
				"to": 897000
			},
			"text": " want to change the way that any call or getting of gas works, etc., you can essentially"
		},
		{
			"timestamps": {
				"from": "00:14:57,000",
				"to": "00:15:03,800"
			},
			"offsets": {
				"from": 897000,
				"to": 903800
			},
			"text": " replace it with your own version. Your third option is external modules. This is intended to be"
		},
		{
			"timestamps": {
				"from": "00:15:03,800",
				"to": "00:15:10,920"
			},
			"offsets": {
				"from": 903800,
				"to": 910920
			},
			"text": " plug-in support. So if you want to include an entire API within Web3Py, a whole set of functions,"
		},
		{
			"timestamps": {
				"from": "00:15:10,920",
				"to": "00:15:18,600"
			},
			"offsets": {
				"from": 910920,
				"to": 918600
			},
			"text": " you can do that via external modules. This is very flexible as well. Our only stipulation is"
		},
		{
			"timestamps": {
				"from": "00:15:18,600",
				"to": "00:15:23,080"
			},
			"offsets": {
				"from": 918600,
				"to": 923080
			},
			"text": " that you create these as classes and if you need to make use of the parent Web3 module,"
		},
		{
			"timestamps": {
				"from": "00:15:23,080",
				"to": "00:15:29,000"
			},
			"offsets": {
				"from": 923080,
				"to": 929000
			},
			"text": " then you have access to that via the init method. You can nest these how you choose."
		},
		{
			"timestamps": {
				"from": "00:15:29,000",
				"to": "00:15:35,720"
			},
			"offsets": {
				"from": 929000,
				"to": 935720
			},
			"text": " I think that's all there is to that one. And for custom providers, you're unlikely to reach"
		},
		{
			"timestamps": {
				"from": "00:15:35,720",
				"to": "00:15:40,440"
			},
			"offsets": {
				"from": 935720,
				"to": 940440
			},
			"text": " for this unless you're creating something like a custom test harness or you just need to"
		},
		{
			"timestamps": {
				"from": "00:15:40,440",
				"to": "00:15:46,040"
			},
			"offsets": {
				"from": 940440,
				"to": 946040
			},
			"text": " fundamentally alter the way that every request is made. I'll leave that one there. Finally,"
		},
		{
			"timestamps": {
				"from": "00:15:47,560",
				"to": "00:15:51,480"
			},
			"offsets": {
				"from": 947560,
				"to": 951480
			},
			"text": " I don't recommend it, but if you've got a monkey patch, do what you've got to do."
		},
		{
			"timestamps": {
				"from": "00:15:51,480",
				"to": "00:15:54,280"
			},
			"offsets": {
				"from": 951480,
				"to": 954280
			},
			"text": " For more context on when you might reach for each of these,"
		},
		{
			"timestamps": {
				"from": "00:15:54,280",
				"to": "00:15:59,240"
			},
			"offsets": {
				"from": 954280,
				"to": 959240
			},
			"text": " got another blog post just for you. Are we good? Are we taking breaths out there?"
		},
		{
			"timestamps": {
				"from": "00:15:59,240",
				"to": "00:16:04,440"
			},
			"offsets": {
				"from": 959240,
				"to": 964440
			},
			"text": " All right, let's talk about the merge. As an app developer, what do you need to care about?"
		},
		{
			"timestamps": {
				"from": "00:16:04,440",
				"to": "00:16:11,240"
			},
			"offsets": {
				"from": 964440,
				"to": 971240
			},
			"text": " The good news is that not much else, not that much has changed here. So a couple things,"
		},
		{
			"timestamps": {
				"from": "00:16:12,200",
				"to": "00:16:16,920"
			},
			"offsets": {
				"from": 972200,
				"to": 976920
			},
			"text": " we said goodbye to some test nets. Gorley is still a good choice."
		},
		{
			"timestamps": {
				"from": "00:16:16,920",
				"to": "00:16:23,560"
			},
			"offsets": {
				"from": 976920,
				"to": 983560
			},
			"text": " Sepolia is still good as far as I know as well too. Block times changed. There's maybe a subset"
		},
		{
			"timestamps": {
				"from": "00:16:23,560",
				"to": "00:16:29,560"
			},
			"offsets": {
				"from": 983560,
				"to": 989560
			},
			"text": " of applications this might be relevant for. Pre-merge, a new block was added to the chain"
		},
		{
			"timestamps": {
				"from": "00:16:29,560",
				"to": "00:16:37,640"
			},
			"offsets": {
				"from": 989560,
				"to": 997640
			},
			"text": " on average 13 seconds with high variability. In our new world, we have a new block every 12 seconds"
		},
		{
			"timestamps": {
				"from": "00:16:37,640",
				"to": "00:16:43,480"
			},
			"offsets": {
				"from": 997640,
				"to": 1003480
			},
			"text": " even with much less variability. I think it might be useful to understand where that variability"
		},
		{
			"timestamps": {
				"from": "00:16:43,480",
				"to": "00:16:49,720"
			},
			"offsets": {
				"from": 1003480,
				"to": 1009720
			},
			"text": " comes from by differentiating slots and blocks if you're not familiar. So every 12 seconds,"
		},
		{
			"timestamps": {
				"from": "00:16:49,720",
				"to": "00:16:58,600"
			},
			"offsets": {
				"from": 1009720,
				"to": 1018600
			},
			"text": " a new slot is made available and a randomly chosen validator can then propose a block"
		},
		{
			"timestamps": {
				"from": "00:16:58,600",
				"to": "00:17:05,400"
			},
			"offsets": {
				"from": 1018600,
				"to": 1025400
			},
			"text": " to fill that slot. If a validator is offline for whatever reason, then we might miss that slot."
		},
		{
			"timestamps": {
				"from": "00:17:06,040",
				"to": "00:17:10,280"
			},
			"offsets": {
				"from": 1026040,
				"to": 1030280
			},
			"text": " And you're waiting for the next 12 seconds for the next slot to fill. So that's where your"
		},
		{
			"timestamps": {
				"from": "00:17:10,280",
				"to": "00:17:16,280"
			},
			"offsets": {
				"from": 1030280,
				"to": 1036280
			},
			"text": " variability comes from. This happens very infrequently, but it does happen. Next, we've got"
		},
		{
			"timestamps": {
				"from": "00:17:16,280",
				"to": "00:17:22,120"
			},
			"offsets": {
				"from": 1036280,
				"to": 1042120
			},
			"text": " block identifiers, sometimes called block tags. So you might be familiar with latest or pending"
		},
		{
			"timestamps": {
				"from": "00:17:22,120",
				"to": "00:17:26,440"
			},
			"offsets": {
				"from": 1042120,
				"to": 1046440
			},
			"text": " or adding a specific block number. If you want to specify when a particular"
		},
		{
			"timestamps": {
				"from": "00:17:28,040",
				"to": "00:17:35,640"
			},
			"offsets": {
				"from": 1048040,
				"to": 1055640
			},
			"text": " ETH call is made, we've got a couple new ones now, safe and finalized. And the short version of"
		},
		{
			"timestamps": {
				"from": "00:17:35,640",
				"to": "00:17:43,640"
			},
			"offsets": {
				"from": 1055640,
				"to": 1063640
			},
			"text": " this is that safe is going to give you a result that is based on a period where it is very unlikely"
		},
		{
			"timestamps": {
				"from": "00:17:43,640",
				"to": "00:17:50,840"
			},
			"offsets": {
				"from": 1063640,
				"to": 1070840
			},
			"text": " for a block reorg to occur and finalized is one in which it is extremely unlikely for a block reorg"
		},
		{
			"timestamps": {
				"from": "00:17:50,840",
				"to": "00:17:58,280"
			},
			"offsets": {
				"from": 1070840,
				"to": 1078280
			},
			"text": " to occur. So based on your use case, explore those block tags. And finally, we've got the beacon"
		},
		{
			"timestamps": {
				"from": "00:17:58,280",
				"to": "00:18:04,200"
			},
			"offsets": {
				"from": 1078280,
				"to": 1084200
			},
			"text": " API, which has existed for a little while within Web3Py, but maybe it's more interesting to you"
		},
		{
			"timestamps": {
				"from": "00:18:04,200",
				"to": "00:18:12,200"
			},
			"offsets": {
				"from": 1084200,
				"to": 1092200
			},
			"text": " now. We've got, there's nothing fancy here. It's a very simple wrapper around the beacon node,"
		},
		{
			"timestamps": {
				"from": "00:18:13,480",
				"to": "00:18:23,800"
			},
			"offsets": {
				"from": 1093480,
				"to": 1103800
			},
			"text": " RESTful HTTP endpoint. That's about all there is to that. Couple debugging tips. These both"
		},
		{
			"timestamps": {
				"from": "00:18:23,800",
				"to": "00:18:30,600"
			},
			"offsets": {
				"from": 1103800,
				"to": 1110600
			},
			"text": " revolve around ETH call. I've prepared this little example scenario, but in the interest of time,"
		},
		{
			"timestamps": {
				"from": "00:18:30,600",
				"to": "00:18:34,760"
			},
			"offsets": {
				"from": 1110600,
				"to": 1114760
			},
			"text": " I'm going to skip straight to the good stuff. What does ETH call? You might be familiar with it."
		},
		{
			"timestamps": {
				"from": "00:18:35,640",
				"to": "00:18:44,440"
			},
			"offsets": {
				"from": 1115640,
				"to": 1124440
			},
			"text": " You're probably more likely to use it as attached to the contract object. So, for example, if you're"
		},
		{
			"timestamps": {
				"from": "00:18:44,440",
				"to": "00:18:49,560"
			},
			"offsets": {
				"from": 1124440,
				"to": 1129560
			},
			"text": " going to execute a function on a contract, you effectively have two options. To do so, one is"
		},
		{
			"timestamps": {
				"from": "00:18:49,560",
				"to": "00:18:57,560"
			},
			"offsets": {
				"from": 1129560,
				"to": 1137560
			},
			"text": " to call call on that method or transact. Transact will submit that application to the transaction"
		},
		{
			"timestamps": {
				"from": "00:18:57,560",
				"to": "00:19:06,360"
			},
			"offsets": {
				"from": 1137560,
				"to": 1146360
			},
			"text": " pool to get picked up. But if you call, that simulates the effect locally. So, that didn't feel like"
		},
		{
			"timestamps": {
				"from": "00:19:06,360",
				"to": "00:19:11,240"
			},
			"offsets": {
				"from": 1146360,
				"to": 1151240
			},
			"text": " the perfect explanation. But let's see if we can get there. ETH call simulates the transaction in"
		},
		{
			"timestamps": {
				"from": "00:19:11,240",
				"to": "00:19:16,520"
			},
			"offsets": {
				"from": 1151240,
				"to": 1156520
			},
			"text": " your local environment. We're going to use it in isolation here to highlight a couple of debugging"
		},
		{
			"timestamps": {
				"from": "00:19:16,520",
				"to": "00:19:21,560"
			},
			"offsets": {
				"from": 1156520,
				"to": 1161560
			},
			"text": " tips that might help you out. The second parameter it takes, the first is the transaction. The second"
		},
		{
			"timestamps": {
				"from": "00:19:21,560",
				"to": "00:19:28,360"
			},
			"offsets": {
				"from": 1161560,
				"to": 1168360
			},
			"text": " is that block identifier. The default is latest. So, you would play out a transaction in whatever"
		},
		{
			"timestamps": {
				"from": "00:19:28,360",
				"to": "00:19:33,560"
			},
			"offsets": {
				"from": 1168360,
				"to": 1173560
			},
			"text": " the current state of the blockchain is. Let's say, for example, you wanted to find out why a"
		},
		{
			"timestamps": {
				"from": "00:19:33,560",
				"to": "00:19:41,480"
			},
			"offsets": {
				"from": 1173560,
				"to": 1181480
			},
			"text": " transaction failed at some point in the history of the chain. So, the revert reason is not something"
		},
		{
			"timestamps": {
				"from": "00:19:41,480",
				"to": "00:19:48,040"
			},
			"offsets": {
				"from": 1181480,
				"to": 1188040
			},
			"text": " that's stored on chain, but you can get it by essentially replaying a transaction at the time it"
		},
		{
			"timestamps": {
				"from": "00:19:48,040",
				"to": "00:19:53,240"
			},
			"offsets": {
				"from": 1188040,
				"to": 1193240
			},
			"text": " originally occurred. So, in this example, we've got a transaction we're interested in. We build up a"
		},
		{
			"timestamps": {
				"from": "00:19:53,240",
				"to": "00:19:58,840"
			},
			"offsets": {
				"from": 1193240,
				"to": 1198840
			},
			"text": " transaction, a new transaction object to replay. And then we call it at that block number minus one"
		},
		{
			"timestamps": {
				"from": "00:19:58,840",
				"to": "00:20:03,400"
			},
			"offsets": {
				"from": 1198840,
				"to": 1203400
			},
			"text": " to replicate the state that it was in at the time it occurred. And then you get that human readable"
		},
		{
			"timestamps": {
				"from": "00:20:03,400",
				"to": "00:20:08,200"
			},
			"offsets": {
				"from": 1203400,
				"to": 1208200
			},
			"text": " revert message that you can then do whatever it is you need to do with. For some more detail here,"
		},
		{
			"timestamps": {
				"from": "00:20:08,200",
				"to": "00:20:15,560"
			},
			"offsets": {
				"from": 1208200,
				"to": 1215560
			},
			"text": " another blog post. But that's not all. There is a third optional argument on ETH call, at least"
		},
		{
			"timestamps": {
				"from": "00:20:16,280",
				"to": "00:20:22,600"
			},
			"offsets": {
				"from": 1216280,
				"to": 1222600
			},
			"text": " within Gef and Aragon and possibly some others called state overrides. This can save you some"
		},
		{
			"timestamps": {
				"from": "00:20:22,600",
				"to": "00:20:31,000"
			},
			"offsets": {
				"from": 1222600,
				"to": 1231000
			},
			"text": " serious development cycles if you need to get a contract in a specific state to perform whatever"
		},
		{
			"timestamps": {
				"from": "00:20:31,000",
				"to": "00:20:35,960"
			},
			"offsets": {
				"from": 1231000,
				"to": 1235960
			},
			"text": " testing it is you need. For example, you need specific state values in that contract or you need"
		},
		{
			"timestamps": {
				"from": "00:20:35,960",
				"to": "00:20:40,760"
			},
			"offsets": {
				"from": 1235960,
				"to": 1240760
			},
			"text": " the -- you want to even alter the bytecode a little bit to -- or like the operations within"
		},
		{
			"timestamps": {
				"from": "00:20:40,760",
				"to": "00:20:47,320"
			},
			"offsets": {
				"from": 1240760,
				"to": 1247320
			},
			"text": " some of the contract itself or like undo a condition for which the contract would normally revert"
		},
		{
			"timestamps": {
				"from": "00:20:47,320",
				"to": "00:20:53,240"
			},
			"offsets": {
				"from": 1247320,
				"to": 1253240
			},
			"text": " just to see what would happen otherwise you can override that in real time within the ETH call"
		},
		{
			"timestamps": {
				"from": "00:20:53,240",
				"to": "00:21:00,840"
			},
			"offsets": {
				"from": 1253240,
				"to": 1260840
			},
			"text": " method. In this quick example, I am telling -- I'm using -- so in this example, we are telling ETH"
		},
		{
			"timestamps": {
				"from": "00:21:00,840",
				"to": "00:21:06,200"
			},
			"offsets": {
				"from": 1260840,
				"to": 1266200
			},
			"text": " call that the contract that lives at this particular address, I would like you to replace its runtime"
		},
		{
			"timestamps": {
				"from": "00:21:06,200",
				"to": "00:21:11,560"
			},
			"offsets": {
				"from": 1266200,
				"to": 1271560
			},
			"text": " bytecode with this altered version that I have made, this version that I am interested in testing."
		},
		{
			"timestamps": {
				"from": "00:21:11,560",
				"to": "00:21:19,320"
			},
			"offsets": {
				"from": 1271560,
				"to": 1279320
			},
			"text": " And then we can run that. And in this example, we get a successfully executing call in the last"
		},
		{
			"timestamps": {
				"from": "00:21:19,320",
				"to": "00:21:25,400"
			},
			"offsets": {
				"from": 1279320,
				"to": 1285400
			},
			"text": " example that would have reverted. For more detail here, check out the blog. Finally, last chapter."
		},
		{
			"timestamps": {
				"from": "00:21:25,400",
				"to": "00:21:32,040"
			},
			"offsets": {
				"from": 1285400,
				"to": 1292040
			},
			"text": " We, the Python team, know that as time goes on, more and more of our users are going to be using"
		},
		{
			"timestamps": {
				"from": "00:21:32,040",
				"to": "00:21:40,200"
			},
			"offsets": {
				"from": 1292040,
				"to": 1300200
			},
			"text": " our tools through one or more layers of abstraction and that's a good thing. Specifically in mind,"
		},
		{
			"timestamps": {
				"from": "00:21:40,200",
				"to": "00:21:46,200"
			},
			"offsets": {
				"from": 1300200,
				"to": 1306200
			},
			"text": " our development frameworks that sort of package together a bunch of functionality that let users"
		},
		{
			"timestamps": {
				"from": "00:21:46,200",
				"to": "00:21:53,080"
			},
			"offsets": {
				"from": 1306200,
				"to": 1313080
			},
			"text": " be super productive in a much shorter time. So I would like to encourage you if you haven't yet"
		},
		{
			"timestamps": {
				"from": "00:21:53,080",
				"to": "00:21:59,400"
			},
			"offsets": {
				"from": 1313080,
				"to": 1319400
			},
			"text": " to check out our friends over at AIP. They can be thought of as like the Python version of hard hat"
		},
		{
			"timestamps": {
				"from": "00:22:00,120",
				"to": "00:22:06,920"
			},
			"offsets": {
				"from": 1320120,
				"to": 1326920
			},
			"text": " and they are, I think, more and more in the future. They will be our biggest -- or they will be"
		},
		{
			"timestamps": {
				"from": "00:22:06,920",
				"to": "00:22:15,320"
			},
			"offsets": {
				"from": 1326920,
				"to": 1335320
			},
			"text": " the biggest consumers of Web3Py as a vehicle for their users. So again, this just gets us -- this"
		},
		{
			"timestamps": {
				"from": "00:22:15,320",
				"to": "00:22:21,560"
			},
			"offsets": {
				"from": 1335320,
				"to": 1341560
			},
			"text": " enables our users to be more powerful, to do more, and to solve their local problems. So that's a"
		},
		{
			"timestamps": {
				"from": "00:22:21,560",
				"to": "00:22:28,760"
			},
			"offsets": {
				"from": 1341560,
				"to": 1348760
			},
			"text": " good thing. So that's what I've got for you. We covered everything today. Show of hands, make it"
		},
		{
			"timestamps": {
				"from": "00:22:28,760",
				"to": "00:22:33,480"
			},
			"offsets": {
				"from": 1348760,
				"to": 1353480
			},
			"text": " a little interactive. Do we touch on anything you weren't already aware of? Is there anything"
		},
		{
			"timestamps": {
				"from": "00:22:33,480",
				"to": "00:22:39,640"
			},
			"offsets": {
				"from": 1353480,
				"to": 1359640
			},
			"text": " that you're ready to dig into a little deeper? That's like for the camera out there. That's like"
		},
		{
			"timestamps": {
				"from": "00:22:39,640",
				"to": "00:22:45,480"
			},
			"offsets": {
				"from": 1359640,
				"to": 1365480
			},
			"text": " 4,000 people that all raise their hands. That's cool. Cool. Then mission accomplished. Again,"
		},
		{
			"timestamps": {
				"from": "00:22:45,480",
				"to": "00:22:51,080"
			},
			"offsets": {
				"from": 1365480,
				"to": 1371080
			},
			"text": " the snakechummers.etherium.org blog is where a lot of this lives if you'd like to catch up,"
		},
		{
			"timestamps": {
				"from": "00:22:51,080",
				"to": "00:22:58,520"
			},
			"offsets": {
				"from": 1371080,
				"to": 1378520
			},
			"text": " review on any of what we've chatted about today. And [speaking in foreign language]"
		},
		{
			"timestamps": {
				"from": "00:22:58,520",
				"to": "00:23:06,680"
			},
			"offsets": {
				"from": 1378520,
				"to": 1386680
			},
			"text": " We have room for some questions from the audience."
		},
		{
			"timestamps": {
				"from": "00:23:06,680",
				"to": "00:23:15,240"
			},
			"offsets": {
				"from": 1386680,
				"to": 1395240
			},
			"text": " Just a quick comment, in terms of slots and block times, there can be mixed slots where"
		},
		{
			"timestamps": {
				"from": "00:23:15,240",
				"to": "00:23:23,400"
			},
			"offsets": {
				"from": 1395240,
				"to": 1403400
			},
			"text": " the slot occurs, but there is no block. So the block time doesn't necessarily increase every 12 seconds."
		},
		{
			"timestamps": {
				"from": "00:23:23,400",
				"to": "00:23:29,720"
			},
			"offsets": {
				"from": 1403400,
				"to": 1409720
			},
			"text": " Yeah, thanks for clarifying, though. I'm not certain I got the clarification. So a block,"
		},
		{
			"timestamps": {
				"from": "00:23:29,720",
				"to": "00:23:35,240"
			},
			"offsets": {
				"from": 1409720,
				"to": 1415240
			},
			"text": " I think we're on the same page, a block can fill a slot every 12 seconds."
		},
		{
			"timestamps": {
				"from": "00:23:35,240",
				"to": "00:23:37,720"
			},
			"offsets": {
				"from": 1415240,
				"to": 1417720
			},
			"text": " But it doesn't always. Correct."
		},
		{
			"timestamps": {
				"from": "00:23:37,720",
				"to": "00:23:47,880"
			},
			"offsets": {
				"from": 1417720,
				"to": 1427880
			},
			"text": " Like one? Perhaps it."
		},
		{
			"timestamps": {
				"from": "00:23:47,880",
				"to": "00:23:53,560"
			},
			"offsets": {
				"from": 1427880,
				"to": 1433560
			},
			"text": " [silence]"
		}
	]
}
