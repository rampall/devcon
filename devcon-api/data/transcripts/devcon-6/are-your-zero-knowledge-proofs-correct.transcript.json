{
	"systeminfo": "AVX = 1 | AVX2 = 1 | AVX512 = 0 | FMA = 1 | NEON = 0 | ARM_FMA = 0 | F16C = 1 | FP16_VA = 0 | WASM_SIMD = 0 | BLAS = 0 | SSE3 = 1 | VSX = 0 | ",
	"model": {
		"type": "base",
		"multilingual": false,
		"vocab": 51864,
		"audio": {
			"ctx": 1500,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"text": {
			"ctx": 448,
			"state": 512,
			"head": 8,
			"layer": 6
		},
		"mels": 80,
		"f16": 1
	},
	"params": {
		"model": "models/ggml-base.en.bin",
		"language": "en",
		"translate": false
	},
	"result": {
		"language": "en"
	},
	"transcription": [
		{
			"timestamps": {
				"from": "00:00:00,000",
				"to": "00:00:16,000"
			},
			"offsets": {
				"from": 0,
				"to": 16000
			},
			"text": " [ Music ]"
		},
		{
			"timestamps": {
				"from": "00:00:16,000",
				"to": "00:00:20,000"
			},
			"offsets": {
				"from": 16000,
				"to": 20000
			},
			"text": " >> Okay. As was previously mentioned, I'm John."
		},
		{
			"timestamps": {
				"from": "00:00:20,000",
				"to": "00:00:23,000"
			},
			"offsets": {
				"from": 20000,
				"to": 23000
			},
			"text": " I'm also the CTO and the co-founder of Veridize."
		},
		{
			"timestamps": {
				"from": "00:00:23,000",
				"to": "00:00:26,000"
			},
			"offsets": {
				"from": 23000,
				"to": 26000
			},
			"text": " And so today, I just want to ask you a question."
		},
		{
			"timestamps": {
				"from": "00:00:26,000",
				"to": "00:00:28,000"
			},
			"offsets": {
				"from": 26000,
				"to": 28000
			},
			"text": " Are you zero knowledge first, correct?"
		},
		{
			"timestamps": {
				"from": "00:00:28,000",
				"to": "00:00:31,000"
			},
			"offsets": {
				"from": 28000,
				"to": 31000
			},
			"text": " Why don't we find out?"
		},
		{
			"timestamps": {
				"from": "00:00:31,000",
				"to": "00:00:34,000"
			},
			"offsets": {
				"from": 31000,
				"to": 34000
			},
			"text": " So just a little bit about Veridize."
		},
		{
			"timestamps": {
				"from": "00:00:34,000",
				"to": "00:00:37,000"
			},
			"offsets": {
				"from": 34000,
				"to": 37000
			},
			"text": " All of us come from an academia background."
		},
		{
			"timestamps": {
				"from": "00:00:37,000",
				"to": "00:00:40,000"
			},
			"offsets": {
				"from": 37000,
				"to": 40000
			},
			"text": " So on the slide right here, you can see some of the main"
		},
		{
			"timestamps": {
				"from": "00:00:40,000",
				"to": "00:00:41,000"
			},
			"offsets": {
				"from": 40000,
				"to": 41000
			},
			"text": " members from Veridize."
		},
		{
			"timestamps": {
				"from": "00:00:41,000",
				"to": "00:00:44,000"
			},
			"offsets": {
				"from": 41000,
				"to": 44000
			},
			"text": " So on the top, those are the co-founders, including myself."
		},
		{
			"timestamps": {
				"from": "00:00:44,000",
				"to": "00:00:47,000"
			},
			"offsets": {
				"from": 44000,
				"to": 47000
			},
			"text": " And on the bottom, you can see some of the other people that we"
		},
		{
			"timestamps": {
				"from": "00:00:47,000",
				"to": "00:00:48,000"
			},
			"offsets": {
				"from": 47000,
				"to": 48000
			},
			"text": " have here at DevCon."
		},
		{
			"timestamps": {
				"from": "00:00:48,000",
				"to": "00:00:51,000"
			},
			"offsets": {
				"from": 48000,
				"to": 51000
			},
			"text": " So if you have any questions, please come and find us."
		},
		{
			"timestamps": {
				"from": "00:00:51,000",
				"to": "00:00:52,000"
			},
			"offsets": {
				"from": 51000,
				"to": 52000
			},
			"text": " Ask us questions."
		},
		{
			"timestamps": {
				"from": "00:00:52,000",
				"to": "00:00:54,000"
			},
			"offsets": {
				"from": 52000,
				"to": 54000
			},
			"text": " They're also right there in the third row."
		},
		{
			"timestamps": {
				"from": "00:00:54,000",
				"to": "00:01:00,000"
			},
			"offsets": {
				"from": 54000,
				"to": 60000
			},
			"text": " But yeah, so just a little bit more about us."
		},
		{
			"timestamps": {
				"from": "00:01:00,000",
				"to": "00:01:03,000"
			},
			"offsets": {
				"from": 60000,
				"to": 63000
			},
			"text": " We are a security company."
		},
		{
			"timestamps": {
				"from": "00:01:03,000",
				"to": "00:01:09,000"
			},
			"offsets": {
				"from": 63000,
				"to": 69000
			},
			"text": " So we provide audits and we also provide tooling in order to"
		},
		{
			"timestamps": {
				"from": "00:01:09,000",
				"to": "00:01:13,000"
			},
			"offsets": {
				"from": 69000,
				"to": 73000
			},
			"text": " find vulnerabilities in all aspects of the blockchain."
		},
		{
			"timestamps": {
				"from": "00:01:13,000",
				"to": "00:01:17,000"
			},
			"offsets": {
				"from": 73000,
				"to": 77000
			},
			"text": " And so basically, we build tools to help ourselves and other"
		},
		{
			"timestamps": {
				"from": "00:01:17,000",
				"to": "00:01:22,000"
			},
			"offsets": {
				"from": 77000,
				"to": 82000
			},
			"text": " people find bugs and DeFi applications, blockchains,"
		},
		{
			"timestamps": {
				"from": "00:01:22,000",
				"to": "00:01:25,000"
			},
			"offsets": {
				"from": 82000,
				"to": 85000
			},
			"text": " and what we're going to be talking about today,"
		},
		{
			"timestamps": {
				"from": "00:01:25,000",
				"to": "00:01:27,000"
			},
			"offsets": {
				"from": 85000,
				"to": 87000
			},
			"text": " zero knowledge circuits."
		},
		{
			"timestamps": {
				"from": "00:01:27,000",
				"to": "00:01:31,000"
			},
			"offsets": {
				"from": 87000,
				"to": 91000
			},
			"text": " And yeah, we're very interested in making our tooling available."
		},
		{
			"timestamps": {
				"from": "00:01:31,000",
				"to": "00:01:34,000"
			},
			"offsets": {
				"from": 91000,
				"to": 94000
			},
			"text": " And so today I'm going to talk about specifically our open"
		},
		{
			"timestamps": {
				"from": "00:01:34,000",
				"to": "00:01:37,000"
			},
			"offsets": {
				"from": 94000,
				"to": 97000
			},
			"text": " source tooling and not about the tooling that we're providing"
		},
		{
			"timestamps": {
				"from": "00:01:37,000",
				"to": "00:01:40,000"
			},
			"offsets": {
				"from": 97000,
				"to": 100000
			},
			"text": " in our security as a service suite."
		},
		{
			"timestamps": {
				"from": "00:01:40,000",
				"to": "00:01:45,000"
			},
			"offsets": {
				"from": 100000,
				"to": 105000
			},
			"text": " So to begin with, I think that would be useful to talk about"
		},
		{
			"timestamps": {
				"from": "00:01:45,000",
				"to": "00:01:49,000"
			},
			"offsets": {
				"from": 105000,
				"to": 109000
			},
			"text": " what sort of bugs we actually see in zero knowledge circuits."
		},
		{
			"timestamps": {
				"from": "00:01:49,000",
				"to": "00:01:54,000"
			},
			"offsets": {
				"from": 109000,
				"to": 114000
			},
			"text": " And so the reason why we want to do this is because these circuits"
		},
		{
			"timestamps": {
				"from": "00:01:54,000",
				"to": "00:01:59,000"
			},
			"offsets": {
				"from": 114000,
				"to": 119000
			},
			"text": " are extremely prevalent, especially in L2 blockchains."
		},
		{
			"timestamps": {
				"from": "00:01:59,000",
				"to": "00:02:03,000"
			},
			"offsets": {
				"from": 119000,
				"to": 123000
			},
			"text": " And so that means that you can see these circuits integrated into"
		},
		{
			"timestamps": {
				"from": "00:02:03,000",
				"to": "00:02:07,000"
			},
			"offsets": {
				"from": 123000,
				"to": 127000
			},
			"text": " smart contracts themselves, like tornado cache and sim4 and"
		},
		{
			"timestamps": {
				"from": "00:02:07,000",
				"to": "00:02:08,000"
			},
			"offsets": {
				"from": 127000,
				"to": 128000
			},
			"text": " blockchains."
		},
		{
			"timestamps": {
				"from": "00:02:08,000",
				"to": "00:02:12,000"
			},
			"offsets": {
				"from": 128000,
				"to": 132000
			},
			"text": " And also there are a number of libraries for circuits as well,"
		},
		{
			"timestamps": {
				"from": "00:02:12,000",
				"to": "00:02:14,000"
			},
			"offsets": {
				"from": 132000,
				"to": 134000
			},
			"text": " like the circumlib."
		},
		{
			"timestamps": {
				"from": "00:02:14,000",
				"to": "00:02:18,000"
			},
			"offsets": {
				"from": 134000,
				"to": 138000
			},
			"text": " And so one of the interesting things that we've seen is these"
		},
		{
			"timestamps": {
				"from": "00:02:18,000",
				"to": "00:02:22,000"
			},
			"offsets": {
				"from": 138000,
				"to": 142000
			},
			"text": " circuits present new challenges, especially for people who are"
		},
		{
			"timestamps": {
				"from": "00:02:22,000",
				"to": "00:02:24,000"
			},
			"offsets": {
				"from": 142000,
				"to": 144000
			},
			"text": " interested in security."
		},
		{
			"timestamps": {
				"from": "00:02:24,000",
				"to": "00:02:27,000"
			},
			"offsets": {
				"from": 144000,
				"to": 147000
			},
			"text": " And the reason why we want to do this is because we've seen"
		},
		{
			"timestamps": {
				"from": "00:02:27,000",
				"to": "00:02:31,000"
			},
			"offsets": {
				"from": 147000,
				"to": 151000
			},
			"text": " a number of exploits and all aspects of the blockchain from"
		},
		{
			"timestamps": {
				"from": "00:02:31,000",
				"to": "00:02:36,000"
			},
			"offsets": {
				"from": 151000,
				"to": 156000
			},
			"text": " smart contracts to the blockchain itself."
		},
		{
			"timestamps": {
				"from": "00:02:36,000",
				"to": "00:02:39,000"
			},
			"offsets": {
				"from": 156000,
				"to": 159000
			},
			"text": " And these zero knowledge circuits are a relatively new domain."
		},
		{
			"timestamps": {
				"from": "00:02:39,000",
				"to": "00:02:44,000"
			},
			"offsets": {
				"from": 159000,
				"to": 164000
			},
			"text": " And so while we haven't seen very many hacks in the circuits"
		},
		{
			"timestamps": {
				"from": "00:02:44,000",
				"to": "00:02:49,000"
			},
			"offsets": {
				"from": 164000,
				"to": 169000
			},
			"text": " themselves, other than luckily the ones that tornado cache found"
		},
		{
			"timestamps": {
				"from": "00:02:49,000",
				"to": "00:02:54,000"
			},
			"offsets": {
				"from": 169000,
				"to": 174000
			},
			"text": " before it was exploited, we want to make sure that people are"
		},
		{
			"timestamps": {
				"from": "00:02:54,000",
				"to": "00:02:57,000"
			},
			"offsets": {
				"from": 174000,
				"to": 177000
			},
			"text": " thinking about the security of these circuits as they develop"
		},
		{
			"timestamps": {
				"from": "00:02:57,000",
				"to": "00:02:58,000"
			},
			"offsets": {
				"from": 177000,
				"to": 178000
			},
			"text": " them."
		},
		{
			"timestamps": {
				"from": "00:02:58,000",
				"to": "00:03:01,000"
			},
			"offsets": {
				"from": 178000,
				"to": 181000
			},
			"text": " And so the way that we want to do this is by, or for Veridize,"
		},
		{
			"timestamps": {
				"from": "00:03:01,000",
				"to": "00:03:03,000"
			},
			"offsets": {
				"from": 181000,
				"to": 183000
			},
			"text": " we want to provide tools."
		},
		{
			"timestamps": {
				"from": "00:03:03,000",
				"to": "00:03:08,000"
			},
			"offsets": {
				"from": 183000,
				"to": 188000
			},
			"text": " And so I think that the best way to start is to talk about some"
		},
		{
			"timestamps": {
				"from": "00:03:08,000",
				"to": "00:03:11,000"
			},
			"offsets": {
				"from": 188000,
				"to": 191000
			},
			"text": " general types of bugs that we see."
		},
		{
			"timestamps": {
				"from": "00:03:11,000",
				"to": "00:03:15,000"
			},
			"offsets": {
				"from": 191000,
				"to": 195000
			},
			"text": " And to do this, I need to kind of establish the model of the"
		},
		{
			"timestamps": {
				"from": "00:03:15,000",
				"to": "00:03:18,000"
			},
			"offsets": {
				"from": 195000,
				"to": 198000
			},
			"text": " zero knowledge circuit that we're assuming here, just because"
		},
		{
			"timestamps": {
				"from": "00:03:18,000",
				"to": "00:03:20,000"
			},
			"offsets": {
				"from": 198000,
				"to": 200000
			},
			"text": " these circuits can be fairly complex."
		},
		{
			"timestamps": {
				"from": "00:03:20,000",
				"to": "00:03:22,000"
			},
			"offsets": {
				"from": 200000,
				"to": 202000
			},
			"text": " And so here's a simplified model of the circuit."
		},
		{
			"timestamps": {
				"from": "00:03:22,000",
				"to": "00:03:26,000"
			},
			"offsets": {
				"from": 202000,
				"to": 206000
			},
			"text": " So basically what happens is there's going to be a witness"
		},
		{
			"timestamps": {
				"from": "00:03:26,000",
				"to": "00:03:27,000"
			},
			"offsets": {
				"from": 206000,
				"to": 207000
			},
			"text": " generator."
		},
		{
			"timestamps": {
				"from": "00:03:27,000",
				"to": "00:03:30,000"
			},
			"offsets": {
				"from": 207000,
				"to": 210000
			},
			"text": " This could be a blockchain or a smart contract or something like"
		},
		{
			"timestamps": {
				"from": "00:03:30,000",
				"to": "00:03:31,000"
			},
			"offsets": {
				"from": 210000,
				"to": 211000
			},
			"text": " that."
		},
		{
			"timestamps": {
				"from": "00:03:31,000",
				"to": "00:03:33,000"
			},
			"offsets": {
				"from": 211000,
				"to": 213000
			},
			"text": " And it's going to take in a set of public and private inputs."
		},
		{
			"timestamps": {
				"from": "00:03:33,000",
				"to": "00:03:35,000"
			},
			"offsets": {
				"from": 213000,
				"to": 215000
			},
			"text": " It's going to generate a witness."
		},
		{
			"timestamps": {
				"from": "00:03:35,000",
				"to": "00:03:38,000"
			},
			"offsets": {
				"from": 215000,
				"to": 218000
			},
			"text": " And this witness is going to be provided to the Prover, along"
		},
		{
			"timestamps": {
				"from": "00:03:38,000",
				"to": "00:03:41,000"
			},
			"offsets": {
				"from": 218000,
				"to": 221000
			},
			"text": " with some additional information, which will generate a proof."
		},
		{
			"timestamps": {
				"from": "00:03:41,000",
				"to": "00:03:43,000"
			},
			"offsets": {
				"from": 221000,
				"to": 223000
			},
			"text": " And finally that will go to the verifier, and then the"
		},
		{
			"timestamps": {
				"from": "00:03:43,000",
				"to": "00:03:48,000"
			},
			"offsets": {
				"from": 223000,
				"to": 228000
			},
			"text": " verifier is going to say, yeah, it's correct, or no, it's not."
		},
		{
			"timestamps": {
				"from": "00:03:48,000",
				"to": "00:03:51,000"
			},
			"offsets": {
				"from": 228000,
				"to": 231000
			},
			"text": " And so when someone wants to create one of these circuits,"
		},
		{
			"timestamps": {
				"from": "00:03:51,000",
				"to": "00:03:53,000"
			},
			"offsets": {
				"from": 231000,
				"to": 233000
			},
			"text": " there's a couple of ways that they can do so."
		},
		{
			"timestamps": {
				"from": "00:03:53,000",
				"to": "00:03:58,000"
			},
			"offsets": {
				"from": 233000,
				"to": 238000
			},
			"text": " And the simplest model, they simply write a single application."
		},
		{
			"timestamps": {
				"from": "00:03:58,000",
				"to": "00:04:01,000"
			},
			"offsets": {
				"from": 238000,
				"to": 241000
			},
			"text": " So this would be their circuit application written in something"
		},
		{
			"timestamps": {
				"from": "00:04:01,000",
				"to": "00:04:04,000"
			},
			"offsets": {
				"from": 241000,
				"to": 244000
			},
			"text": " like a CIRKON or KIRO."
		},
		{
			"timestamps": {
				"from": "00:04:04,000",
				"to": "00:04:07,000"
			},
			"offsets": {
				"from": 244000,
				"to": 247000
			},
			"text": " And then that will generate the witness."
		},
		{
			"timestamps": {
				"from": "00:04:07,000",
				"to": "00:04:09,000"
			},
			"offsets": {
				"from": 247000,
				"to": 249000
			},
			"text": " So your smart contract, for example."
		},
		{
			"timestamps": {
				"from": "00:04:09,000",
				"to": "00:04:12,000"
			},
			"offsets": {
				"from": 249000,
				"to": 252000
			},
			"text": " And it will also generate a set of finite field constraints,"
		},
		{
			"timestamps": {
				"from": "00:04:12,000",
				"to": "00:04:16,000"
			},
			"offsets": {
				"from": 252000,
				"to": 256000
			},
			"text": " which is later used to generate the Prover and the verifier."
		},
		{
			"timestamps": {
				"from": "00:04:16,000",
				"to": "00:04:19,000"
			},
			"offsets": {
				"from": 256000,
				"to": 259000
			},
			"text": " And so the interesting thing that we see here is you have a single"
		},
		{
			"timestamps": {
				"from": "00:04:19,000",
				"to": "00:04:25,000"
			},
			"offsets": {
				"from": 259000,
				"to": 265000
			},
			"text": " application which is used to generate two different or two"
		},
		{
			"timestamps": {
				"from": "00:04:25,000",
				"to": "00:04:28,000"
			},
			"offsets": {
				"from": 265000,
				"to": 268000
			},
			"text": " different applications, which do slightly different things."
		},
		{
			"timestamps": {
				"from": "00:04:28,000",
				"to": "00:04:31,000"
			},
			"offsets": {
				"from": 268000,
				"to": 271000
			},
			"text": " And more interestingly, they can be out of sync."
		},
		{
			"timestamps": {
				"from": "00:04:31,000",
				"to": "00:04:35,000"
			},
			"offsets": {
				"from": 271000,
				"to": 275000
			},
			"text": " And so one type of bug we see here, obviously, is if someone"
		},
		{
			"timestamps": {
				"from": "00:04:35,000",
				"to": "00:04:37,000"
			},
			"offsets": {
				"from": 275000,
				"to": 277000
			},
			"text": " doesn't implement their circuit correctly."
		},
		{
			"timestamps": {
				"from": "00:04:37,000",
				"to": "00:04:41,000"
			},
			"offsets": {
				"from": 277000,
				"to": 281000
			},
			"text": " So if that happens, then we have a functional correctness violation."
		},
		{
			"timestamps": {
				"from": "00:04:41,000",
				"to": "00:04:45,000"
			},
			"offsets": {
				"from": 281000,
				"to": 285000
			},
			"text": " And it basically just means someone needs to go back and rewrite"
		},
		{
			"timestamps": {
				"from": "00:04:45,000",
				"to": "00:04:47,000"
			},
			"offsets": {
				"from": 285000,
				"to": 287000
			},
			"text": " their circuit in a way that's correct."
		},
		{
			"timestamps": {
				"from": "00:04:47,000",
				"to": "00:04:51,000"
			},
			"offsets": {
				"from": 287000,
				"to": 291000
			},
			"text": " The more interesting bugs, though, are when the witness and the"
		},
		{
			"timestamps": {
				"from": "00:04:51,000",
				"to": "00:04:54,000"
			},
			"offsets": {
				"from": 291000,
				"to": 294000
			},
			"text": " constraints are not in sync with each other."
		},
		{
			"timestamps": {
				"from": "00:04:54,000",
				"to": "00:04:57,000"
			},
			"offsets": {
				"from": 294000,
				"to": 297000
			},
			"text": " And so this happens because generally these languages provide"
		},
		{
			"timestamps": {
				"from": "00:04:57,000",
				"to": "00:05:04,000"
			},
			"offsets": {
				"from": 297000,
				"to": 304000
			},
			"text": " ways for you to put specific logic in your witness and put specific"
		},
		{
			"timestamps": {
				"from": "00:05:04,000",
				"to": "00:05:07,000"
			},
			"offsets": {
				"from": 304000,
				"to": 307000
			},
			"text": " constraints in your finite field constraints."
		},
		{
			"timestamps": {
				"from": "00:05:07,000",
				"to": "00:05:12,000"
			},
			"offsets": {
				"from": 307000,
				"to": 312000
			},
			"text": " And so if it turns out that your constraints are less permissive"
		},
		{
			"timestamps": {
				"from": "00:05:12,000",
				"to": "00:05:16,000"
			},
			"offsets": {
				"from": 312000,
				"to": 316000
			},
			"text": " than your generator, you could reject valid interactions with"
		},
		{
			"timestamps": {
				"from": "00:05:16,000",
				"to": "00:05:17,000"
			},
			"offsets": {
				"from": 316000,
				"to": 317000
			},
			"text": " the application."
		},
		{
			"timestamps": {
				"from": "00:05:17,000",
				"to": "00:05:21,000"
			},
			"offsets": {
				"from": 317000,
				"to": 321000
			},
			"text": " So, for example, if you have a blockchain, it's possible that in"
		},
		{
			"timestamps": {
				"from": "00:05:21,000",
				"to": "00:05:24,000"
			},
			"offsets": {
				"from": 321000,
				"to": 324000
			},
			"text": " this case you could have it in the Isle of Service where the"
		},
		{
			"timestamps": {
				"from": "00:05:24,000",
				"to": "00:05:28,000"
			},
			"offsets": {
				"from": 324000,
				"to": 328000
			},
			"text": " blockchain wouldn't be able to process transactions, which, you"
		},
		{
			"timestamps": {
				"from": "00:05:28,000",
				"to": "00:05:30,000"
			},
			"offsets": {
				"from": 328000,
				"to": 330000
			},
			"text": " know, wouldn't be great."
		},
		{
			"timestamps": {
				"from": "00:05:30,000",
				"to": "00:05:34,000"
			},
			"offsets": {
				"from": 330000,
				"to": 334000
			},
			"text": " The worst -- or the more dangerous case, though, and I should say"
		},
		{
			"timestamps": {
				"from": "00:05:34,000",
				"to": "00:05:37,000"
			},
			"offsets": {
				"from": 334000,
				"to": 337000
			},
			"text": " under-constraint is an under-constraint circuit."
		},
		{
			"timestamps": {
				"from": "00:05:37,000",
				"to": "00:05:41,000"
			},
			"offsets": {
				"from": 337000,
				"to": 341000
			},
			"text": " So what happens with an under-constraint circuit is the"
		},
		{
			"timestamps": {
				"from": "00:05:41,000",
				"to": "00:05:45,000"
			},
			"offsets": {
				"from": 341000,
				"to": 345000
			},
			"text": " constraints are more permissive than the witness itself."
		},
		{
			"timestamps": {
				"from": "00:05:45,000",
				"to": "00:05:49,000"
			},
			"offsets": {
				"from": 345000,
				"to": 349000
			},
			"text": " And so the reason why this is more dangerous is because while the"
		},
		{
			"timestamps": {
				"from": "00:05:49,000",
				"to": "00:05:52,000"
			},
			"offsets": {
				"from": 349000,
				"to": 352000
			},
			"text": " witness might be correct and it might provide all of the"
		},
		{
			"timestamps": {
				"from": "00:05:52,000",
				"to": "00:05:55,000"
			},
			"offsets": {
				"from": 352000,
				"to": 355000
			},
			"text": " interactions you want and they're all accepted by the constraints,"
		},
		{
			"timestamps": {
				"from": "00:05:55,000",
				"to": "00:05:57,000"
			},
			"offsets": {
				"from": 355000,
				"to": 357000
			},
			"text": " everything seems great."
		},
		{
			"timestamps": {
				"from": "00:05:57,000",
				"to": "00:06:00,000"
			},
			"offsets": {
				"from": 357000,
				"to": 360000
			},
			"text": " However, an attacker could then come in and they could provide"
		},
		{
			"timestamps": {
				"from": "00:06:00,000",
				"to": "00:06:05,000"
			},
			"offsets": {
				"from": 360000,
				"to": 365000
			},
			"text": " an alternative witness, which might be used in order to get some"
		},
		{
			"timestamps": {
				"from": "00:06:05,000",
				"to": "00:06:11,000"
			},
			"offsets": {
				"from": 365000,
				"to": 371000
			},
			"text": " alternative transaction or logic accepted by your constraints"
		},
		{
			"timestamps": {
				"from": "00:06:11,000",
				"to": "00:06:13,000"
			},
			"offsets": {
				"from": 371000,
				"to": 373000
			},
			"text": " and then proven."
		},
		{
			"timestamps": {
				"from": "00:06:13,000",
				"to": "00:06:16,000"
			},
			"offsets": {
				"from": 373000,
				"to": 376000
			},
			"text": " And this would necessarily be bad because let's say one of the"
		},
		{
			"timestamps": {
				"from": "00:06:16,000",
				"to": "00:06:20,000"
			},
			"offsets": {
				"from": 376000,
				"to": 380000
			},
			"text": " constraints, which didn't end up in your finite field constraints,"
		},
		{
			"timestamps": {
				"from": "00:06:20,000",
				"to": "00:06:24,000"
			},
			"offsets": {
				"from": 380000,
				"to": 384000
			},
			"text": " was equivalent to the sender is equal to the admin."
		},
		{
			"timestamps": {
				"from": "00:06:24,000",
				"to": "00:06:28,000"
			},
			"offsets": {
				"from": 384000,
				"to": 388000
			},
			"text": " Right? Obviously, if someone was able to bypass that, then bad"
		},
		{
			"timestamps": {
				"from": "00:06:28,000",
				"to": "00:06:30,000"
			},
			"offsets": {
				"from": 388000,
				"to": 390000
			},
			"text": " things could really happen."
		},
		{
			"timestamps": {
				"from": "00:06:30,000",
				"to": "00:06:36,000"
			},
			"offsets": {
				"from": 390000,
				"to": 396000
			},
			"text": " And so the way that we deal with this in Verdes is by using a"
		},
		{
			"timestamps": {
				"from": "00:06:36,000",
				"to": "00:06:39,000"
			},
			"offsets": {
				"from": 396000,
				"to": 399000
			},
			"text": " field in computer science called formal methods."
		},
		{
			"timestamps": {
				"from": "00:06:39,000",
				"to": "00:06:42,000"
			},
			"offsets": {
				"from": 399000,
				"to": 402000
			},
			"text": " And so formal methods provide a way of automatically reasoning"
		},
		{
			"timestamps": {
				"from": "00:06:42,000",
				"to": "00:06:44,000"
			},
			"offsets": {
				"from": 402000,
				"to": 404000
			},
			"text": " about software."
		},
		{
			"timestamps": {
				"from": "00:06:44,000",
				"to": "00:06:50,000"
			},
			"offsets": {
				"from": 404000,
				"to": 410000
			},
			"text": " And so it does this by understanding and understanding the"
		},
		{
			"timestamps": {
				"from": "00:06:50,000",
				"to": "00:06:54,000"
			},
			"offsets": {
				"from": 410000,
				"to": 414000
			},
			"text": " semantics of the underlying program and iterating over that"
		},
		{
			"timestamps": {
				"from": "00:06:54,000",
				"to": "00:06:58,000"
			},
			"offsets": {
				"from": 414000,
				"to": 418000
			},
			"text": " program in order to determine information about it."
		},
		{
			"timestamps": {
				"from": "00:06:58,000",
				"to": "00:07:01,000"
			},
			"offsets": {
				"from": 418000,
				"to": 421000
			},
			"text": " And so basically what we're going to do is we're going to use"
		},
		{
			"timestamps": {
				"from": "00:07:01,000",
				"to": "00:07:07,000"
			},
			"offsets": {
				"from": 421000,
				"to": 427000
			},
			"text": " formal methods in order to find bugs and create proofs that the"
		},
		{
			"timestamps": {
				"from": "00:07:07,000",
				"to": "00:07:09,000"
			},
			"offsets": {
				"from": 427000,
				"to": 429000
			},
			"text": " software is correct."
		},
		{
			"timestamps": {
				"from": "00:07:09,000",
				"to": "00:07:12,000"
			},
			"offsets": {
				"from": 429000,
				"to": 432000
			},
			"text": " And so within formal methods, there's basically three different"
		},
		{
			"timestamps": {
				"from": "00:07:12,000",
				"to": "00:07:13,000"
			},
			"offsets": {
				"from": 432000,
				"to": 433000
			},
			"text": " fields."
		},
		{
			"timestamps": {
				"from": "00:07:13,000",
				"to": "00:07:14,000"
			},
			"offsets": {
				"from": 433000,
				"to": 434000
			},
			"text": " So there's automated testing."
		},
		{
			"timestamps": {
				"from": "00:07:14,000",
				"to": "00:07:17,000"
			},
			"offsets": {
				"from": 434000,
				"to": 437000
			},
			"text": " So if those of you, or for those of you have heard about"
		},
		{
			"timestamps": {
				"from": "00:07:17,000",
				"to": "00:07:20,000"
			},
			"offsets": {
				"from": 437000,
				"to": 440000
			},
			"text": " fuzzing, that falls into this category."
		},
		{
			"timestamps": {
				"from": "00:07:20,000",
				"to": "00:07:23,000"
			},
			"offsets": {
				"from": 440000,
				"to": 443000
			},
			"text": " And so basically in that case, someone is just going to run the"
		},
		{
			"timestamps": {
				"from": "00:07:23,000",
				"to": "00:07:25,000"
			},
			"offsets": {
				"from": 443000,
				"to": 445000
			},
			"text": " program on a bunch of inputs."
		},
		{
			"timestamps": {
				"from": "00:07:25,000",
				"to": "00:07:27,000"
			},
			"offsets": {
				"from": 445000,
				"to": 447000
			},
			"text": " And so this is useful for finding bugs."
		},
		{
			"timestamps": {
				"from": "00:07:27,000",
				"to": "00:07:29,000"
			},
			"offsets": {
				"from": 447000,
				"to": 449000
			},
			"text": " Next, we have static analysis."
		},
		{
			"timestamps": {
				"from": "00:07:29,000",
				"to": "00:07:33,000"
			},
			"offsets": {
				"from": 449000,
				"to": 453000
			},
			"text": " We'll see a static analyzer in this talk, which is going to"
		},
		{
			"timestamps": {
				"from": "00:07:33,000",
				"to": "00:07:36,000"
			},
			"offsets": {
				"from": 453000,
				"to": 456000
			},
			"text": " analyze your source code for a particular class of bugs."
		},
		{
			"timestamps": {
				"from": "00:07:36,000",
				"to": "00:07:40,000"
			},
			"offsets": {
				"from": 456000,
				"to": 460000
			},
			"text": " And the important thing about these static analyzers is if they"
		},
		{
			"timestamps": {
				"from": "00:07:40,000",
				"to": "00:07:45,000"
			},
			"offsets": {
				"from": 460000,
				"to": 465000
			},
			"text": " can't find the bug, it has proven that the bug does not exist"
		},
		{
			"timestamps": {
				"from": "00:07:45,000",
				"to": "00:07:47,000"
			},
			"offsets": {
				"from": 465000,
				"to": 467000
			},
			"text": " in your program."
		},
		{
			"timestamps": {
				"from": "00:07:47,000",
				"to": "00:07:51,000"
			},
			"offsets": {
				"from": 467000,
				"to": 471000
			},
			"text": " However, you know, the more interesting cases if it does"
		},
		{
			"timestamps": {
				"from": "00:07:51,000",
				"to": "00:07:52,000"
			},
			"offsets": {
				"from": 471000,
				"to": 472000
			},
			"text": " find a bug."
		},
		{
			"timestamps": {
				"from": "00:07:52,000",
				"to": "00:07:54,000"
			},
			"offsets": {
				"from": 472000,
				"to": 474000
			},
			"text": " And then last, we have formal verification."
		},
		{
			"timestamps": {
				"from": "00:07:54,000",
				"to": "00:07:56,000"
			},
			"offsets": {
				"from": 474000,
				"to": 476000
			},
			"text": " Some of you might have heard about this."
		},
		{
			"timestamps": {
				"from": "00:07:56,000",
				"to": "00:07:59,000"
			},
			"offsets": {
				"from": 476000,
				"to": 479000
			},
			"text": " There are multiple ways to perform formal verification, but at"
		},
		{
			"timestamps": {
				"from": "00:07:59,000",
				"to": "00:08:02,000"
			},
			"offsets": {
				"from": 479000,
				"to": 482000
			},
			"text": " Veridize we're particularly interested in automated formal"
		},
		{
			"timestamps": {
				"from": "00:08:02,000",
				"to": "00:08:03,000"
			},
			"offsets": {
				"from": 482000,
				"to": 483000
			},
			"text": " verification."
		},
		{
			"timestamps": {
				"from": "00:08:03,000",
				"to": "00:08:06,000"
			},
			"offsets": {
				"from": 483000,
				"to": 486000
			},
			"text": " And so basically what this is going to do is it's going to analyze"
		},
		{
			"timestamps": {
				"from": "00:08:06,000",
				"to": "00:08:09,000"
			},
			"offsets": {
				"from": 486000,
				"to": 489000
			},
			"text": " your software and make sure that a specification, where a"
		},
		{
			"timestamps": {
				"from": "00:08:09,000",
				"to": "00:08:12,000"
			},
			"offsets": {
				"from": 489000,
				"to": 492000
			},
			"text": " specification is essentially a way of expressing the intended"
		},
		{
			"timestamps": {
				"from": "00:08:12,000",
				"to": "00:08:16,000"
			},
			"offsets": {
				"from": 492000,
				"to": 496000
			},
			"text": " behavior of your application, it'll make sure that that specification"
		},
		{
			"timestamps": {
				"from": "00:08:16,000",
				"to": "00:08:18,000"
			},
			"offsets": {
				"from": 496000,
				"to": 498000
			},
			"text": " holds for the application."
		},
		{
			"timestamps": {
				"from": "00:08:18,000",
				"to": "00:08:22,000"
			},
			"offsets": {
				"from": 498000,
				"to": 502000
			},
			"text": " And so that means that after using a formal verifier, one, you"
		},
		{
			"timestamps": {
				"from": "00:08:22,000",
				"to": "00:08:27,000"
			},
			"offsets": {
				"from": 502000,
				"to": 507000
			},
			"text": " can verify custom correctness properties, and two, you will have"
		},
		{
			"timestamps": {
				"from": "00:08:27,000",
				"to": "00:08:30,000"
			},
			"offsets": {
				"from": 507000,
				"to": 510000
			},
			"text": " proven that that property holds or that your implementation is"
		},
		{
			"timestamps": {
				"from": "00:08:30,000",
				"to": "00:08:31,000"
			},
			"offsets": {
				"from": 510000,
				"to": 511000
			},
			"text": " correct."
		},
		{
			"timestamps": {
				"from": "00:08:31,000",
				"to": "00:08:38,000"
			},
			"offsets": {
				"from": 511000,
				"to": 518000
			},
			"text": " And so as we go across the spectrum, it takes more effort in"
		},
		{
			"timestamps": {
				"from": "00:08:38,000",
				"to": "00:08:47,000"
			},
			"offsets": {
				"from": 518000,
				"to": 527000
			},
			"text": " order to both build and run the tool, but it also provides much"
		},
		{
			"timestamps": {
				"from": "00:08:47,000",
				"to": "00:08:49,000"
			},
			"offsets": {
				"from": 527000,
				"to": 529000
			},
			"text": " stronger guarantees."
		},
		{
			"timestamps": {
				"from": "00:08:49,000",
				"to": "00:08:51,000"
			},
			"offsets": {
				"from": 529000,
				"to": 531000
			},
			"text": " And so we're going to be looking at some of the open source"
		},
		{
			"timestamps": {
				"from": "00:08:51,000",
				"to": "00:08:56,000"
			},
			"offsets": {
				"from": 531000,
				"to": 536000
			},
			"text": " tools provided by Veridize that fall into these categories."
		},
		{
			"timestamps": {
				"from": "00:08:56,000",
				"to": "00:08:59,000"
			},
			"offsets": {
				"from": 536000,
				"to": 539000
			},
			"text": " And so first we're going to talk about a static analyzer which"
		},
		{
			"timestamps": {
				"from": "00:08:59,000",
				"to": "00:09:03,000"
			},
			"offsets": {
				"from": 539000,
				"to": 543000
			},
			"text": " performs common vulnerability detection on CRO or CIROM"
		},
		{
			"timestamps": {
				"from": "00:09:03,000",
				"to": "00:09:04,000"
			},
			"offsets": {
				"from": 543000,
				"to": 544000
			},
			"text": " programs."
		},
		{
			"timestamps": {
				"from": "00:09:04,000",
				"to": "00:09:07,000"
			},
			"offsets": {
				"from": 544000,
				"to": 547000
			},
			"text": " So basically what I'm going to describe, this is the"
		},
		{
			"timestamps": {
				"from": "00:09:07,000",
				"to": "00:09:12,000"
			},
			"offsets": {
				"from": 547000,
				"to": 552000
			},
			"text": " type of bug that is found by a static analyzer that we created"
		},
		{
			"timestamps": {
				"from": "00:09:12,000",
				"to": "00:09:13,000"
			},
			"offsets": {
				"from": 552000,
				"to": 553000
			},
			"text": " called Pycus."
		},
		{
			"timestamps": {
				"from": "00:09:13,000",
				"to": "00:09:16,000"
			},
			"offsets": {
				"from": 553000,
				"to": 556000
			},
			"text": " And so basically what it's going to look for is uniqueness"
		},
		{
			"timestamps": {
				"from": "00:09:16,000",
				"to": "00:09:17,000"
			},
			"offsets": {
				"from": 556000,
				"to": 557000
			},
			"text": " bugs."
		},
		{
			"timestamps": {
				"from": "00:09:17,000",
				"to": "00:09:21,000"
			},
			"offsets": {
				"from": 557000,
				"to": 561000
			},
			"text": " And so what a uniqueness bug is, it happens, or it occurs when a"
		},
		{
			"timestamps": {
				"from": "00:09:21,000",
				"to": "00:09:26,000"
			},
			"offsets": {
				"from": 561000,
				"to": 566000
			},
			"text": " constraint allows a single input to map to multiple outputs."
		},
		{
			"timestamps": {
				"from": "00:09:26,000",
				"to": "00:09:31,000"
			},
			"offsets": {
				"from": 566000,
				"to": 571000
			},
			"text": " And so what I mean by this is if you look at this CIROM program"
		},
		{
			"timestamps": {
				"from": "00:09:31,000",
				"to": "00:09:34,000"
			},
			"offsets": {
				"from": 571000,
				"to": 574000
			},
			"text": " over here, you don't have to understand what it does, but"
		},
		{
			"timestamps": {
				"from": "00:09:34,000",
				"to": "00:09:38,000"
			},
			"offsets": {
				"from": 574000,
				"to": 578000
			},
			"text": " basically there's a bug that's circled in red."
		},
		{
			"timestamps": {
				"from": "00:09:38,000",
				"to": "00:09:42,000"
			},
			"offsets": {
				"from": 578000,
				"to": 582000
			},
			"text": " The reason why that's circled is because it constrains all of"
		},
		{
			"timestamps": {
				"from": "00:09:42,000",
				"to": "00:09:45,000"
			},
			"offsets": {
				"from": 582000,
				"to": 585000
			},
			"text": " the outputs except for one very specific output."
		},
		{
			"timestamps": {
				"from": "00:09:45,000",
				"to": "00:09:51,000"
			},
			"offsets": {
				"from": 585000,
				"to": 591000
			},
			"text": " So Dakota is supposed to simply zero out all of the bits except"
		},
		{
			"timestamps": {
				"from": "00:09:51,000",
				"to": "00:09:55,000"
			},
			"offsets": {
				"from": 591000,
				"to": 595000
			},
			"text": " for a single bit that is specified by imp."
		},
		{
			"timestamps": {
				"from": "00:09:55,000",
				"to": "00:09:59,000"
			},
			"offsets": {
				"from": 595000,
				"to": 599000
			},
			"text": " And so what happens here is if you look over on the right, you'll"
		},
		{
			"timestamps": {
				"from": "00:09:59,000",
				"to": "00:10:03,000"
			},
			"offsets": {
				"from": 599000,
				"to": 603000
			},
			"text": " see that the constraint specifies that that multiplication has"
		},
		{
			"timestamps": {
				"from": "00:10:03,000",
				"to": "00:10:04,000"
			},
			"offsets": {
				"from": 603000,
				"to": 604000
			},
			"text": " to be equal to zero."
		},
		{
			"timestamps": {
				"from": "00:10:04,000",
				"to": "00:10:06,000"
			},
			"offsets": {
				"from": 604000,
				"to": 606000
			},
			"text": " But there's two ways that it could be equal to zero."
		},
		{
			"timestamps": {
				"from": "00:10:06,000",
				"to": "00:10:10,000"
			},
			"offsets": {
				"from": 606000,
				"to": 610000
			},
			"text": " It could be equal to zero because the output is equal to zero."
		},
		{
			"timestamps": {
				"from": "00:10:10,000",
				"to": "00:10:15,000"
			},
			"offsets": {
				"from": 610000,
				"to": 615000
			},
			"text": " Or it could be the case that imp minus i is equal to zero."
		},
		{
			"timestamps": {
				"from": "00:10:15,000",
				"to": "00:10:21,000"
			},
			"offsets": {
				"from": 615000,
				"to": 621000
			},
			"text": " And so all of the cases where imp and i are not equal to each"
		},
		{
			"timestamps": {
				"from": "00:10:21,000",
				"to": "00:10:26,000"
			},
			"offsets": {
				"from": 621000,
				"to": 626000
			},
			"text": " other are constrained, but in the case where imp is equal to i,"
		},
		{
			"timestamps": {
				"from": "00:10:26,000",
				"to": "00:10:28,000"
			},
			"offsets": {
				"from": 626000,
				"to": 628000
			},
			"text": " we find an unconstrained bit."
		},
		{
			"timestamps": {
				"from": "00:10:28,000",
				"to": "00:10:29,000"
			},
			"offsets": {
				"from": 628000,
				"to": 629000
			},
			"text": " And so what does this mean?"
		},
		{
			"timestamps": {
				"from": "00:10:29,000",
				"to": "00:10:34,000"
			},
			"offsets": {
				"from": 629000,
				"to": 634000
			},
			"text": " This means that an attacker gets to decide what the value of"
		},
		{
			"timestamps": {
				"from": "00:10:34,000",
				"to": "00:10:36,000"
			},
			"offsets": {
				"from": 634000,
				"to": 636000
			},
			"text": " out at imp is."
		},
		{
			"timestamps": {
				"from": "00:10:36,000",
				"to": "00:10:41,000"
			},
			"offsets": {
				"from": 636000,
				"to": 641000
			},
			"text": " So it could be the desired value, which is one, or it could be zero."
		},
		{
			"timestamps": {
				"from": "00:10:41,000",
				"to": "00:10:43,000"
			},
			"offsets": {
				"from": 641000,
				"to": 643000
			},
			"text": " And so why does this matter?"
		},
		{
			"timestamps": {
				"from": "00:10:43,000",
				"to": "00:10:46,000"
			},
			"offsets": {
				"from": 643000,
				"to": 646000
			},
			"text": " Well, because of the reason that I told you about earlier, it"
		},
		{
			"timestamps": {
				"from": "00:10:46,000",
				"to": "00:10:51,000"
			},
			"offsets": {
				"from": 646000,
				"to": 651000
			},
			"text": " means that depending on how this circuit is used, someone might"
		},
		{
			"timestamps": {
				"from": "00:10:51,000",
				"to": "00:10:56,000"
			},
			"offsets": {
				"from": 651000,
				"to": 656000
			},
			"text": " be able to leverage this uncertainty in order to violate"
		},
		{
			"timestamps": {
				"from": "00:10:56,000",
				"to": "00:11:02,000"
			},
			"offsets": {
				"from": 656000,
				"to": 662000
			},
			"text": " some assumptions that you have made and hack your protocol."
		},
		{
			"timestamps": {
				"from": "00:11:02,000",
				"to": "00:11:04,000"
			},
			"offsets": {
				"from": 662000,
				"to": 664000
			},
			"text": " So what can we do about this?"
		},
		{
			"timestamps": {
				"from": "00:11:04,000",
				"to": "00:11:07,000"
			},
			"offsets": {
				"from": 664000,
				"to": 667000
			},
			"text": " Well, I already told you that we're going to be using static"
		},
		{
			"timestamps": {
				"from": "00:11:07,000",
				"to": "00:11:08,000"
			},
			"offsets": {
				"from": 667000,
				"to": 668000
			},
			"text": " analysis."
		},
		{
			"timestamps": {
				"from": "00:11:08,000",
				"to": "00:11:11,000"
			},
			"offsets": {
				"from": 668000,
				"to": 671000
			},
			"text": " And so there's two types of ways that we can solve this problem."
		},
		{
			"timestamps": {
				"from": "00:11:11,000",
				"to": "00:11:14,000"
			},
			"offsets": {
				"from": 671000,
				"to": 674000
			},
			"text": " One is we can just perform straight static analysis."
		},
		{
			"timestamps": {
				"from": "00:11:14,000",
				"to": "00:11:18,000"
			},
			"offsets": {
				"from": 674000,
				"to": 678000
			},
			"text": " And so what this is going to do is basically we'll just look at"
		},
		{
			"timestamps": {
				"from": "00:11:18,000",
				"to": "00:11:21,000"
			},
			"offsets": {
				"from": 678000,
				"to": 681000
			},
			"text": " the inputs and outputs and we'll say that if the output is a"
		},
		{
			"timestamps": {
				"from": "00:11:21,000",
				"to": "00:11:25,000"
			},
			"offsets": {
				"from": 681000,
				"to": 685000
			},
			"text": " linear combination of the inputs, then it must be constrained."
		},
		{
			"timestamps": {
				"from": "00:11:25,000",
				"to": "00:11:27,000"
			},
			"offsets": {
				"from": 685000,
				"to": 687000
			},
			"text": " So that works."
		},
		{
			"timestamps": {
				"from": "00:11:27,000",
				"to": "00:11:31,000"
			},
			"offsets": {
				"from": 687000,
				"to": 691000
			},
			"text": " However, it also produces a lot of false positives, which is"
		},
		{
			"timestamps": {
				"from": "00:11:31,000",
				"to": "00:11:33,000"
			},
			"offsets": {
				"from": 691000,
				"to": 693000
			},
			"text": " undesirable because then you have to go and you have to"
		},
		{
			"timestamps": {
				"from": "00:11:33,000",
				"to": "00:11:36,000"
			},
			"offsets": {
				"from": 693000,
				"to": 696000
			},
			"text": " determine is this real or is this not?"
		},
		{
			"timestamps": {
				"from": "00:11:36,000",
				"to": "00:11:39,000"
			},
			"offsets": {
				"from": 696000,
				"to": 699000
			},
			"text": " So instead you could use something called T-solver."
		},
		{
			"timestamps": {
				"from": "00:11:39,000",
				"to": "00:11:46,000"
			},
			"offsets": {
				"from": 699000,
				"to": 706000
			},
			"text": " So what an SMT solver is, is it's simply a program that can"
		},
		{
			"timestamps": {
				"from": "00:11:46,000",
				"to": "00:11:48,000"
			},
			"offsets": {
				"from": 706000,
				"to": 708000
			},
			"text": " solve mathematical formulas."
		},
		{
			"timestamps": {
				"from": "00:11:48,000",
				"to": "00:11:52,000"
			},
			"offsets": {
				"from": 708000,
				"to": 712000
			},
			"text": " And so because you have constraints, you can encode this"
		},
		{
			"timestamps": {
				"from": "00:11:52,000",
				"to": "00:11:55,000"
			},
			"offsets": {
				"from": 712000,
				"to": 715000
			},
			"text": " mathematical formula that states whether or not a particular"
		},
		{
			"timestamps": {
				"from": "00:11:55,000",
				"to": "00:11:57,000"
			},
			"offsets": {
				"from": 715000,
				"to": 717000
			},
			"text": " output is constrained."
		},
		{
			"timestamps": {
				"from": "00:11:57,000",
				"to": "00:12:01,000"
			},
			"offsets": {
				"from": 717000,
				"to": 721000
			},
			"text": " The problem is normally there are many constraints."
		},
		{
			"timestamps": {
				"from": "00:12:01,000",
				"to": "00:12:05,000"
			},
			"offsets": {
				"from": 721000,
				"to": 725000
			},
			"text": " And so if you tried to send that to an SMT solver, it would"
		},
		{
			"timestamps": {
				"from": "00:12:05,000",
				"to": "00:12:09,000"
			},
			"offsets": {
				"from": 725000,
				"to": 729000
			},
			"text": " quickly become, it would quickly bog down and it most likely"
		},
		{
			"timestamps": {
				"from": "00:12:09,000",
				"to": "00:12:13,000"
			},
			"offsets": {
				"from": 729000,
				"to": 733000
			},
			"text": " would not be able to solve uniqueness for large circuits."
		},
		{
			"timestamps": {
				"from": "00:12:13,000",
				"to": "00:12:17,000"
			},
			"offsets": {
				"from": 733000,
				"to": 737000
			},
			"text": " So basically we see that static analysis is scalable, but not"
		},
		{
			"timestamps": {
				"from": "00:12:17,000",
				"to": "00:12:18,000"
			},
			"offsets": {
				"from": 737000,
				"to": 738000
			},
			"text": " precise."
		},
		{
			"timestamps": {
				"from": "00:12:18,000",
				"to": "00:12:23,000"
			},
			"offsets": {
				"from": 738000,
				"to": 743000
			},
			"text": " And so what we have done is we've developed Pycus and so Pycus"
		},
		{
			"timestamps": {
				"from": "00:12:23,000",
				"to": "00:12:26,000"
			},
			"offsets": {
				"from": 743000,
				"to": 746000
			},
			"text": " is going to take in your constraints and it's going to"
		},
		{
			"timestamps": {
				"from": "00:12:26,000",
				"to": "00:12:28,000"
			},
			"offsets": {
				"from": 746000,
				"to": 748000
			},
			"text": " output one of three things."
		},
		{
			"timestamps": {
				"from": "00:12:28,000",
				"to": "00:12:32,000"
			},
			"offsets": {
				"from": 748000,
				"to": 752000
			},
			"text": " So it's going to output yes, this particular circuit is"
		},
		{
			"timestamps": {
				"from": "00:12:32,000",
				"to": "00:12:37,000"
			},
			"offsets": {
				"from": 752000,
				"to": 757000
			},
			"text": " entirely constrained, no, it's under constrained or I don't"
		},
		{
			"timestamps": {
				"from": "00:12:37,000",
				"to": "00:12:38,000"
			},
			"offsets": {
				"from": 757000,
				"to": 758000
			},
			"text": " know."
		},
		{
			"timestamps": {
				"from": "00:12:38,000",
				"to": "00:12:41,000"
			},
			"offsets": {
				"from": 758000,
				"to": 761000
			},
			"text": " But the way that it does this is by using a combination of"
		},
		{
			"timestamps": {
				"from": "00:12:41,000",
				"to": "00:12:43,000"
			},
			"offsets": {
				"from": 761000,
				"to": 763000
			},
			"text": " static analysis and SMT."
		},
		{
			"timestamps": {
				"from": "00:12:43,000",
				"to": "00:12:47,000"
			},
			"offsets": {
				"from": 763000,
				"to": 767000
			},
			"text": " And so what I mean by that is we're going to do this with"
		},
		{
			"timestamps": {
				"from": "00:12:47,000",
				"to": "00:12:51,000"
			},
			"offsets": {
				"from": 767000,
				"to": 771000
			},
			"text": " a set of constraints, we're going to have two phases that are"
		},
		{
			"timestamps": {
				"from": "00:12:51,000",
				"to": "00:12:52,000"
			},
			"offsets": {
				"from": 771000,
				"to": 772000
			},
			"text": " going to iterate."
		},
		{
			"timestamps": {
				"from": "00:12:52,000",
				"to": "00:12:55,000"
			},
			"offsets": {
				"from": 772000,
				"to": 775000
			},
			"text": " And so basically in the first phase what we're going to do is"
		},
		{
			"timestamps": {
				"from": "00:12:55,000",
				"to": "00:12:58,000"
			},
			"offsets": {
				"from": 775000,
				"to": 778000
			},
			"text": " we're going to take those constraints and a set of signals"
		},
		{
			"timestamps": {
				"from": "00:12:58,000",
				"to": "00:13:01,000"
			},
			"offsets": {
				"from": 778000,
				"to": 781000
			},
			"text": " which we've already proven are constrained and then we're"
		},
		{
			"timestamps": {
				"from": "00:13:01,000",
				"to": "00:13:04,000"
			},
			"offsets": {
				"from": 781000,
				"to": 784000
			},
			"text": " going to compute a new set of constrained signals."
		},
		{
			"timestamps": {
				"from": "00:13:04,000",
				"to": "00:13:07,000"
			},
			"offsets": {
				"from": 784000,
				"to": 787000
			},
			"text": " And so this will give us a set of constrained signals that we"
		},
		{
			"timestamps": {
				"from": "00:13:07,000",
				"to": "00:13:09,000"
			},
			"offsets": {
				"from": 787000,
				"to": 789000
			},
			"text": " already know are constrained."
		},
		{
			"timestamps": {
				"from": "00:13:09,000",
				"to": "00:13:13,000"
			},
			"offsets": {
				"from": 789000,
				"to": 793000
			},
			"text": " And so if we end up finding that all of the output signals are"
		},
		{
			"timestamps": {
				"from": "00:13:13,000",
				"to": "00:13:15,000"
			},
			"offsets": {
				"from": 793000,
				"to": 795000
			},
			"text": " constrained, great, we're done."
		},
		{
			"timestamps": {
				"from": "00:13:15,000",
				"to": "00:13:18,000"
			},
			"offsets": {
				"from": 795000,
				"to": 798000
			},
			"text": " Otherwise if there are some output signals that we haven't"
		},
		{
			"timestamps": {
				"from": "00:13:18,000",
				"to": "00:13:20,000"
			},
			"offsets": {
				"from": 798000,
				"to": 800000
			},
			"text": " been able to determine if they're constrained, we can go to"
		},
		{
			"timestamps": {
				"from": "00:13:20,000",
				"to": "00:13:21,000"
			},
			"offsets": {
				"from": 800000,
				"to": 801000
			},
			"text": " the next step."
		},
		{
			"timestamps": {
				"from": "00:13:21,000",
				"to": "00:13:24,000"
			},
			"offsets": {
				"from": 801000,
				"to": 804000
			},
			"text": " And so the next step is the SMT phase."
		},
		{
			"timestamps": {
				"from": "00:13:24,000",
				"to": "00:13:28,000"
			},
			"offsets": {
				"from": 804000,
				"to": 808000
			},
			"text": " So what happens in the SMT phase is we take the signals"
		},
		{
			"timestamps": {
				"from": "00:13:28,000",
				"to": "00:13:33,000"
			},
			"offsets": {
				"from": 808000,
				"to": 813000
			},
			"text": " which we have already proven are constrained and then we again"
		},
		{
			"timestamps": {
				"from": "00:13:33,000",
				"to": "00:13:37,000"
			},
			"offsets": {
				"from": 813000,
				"to": 817000
			},
			"text": " take the set of constraints and we use an SMT solver in order to"
		},
		{
			"timestamps": {
				"from": "00:13:37,000",
				"to": "00:13:42,000"
			},
			"offsets": {
				"from": 817000,
				"to": 822000
			},
			"text": " try to find additional output signals that are constrained."
		},
		{
			"timestamps": {
				"from": "00:13:42,000",
				"to": "00:13:46,000"
			},
			"offsets": {
				"from": 822000,
				"to": 826000
			},
			"text": " And so if we happen to find that all of the output signals are"
		},
		{
			"timestamps": {
				"from": "00:13:46,000",
				"to": "00:13:48,000"
			},
			"offsets": {
				"from": 826000,
				"to": 828000
			},
			"text": " constrained again, great, we solve a problem."
		},
		{
			"timestamps": {
				"from": "00:13:48,000",
				"to": "00:13:51,000"
			},
			"offsets": {
				"from": 828000,
				"to": 831000
			},
			"text": " If we find an output signal that is unconstrained because we"
		},
		{
			"timestamps": {
				"from": "00:13:51,000",
				"to": "00:13:55,000"
			},
			"offsets": {
				"from": 831000,
				"to": 835000
			},
			"text": " can prove that in this case, then we say, all right, you have an"
		},
		{
			"timestamps": {
				"from": "00:13:55,000",
				"to": "00:13:58,000"
			},
			"offsets": {
				"from": 835000,
				"to": 838000
			},
			"text": " under constrained signal and it's specifically this one."
		},
		{
			"timestamps": {
				"from": "00:13:58,000",
				"to": "00:14:03,000"
			},
			"offsets": {
				"from": 838000,
				"to": 843000
			},
			"text": " And then otherwise if the SMT solver fails for some reason,"
		},
		{
			"timestamps": {
				"from": "00:14:03,000",
				"to": "00:14:07,000"
			},
			"offsets": {
				"from": 843000,
				"to": 847000
			},
			"text": " so basically that happens if K-pray prime is equal to K,"
		},
		{
			"timestamps": {
				"from": "00:14:07,000",
				"to": "00:14:11,000"
			},
			"offsets": {
				"from": 847000,
				"to": 851000
			},
			"text": " then that means that we've basically stalled and will instead"
		},
		{
			"timestamps": {
				"from": "00:14:11,000",
				"to": "00:14:14,000"
			},
			"offsets": {
				"from": 851000,
				"to": 854000
			},
			"text": " just return, I'm not sure."
		},
		{
			"timestamps": {
				"from": "00:14:14,000",
				"to": "00:14:20,000"
			},
			"offsets": {
				"from": 854000,
				"to": 860000
			},
			"text": " So I mean the last case is if we ended up making progress,"
		},
		{
			"timestamps": {
				"from": "00:14:20,000",
				"to": "00:14:24,000"
			},
			"offsets": {
				"from": 860000,
				"to": 864000
			},
			"text": " then the important part is we can go back to the static analysis"
		},
		{
			"timestamps": {
				"from": "00:14:24,000",
				"to": "00:14:30,000"
			},
			"offsets": {
				"from": 864000,
				"to": 870000
			},
			"text": " case because we have now proved more cases are constrained."
		},
		{
			"timestamps": {
				"from": "00:14:30,000",
				"to": "00:14:33,000"
			},
			"offsets": {
				"from": 870000,
				"to": 873000
			},
			"text": " And so that means that the static analysis phase might be able to"
		},
		{
			"timestamps": {
				"from": "00:14:33,000",
				"to": "00:14:35,000"
			},
			"offsets": {
				"from": 873000,
				"to": 875000
			},
			"text": " make further progress."
		},
		{
			"timestamps": {
				"from": "00:14:35,000",
				"to": "00:14:38,000"
			},
			"offsets": {
				"from": 875000,
				"to": 878000
			},
			"text": " And so basically we'll do this in a loop and we find that in this"
		},
		{
			"timestamps": {
				"from": "00:14:38,000",
				"to": "00:14:42,000"
			},
			"offsets": {
				"from": 878000,
				"to": 882000
			},
			"text": " case, Pycus is able to scale much better than the previous"
		},
		{
			"timestamps": {
				"from": "00:14:42,000",
				"to": "00:14:43,000"
			},
			"offsets": {
				"from": 882000,
				"to": 883000
			},
			"text": " attempts that we saw."
		},
		{
			"timestamps": {
				"from": "00:14:43,000",
				"to": "00:14:48,000"
			},
			"offsets": {
				"from": 883000,
				"to": 888000
			},
			"text": " So basically we evaluated this on a set of circuits and Pycus was"
		},
		{
			"timestamps": {
				"from": "00:14:48,000",
				"to": "00:14:53,000"
			},
			"offsets": {
				"from": 888000,
				"to": 893000
			},
			"text": " able to solve, I believe that comes out to 98% of the circuits"
		},
		{
			"timestamps": {
				"from": "00:14:53,000",
				"to": "00:14:54,000"
			},
			"offsets": {
				"from": 893000,
				"to": 894000
			},
			"text": " that we threw it at."
		},
		{
			"timestamps": {
				"from": "00:14:54,000",
				"to": "00:14:58,000"
			},
			"offsets": {
				"from": 894000,
				"to": 898000
			},
			"text": " Whereas if we look at static analysis and SMT, static analysis"
		},
		{
			"timestamps": {
				"from": "00:14:58,000",
				"to": "00:15:05,000"
			},
			"offsets": {
				"from": 898000,
				"to": 905000
			},
			"text": " returned a bunch of false positives and SMT timed out on a lot"
		},
		{
			"timestamps": {
				"from": "00:15:05,000",
				"to": "00:15:07,000"
			},
			"offsets": {
				"from": 905000,
				"to": 907000
			},
			"text": " of the benchmarks."
		},
		{
			"timestamps": {
				"from": "00:15:07,000",
				"to": "00:15:09,000"
			},
			"offsets": {
				"from": 907000,
				"to": 909000
			},
			"text": " And so this is the first tool that we look at."
		},
		{
			"timestamps": {
				"from": "00:15:09,000",
				"to": "00:15:13,000"
			},
			"offsets": {
				"from": 909000,
				"to": 913000
			},
			"text": " So the important part is you provided a circuit and then"
		},
		{
			"timestamps": {
				"from": "00:15:13,000",
				"to": "00:15:14,000"
			},
			"offsets": {
				"from": 913000,
				"to": 914000
			},
			"text": " Pycus does all of the work for you."
		},
		{
			"timestamps": {
				"from": "00:15:14,000",
				"to": "00:15:17,000"
			},
			"offsets": {
				"from": 914000,
				"to": 917000
			},
			"text": " You don't have to provide it any additional inputs and it will"
		},
		{
			"timestamps": {
				"from": "00:15:17,000",
				"to": "00:15:21,000"
			},
			"offsets": {
				"from": 917000,
				"to": 921000
			},
			"text": " give you a list of possible problems."
		},
		{
			"timestamps": {
				"from": "00:15:21,000",
				"to": "00:15:25,000"
			},
			"offsets": {
				"from": 921000,
				"to": 925000
			},
			"text": " The next thing that we're going to look at is a verifier."
		},
		{
			"timestamps": {
				"from": "00:15:25,000",
				"to": "00:15:27,000"
			},
			"offsets": {
				"from": 925000,
				"to": 927000
			},
			"text": " So this performs automated verification."
		},
		{
			"timestamps": {
				"from": "00:15:27,000",
				"to": "00:15:30,000"
			},
			"offsets": {
				"from": 927000,
				"to": 930000
			},
			"text": " So what I'm going to talk about next is a tool called Medjai."
		},
		{
			"timestamps": {
				"from": "00:15:30,000",
				"to": "00:15:34,000"
			},
			"offsets": {
				"from": 930000,
				"to": 934000
			},
			"text": " So what Medjai does is it performs automated verification on"
		},
		{
			"timestamps": {
				"from": "00:15:34,000",
				"to": "00:15:37,000"
			},
			"offsets": {
				"from": 934000,
				"to": 937000
			},
			"text": " the same code and it does it in the same code."
		},
		{
			"timestamps": {
				"from": "00:15:37,000",
				"to": "00:15:40,000"
			},
			"offsets": {
				"from": 937000,
				"to": 940000
			},
			"text": " And so the way that it works is you will provide Medjai with your"
		},
		{
			"timestamps": {
				"from": "00:15:40,000",
				"to": "00:15:42,000"
			},
			"offsets": {
				"from": 940000,
				"to": 942000
			},
			"text": " source code and a specification."
		},
		{
			"timestamps": {
				"from": "00:15:42,000",
				"to": "00:15:46,000"
			},
			"offsets": {
				"from": 942000,
				"to": 946000
			},
			"text": " And as I stated before, the specification just specifies the"
		},
		{
			"timestamps": {
				"from": "00:15:46,000",
				"to": "00:15:49,000"
			},
			"offsets": {
				"from": 946000,
				"to": 949000
			},
			"text": " intended behavior of your kind of contract."
		},
		{
			"timestamps": {
				"from": "00:15:49,000",
				"to": "00:15:54,000"
			},
			"offsets": {
				"from": 949000,
				"to": 954000
			},
			"text": " And then Medjai will spit out either yes or more interestingly"
		},
		{
			"timestamps": {
				"from": "00:15:54,000",
				"to": "00:15:57,000"
			},
			"offsets": {
				"from": 954000,
				"to": 957000
			},
			"text": " it will spit out no and it will tell you why."
		},
		{
			"timestamps": {
				"from": "00:15:57,000",
				"to": "00:16:01,000"
			},
			"offsets": {
				"from": 957000,
				"to": 961000
			},
			"text": " And what I mean by why is it will provide you concrete evidence"
		},
		{
			"timestamps": {
				"from": "00:16:01,000",
				"to": "00:16:04,000"
			},
			"offsets": {
				"from": 961000,
				"to": 964000
			},
			"text": " that the specification does not hold."
		},
		{
			"timestamps": {
				"from": "00:16:04,000",
				"to": "00:16:08,000"
			},
			"offsets": {
				"from": 964000,
				"to": 968000
			},
			"text": " And so the way that it does this is it's going to take your"
		},
		{
			"timestamps": {
				"from": "00:16:08,000",
				"to": "00:16:10,000"
			},
			"offsets": {
				"from": 968000,
				"to": 970000
			},
			"text": " specification, your program."
		},
		{
			"timestamps": {
				"from": "00:16:10,000",
				"to": "00:16:13,000"
			},
			"offsets": {
				"from": 970000,
				"to": 973000
			},
			"text": " It's first going to translate it into a symbolic representation."
		},
		{
			"timestamps": {
				"from": "00:16:13,000",
				"to": "00:16:17,000"
			},
			"offsets": {
				"from": 973000,
				"to": 977000
			},
			"text": " And so what I mean by a symbolic representation is rather than"
		},
		{
			"timestamps": {
				"from": "00:16:17,000",
				"to": "00:16:20,000"
			},
			"offsets": {
				"from": 977000,
				"to": 980000
			},
			"text": " having -- you can think of a symbolic representation as being"
		},
		{
			"timestamps": {
				"from": "00:16:20,000",
				"to": "00:16:21,000"
			},
			"offsets": {
				"from": 980000,
				"to": 981000
			},
			"text": " unconstrained."
		},
		{
			"timestamps": {
				"from": "00:16:21,000",
				"to": "00:16:26,000"
			},
			"offsets": {
				"from": 981000,
				"to": 986000
			},
			"text": " So basically any value in your program could map to any other"
		},
		{
			"timestamps": {
				"from": "00:16:26,000",
				"to": "00:16:28,000"
			},
			"offsets": {
				"from": 986000,
				"to": 988000
			},
			"text": " value in your program."
		},
		{
			"timestamps": {
				"from": "00:16:28,000",
				"to": "00:16:31,000"
			},
			"offsets": {
				"from": 988000,
				"to": 991000
			},
			"text": " So then once it does that it's just going to run this through,"
		},
		{
			"timestamps": {
				"from": "00:16:31,000",
				"to": "00:16:34,000"
			},
			"offsets": {
				"from": 991000,
				"to": 994000
			},
			"text": " it's going to run your program symbolically."
		},
		{
			"timestamps": {
				"from": "00:16:34,000",
				"to": "00:16:36,000"
			},
			"offsets": {
				"from": 994000,
				"to": 996000
			},
			"text": " And I'll show what that means in a little bit."
		},
		{
			"timestamps": {
				"from": "00:16:36,000",
				"to": "00:16:40,000"
			},
			"offsets": {
				"from": 996000,
				"to": 1000000
			},
			"text": " And more importantly it's going to interact with an S&T solver in"
		},
		{
			"timestamps": {
				"from": "00:16:40,000",
				"to": "00:16:47,000"
			},
			"offsets": {
				"from": 1000000,
				"to": 1007000
			},
			"text": " order to generate proofs that your -- any -- or as it runs your"
		},
		{
			"timestamps": {
				"from": "00:16:47,000",
				"to": "00:16:51,000"
			},
			"offsets": {
				"from": 1007000,
				"to": 1011000
			},
			"text": " symbolic program it's going to use the S&T solver to prove that"
		},
		{
			"timestamps": {
				"from": "00:16:51,000",
				"to": "00:16:59,000"
			},
			"offsets": {
				"from": 1011000,
				"to": 1019000
			},
			"text": " your behaviors are consistent with the specification."
		},
		{
			"timestamps": {
				"from": "00:16:59,000",
				"to": "00:17:02,000"
			},
			"offsets": {
				"from": 1019000,
				"to": 1022000
			},
			"text": " So let me get a little bit more concrete about this."
		},
		{
			"timestamps": {
				"from": "00:17:02,000",
				"to": "00:17:05,000"
			},
			"offsets": {
				"from": 1022000,
				"to": 1025000
			},
			"text": " In order to do this you need a little bit of information about"
		},
		{
			"timestamps": {
				"from": "00:17:05,000",
				"to": "00:17:06,000"
			},
			"offsets": {
				"from": 1025000,
				"to": 1026000
			},
			"text": " symbolic execution."
		},
		{
			"timestamps": {
				"from": "00:17:06,000",
				"to": "00:17:09,000"
			},
			"offsets": {
				"from": 1026000,
				"to": 1029000
			},
			"text": " So basically the way symbolic execution works is looking at the"
		},
		{
			"timestamps": {
				"from": "00:17:09,000",
				"to": "00:17:14,000"
			},
			"offsets": {
				"from": 1029000,
				"to": 1034000
			},
			"text": " very top you can see just a set of variables."
		},
		{
			"timestamps": {
				"from": "00:17:14,000",
				"to": "00:17:17,000"
			},
			"offsets": {
				"from": 1034000,
				"to": 1037000
			},
			"text": " And so we start with these variables being mapped to any"
		},
		{
			"timestamps": {
				"from": "00:17:17,000",
				"to": "00:17:18,000"
			},
			"offsets": {
				"from": 1037000,
				"to": 1038000
			},
			"text": " possible value."
		},
		{
			"timestamps": {
				"from": "00:17:18,000",
				"to": "00:17:22,000"
			},
			"offsets": {
				"from": 1038000,
				"to": 1042000
			},
			"text": " Unlike testing where you say like in this case u is equal to"
		},
		{
			"timestamps": {
				"from": "00:17:22,000",
				"to": "00:17:25,000"
			},
			"offsets": {
				"from": 1042000,
				"to": 1045000
			},
			"text": " five we say u is equal to some symbolic value."
		},
		{
			"timestamps": {
				"from": "00:17:25,000",
				"to": "00:17:28,000"
			},
			"offsets": {
				"from": 1045000,
				"to": 1048000
			},
			"text": " So it's going to map to any value within the range."
		},
		{
			"timestamps": {
				"from": "00:17:28,000",
				"to": "00:17:32,000"
			},
			"offsets": {
				"from": 1048000,
				"to": 1052000
			},
			"text": " And then when we symbolically execute the program what we're"
		},
		{
			"timestamps": {
				"from": "00:17:32,000",
				"to": "00:17:35,000"
			},
			"offsets": {
				"from": 1052000,
				"to": 1055000
			},
			"text": " going to do is we're going to essentially just run through"
		},
		{
			"timestamps": {
				"from": "00:17:35,000",
				"to": "00:17:38,000"
			},
			"offsets": {
				"from": 1055000,
				"to": 1058000
			},
			"text": " your code and generate case statements."
		},
		{
			"timestamps": {
				"from": "00:17:38,000",
				"to": "00:17:44,000"
			},
			"offsets": {
				"from": 1058000,
				"to": 1064000
			},
			"text": " So for those of you who remember your proofs class basically we"
		},
		{
			"timestamps": {
				"from": "00:17:44,000",
				"to": "00:17:47,000"
			},
			"offsets": {
				"from": 1064000,
				"to": 1067000
			},
			"text": " do case splits whenever we come to like conditionals."
		},
		{
			"timestamps": {
				"from": "00:17:47,000",
				"to": "00:17:51,000"
			},
			"offsets": {
				"from": 1067000,
				"to": 1071000
			},
			"text": " And so here what you can see is starting at the very top we"
		},
		{
			"timestamps": {
				"from": "00:17:51,000",
				"to": "00:17:53,000"
			},
			"offsets": {
				"from": 1071000,
				"to": 1073000
			},
			"text": " have everything unconstrained."
		},
		{
			"timestamps": {
				"from": "00:17:53,000",
				"to": "00:17:56,000"
			},
			"offsets": {
				"from": 1073000,
				"to": 1076000
			},
			"text": " But then once we enter that first if statement that you see you'll"
		},
		{
			"timestamps": {
				"from": "00:17:56,000",
				"to": "00:17:59,000"
			},
			"offsets": {
				"from": 1076000,
				"to": 1079000
			},
			"text": " see on the left hand side that u is equal to five."
		},
		{
			"timestamps": {
				"from": "00:17:59,000",
				"to": "00:18:02,000"
			},
			"offsets": {
				"from": 1079000,
				"to": 1082000
			},
			"text": " But then we also need to consider what happens if you don't"
		},
		{
			"timestamps": {
				"from": "00:18:02,000",
				"to": "00:18:03,000"
			},
			"offsets": {
				"from": 1082000,
				"to": 1083000
			},
			"text": " enter that if statement."
		},
		{
			"timestamps": {
				"from": "00:18:03,000",
				"to": "00:18:06,000"
			},
			"offsets": {
				"from": 1083000,
				"to": 1086000
			},
			"text": " And in that case u is still some unconstrained value."
		},
		{
			"timestamps": {
				"from": "00:18:06,000",
				"to": "00:18:09,000"
			},
			"offsets": {
				"from": 1086000,
				"to": 1089000
			},
			"text": " And the important part is at the very end of this after executing"
		},
		{
			"timestamps": {
				"from": "00:18:09,000",
				"to": "00:18:14,000"
			},
			"offsets": {
				"from": 1089000,
				"to": 1094000
			},
			"text": " the entire function we end up getting a set of symbolic"
		},
		{
			"timestamps": {
				"from": "00:18:14,000",
				"to": "00:18:18,000"
			},
			"offsets": {
				"from": 1094000,
				"to": 1098000
			},
			"text": " equations which we can then send to an SMT solver to make sure"
		},
		{
			"timestamps": {
				"from": "00:18:18,000",
				"to": "00:18:20,000"
			},
			"offsets": {
				"from": 1098000,
				"to": 1100000
			},
			"text": " that it's consistent with your specification."
		},
		{
			"timestamps": {
				"from": "00:18:20,000",
				"to": "00:18:24,000"
			},
			"offsets": {
				"from": 1100000,
				"to": 1104000
			},
			"text": " So some of you may have noticed that it seems like there's a"
		},
		{
			"timestamps": {
				"from": "00:18:24,000",
				"to": "00:18:25,000"
			},
			"offsets": {
				"from": 1104000,
				"to": 1105000
			},
			"text": " fairly large spread."
		},
		{
			"timestamps": {
				"from": "00:18:25,000",
				"to": "00:18:28,000"
			},
			"offsets": {
				"from": 1105000,
				"to": 1108000
			},
			"text": " So if you look back at this you kind of get this tree like"
		},
		{
			"timestamps": {
				"from": "00:18:28,000",
				"to": "00:18:31,000"
			},
			"offsets": {
				"from": 1108000,
				"to": 1111000
			},
			"text": " structure with a lot of breadth."
		},
		{
			"timestamps": {
				"from": "00:18:31,000",
				"to": "00:18:36,000"
			},
			"offsets": {
				"from": 1111000,
				"to": 1116000
			},
			"text": " And so in order to make this actually scale what we do is we"
		},
		{
			"timestamps": {
				"from": "00:18:36,000",
				"to": "00:18:40,000"
			},
			"offsets": {
				"from": 1116000,
				"to": 1120000
			},
			"text": " have to perform a basically intelligent merging."
		},
		{
			"timestamps": {
				"from": "00:18:40,000",
				"to": "00:18:44,000"
			},
			"offsets": {
				"from": 1120000,
				"to": 1124000
			},
			"text": " So essentially what you can consider is after we execute an"
		},
		{
			"timestamps": {
				"from": "00:18:44,000",
				"to": "00:18:48,000"
			},
			"offsets": {
				"from": 1124000,
				"to": 1128000
			},
			"text": " if statement once control flow joins back we can also join those"
		},
		{
			"timestamps": {
				"from": "00:18:48,000",
				"to": "00:18:49,000"
			},
			"offsets": {
				"from": 1128000,
				"to": 1129000
			},
			"text": " states."
		},
		{
			"timestamps": {
				"from": "00:18:49,000",
				"to": "00:18:52,000"
			},
			"offsets": {
				"from": 1129000,
				"to": 1132000
			},
			"text": " And so if you don't understand what this means that that's okay."
		},
		{
			"timestamps": {
				"from": "00:18:52,000",
				"to": "00:18:56,000"
			},
			"offsets": {
				"from": 1132000,
				"to": 1136000
			},
			"text": " Basically all I'm saying here is that in order to improve the"
		},
		{
			"timestamps": {
				"from": "00:18:56,000",
				"to": "00:19:00,000"
			},
			"offsets": {
				"from": 1136000,
				"to": 1140000
			},
			"text": " scalability of this tool we push some of the work off onto the"
		},
		{
			"timestamps": {
				"from": "00:19:00,000",
				"to": "00:19:05,000"
			},
			"offsets": {
				"from": 1140000,
				"to": 1145000
			},
			"text": " SMT solver and we you basically have to balance the work that your"
		},
		{
			"timestamps": {
				"from": "00:19:05,000",
				"to": "00:19:09,000"
			},
			"offsets": {
				"from": 1145000,
				"to": 1149000
			},
			"text": " symbolic execution engine is doing and the work that the SMT"
		},
		{
			"timestamps": {
				"from": "00:19:09,000",
				"to": "00:19:11,000"
			},
			"offsets": {
				"from": 1149000,
				"to": 1151000
			},
			"text": " solver is doing."
		},
		{
			"timestamps": {
				"from": "00:19:11,000",
				"to": "00:19:15,000"
			},
			"offsets": {
				"from": 1151000,
				"to": 1155000
			},
			"text": " So let's look at an example of how this actually works."
		},
		{
			"timestamps": {
				"from": "00:19:15,000",
				"to": "00:19:19,000"
			},
			"offsets": {
				"from": 1155000,
				"to": 1159000
			},
			"text": " So here you can see the move function in makerdows,"
		},
		{
			"timestamps": {
				"from": "00:19:19,000",
				"to": "00:19:22,000"
			},
			"offsets": {
				"from": 1159000,
				"to": 1162000
			},
			"text": " Cairo implementation."
		},
		{
			"timestamps": {
				"from": "00:19:22,000",
				"to": "00:19:26,000"
			},
			"offsets": {
				"from": 1162000,
				"to": 1166000
			},
			"text": " And so the specification that we're trying to check is basically"
		},
		{
			"timestamps": {
				"from": "00:19:26,000",
				"to": "00:19:29,000"
			},
			"offsets": {
				"from": 1166000,
				"to": 1169000
			},
			"text": " that move transfers funds correctly."
		},
		{
			"timestamps": {
				"from": "00:19:29,000",
				"to": "00:19:32,000"
			},
			"offsets": {
				"from": 1169000,
				"to": 1172000
			},
			"text": " And so the specification that you see on the right hand side"
		},
		{
			"timestamps": {
				"from": "00:19:32,000",
				"to": "00:19:37,000"
			},
			"offsets": {
				"from": 1172000,
				"to": 1177000
			},
			"text": " basically says that after the move function has executed the"
		},
		{
			"timestamps": {
				"from": "00:19:37,000",
				"to": "00:19:41,000"
			},
			"offsets": {
				"from": 1177000,
				"to": 1181000
			},
			"text": " die balance of the destination should be greater than or equal to"
		},
		{
			"timestamps": {
				"from": "00:19:41,000",
				"to": "00:19:45,000"
			},
			"offsets": {
				"from": 1181000,
				"to": 1185000
			},
			"text": " the die balance at the beginning and then the die balance of the"
		},
		{
			"timestamps": {
				"from": "00:19:45,000",
				"to": "00:19:48,000"
			},
			"offsets": {
				"from": 1185000,
				"to": 1188000
			},
			"text": " source should be decreased by an appropriate amount."
		},
		{
			"timestamps": {
				"from": "00:19:48,000",
				"to": "00:19:53,000"
			},
			"offsets": {
				"from": 1188000,
				"to": 1193000
			},
			"text": " And so the interesting thing here is Magi reports that this"
		},
		{
			"timestamps": {
				"from": "00:19:53,000",
				"to": "00:19:56,000"
			},
			"offsets": {
				"from": 1193000,
				"to": 1196000
			},
			"text": " does not, that this is not sound."
		},
		{
			"timestamps": {
				"from": "00:19:56,000",
				"to": "00:20:00,000"
			},
			"offsets": {
				"from": 1196000,
				"to": 1200000
			},
			"text": " This specification does not hold for the code on the right hand"
		},
		{
			"timestamps": {
				"from": "00:20:00,000",
				"to": "00:20:01,000"
			},
			"offsets": {
				"from": 1200000,
				"to": 1201000
			},
			"text": " side."
		},
		{
			"timestamps": {
				"from": "00:20:01,000",
				"to": "00:20:05,000"
			},
			"offsets": {
				"from": 1201000,
				"to": 1205000
			},
			"text": " And specifically it says that it does not hold when RAD,"
		},
		{
			"timestamps": {
				"from": "00:20:05,000",
				"to": "00:20:09,000"
			},
			"offsets": {
				"from": 1205000,
				"to": 1209000
			},
			"text": " which is the amount that's being transferred is equal to some"
		},
		{
			"timestamps": {
				"from": "00:20:09,000",
				"to": "00:20:11,000"
			},
			"offsets": {
				"from": 1209000,
				"to": 1211000
			},
			"text": " specific value."
		},
		{
			"timestamps": {
				"from": "00:20:11,000",
				"to": "00:20:15,000"
			},
			"offsets": {
				"from": 1211000,
				"to": 1215000
			},
			"text": " And so the reason why it reports this is because in Cairo you"
		},
		{
			"timestamps": {
				"from": "00:20:15,000",
				"to": "00:20:19,000"
			},
			"offsets": {
				"from": 1215000,
				"to": 1219000
			},
			"text": " have this interesting case where because of the size of the"
		},
		{
			"timestamps": {
				"from": "00:20:19,000",
				"to": "00:20:23,000"
			},
			"offsets": {
				"from": 1219000,
				"to": 1223000
			},
			"text": " large primes they are going to be less than the size of a"
		},
		{
			"timestamps": {
				"from": "00:20:23,000",
				"to": "00:20:28,000"
			},
			"offsets": {
				"from": 1223000,
				"to": 1228000
			},
			"text": " Uint 256 and so Cairo ends up splitting your Uint 256 into two"
		},
		{
			"timestamps": {
				"from": "00:20:28,000",
				"to": "00:20:29,000"
			},
			"offsets": {
				"from": 1228000,
				"to": 1229000
			},
			"text": " parts."
		},
		{
			"timestamps": {
				"from": "00:20:29,000",
				"to": "00:20:34,000"
			},
			"offsets": {
				"from": 1229000,
				"to": 1234000
			},
			"text": " The lower 128 bits and the upper 128 bits."
		},
		{
			"timestamps": {
				"from": "00:20:34,000",
				"to": "00:20:38,000"
			},
			"offsets": {
				"from": 1234000,
				"to": 1238000
			},
			"text": " And so importantly the reason why Magi reports there's a"
		},
		{
			"timestamps": {
				"from": "00:20:38,000",
				"to": "00:20:43,000"
			},
			"offsets": {
				"from": 1238000,
				"to": 1243000
			},
			"text": " violation is because the maker dial developers here forgot to"
		},
		{
			"timestamps": {
				"from": "00:20:43,000",
				"to": "00:20:46,000"
			},
			"offsets": {
				"from": 1243000,
				"to": 1246000
			},
			"text": " constrain the value of RAD."
		},
		{
			"timestamps": {
				"from": "00:20:46,000",
				"to": "00:20:51,000"
			},
			"offsets": {
				"from": 1246000,
				"to": 1251000
			},
			"text": " And so the way that you do this is in Cairo they provide a"
		},
		{
			"timestamps": {
				"from": "00:20:51,000",
				"to": "00:20:55,000"
			},
			"offsets": {
				"from": 1251000,
				"to": 1255000
			},
			"text": " specific function in order to make sure a Uint 256 is"
		},
		{
			"timestamps": {
				"from": "00:20:55,000",
				"to": "00:20:56,000"
			},
			"offsets": {
				"from": 1255000,
				"to": 1256000
			},
			"text": " properly constrained."
		},
		{
			"timestamps": {
				"from": "00:20:56,000",
				"to": "00:21:00,000"
			},
			"offsets": {
				"from": 1256000,
				"to": 1260000
			},
			"text": " And if you leave that out that means that your Uint 256 is"
		},
		{
			"timestamps": {
				"from": "00:21:00,000",
				"to": "00:21:01,000"
			},
			"offsets": {
				"from": 1260000,
				"to": 1261000
			},
			"text": " not well formed."
		},
		{
			"timestamps": {
				"from": "00:21:01,000",
				"to": "00:21:05,000"
			},
			"offsets": {
				"from": 1261000,
				"to": 1265000
			},
			"text": " And so once we add that check back in and then we send this"
		},
		{
			"timestamps": {
				"from": "00:21:05,000",
				"to": "00:21:11,000"
			},
			"offsets": {
				"from": 1265000,
				"to": 1271000
			},
			"text": " back to Magi, Magi will report, yeah everything is right."
		},
		{
			"timestamps": {
				"from": "00:21:11,000",
				"to": "00:21:13,000"
			},
			"offsets": {
				"from": 1271000,
				"to": 1273000
			},
			"text": " The specification holds."
		},
		{
			"timestamps": {
				"from": "00:21:13,000",
				"to": "00:21:18,000"
			},
			"offsets": {
				"from": 1273000,
				"to": 1278000
			},
			"text": " And so in this case we have properly guaranteed that this"
		},
		{
			"timestamps": {
				"from": "00:21:18,000",
				"to": "00:21:21,000"
			},
			"offsets": {
				"from": 1278000,
				"to": 1281000
			},
			"text": " move function transfers funds correctly."
		},
		{
			"timestamps": {
				"from": "00:21:21,000",
				"to": "00:21:24,000"
			},
			"offsets": {
				"from": 1281000,
				"to": 1284000
			},
			"text": " And so this was just a very simple case."
		},
		{
			"timestamps": {
				"from": "00:21:24,000",
				"to": "00:21:28,000"
			},
			"offsets": {
				"from": 1284000,
				"to": 1288000
			},
			"text": " However we've been working with the maker dial people in order to"
		},
		{
			"timestamps": {
				"from": "00:21:28,000",
				"to": "00:21:33,000"
			},
			"offsets": {
				"from": 1288000,
				"to": 1293000
			},
			"text": " identify their Cairo implementation of their protocol."
		},
		{
			"timestamps": {
				"from": "00:21:33,000",
				"to": "00:21:37,000"
			},
			"offsets": {
				"from": 1293000,
				"to": 1297000
			},
			"text": " And so as we've done this we've ended up finding I think at"
		},
		{
			"timestamps": {
				"from": "00:21:37,000",
				"to": "00:21:42,000"
			},
			"offsets": {
				"from": 1297000,
				"to": 1302000
			},
			"text": " least one bug that the maker dial people have merged into their"
		},
		{
			"timestamps": {
				"from": "00:21:42,000",
				"to": "00:21:45,000"
			},
			"offsets": {
				"from": 1302000,
				"to": 1305000
			},
			"text": " implementation."
		},
		{
			"timestamps": {
				"from": "00:21:45,000",
				"to": "00:21:48,000"
			},
			"offsets": {
				"from": 1305000,
				"to": 1308000
			},
			"text": " So that's all I have for you today."
		},
		{
			"timestamps": {
				"from": "00:21:48,000",
				"to": "00:21:51,000"
			},
			"offsets": {
				"from": 1308000,
				"to": 1311000
			},
			"text": " If you are interested in learning more or seeing demos of"
		},
		{
			"timestamps": {
				"from": "00:21:51,000",
				"to": "00:21:57,000"
			},
			"offsets": {
				"from": 1311000,
				"to": 1317000
			},
			"text": " these tools in about an hour or so at three o'clock we will be"
		},
		{
			"timestamps": {
				"from": "00:21:57,000",
				"to": "00:22:02,000"
			},
			"offsets": {
				"from": 1317000,
				"to": 1322000
			},
			"text": " down at the ZK community hub just giving a demo of these tools"
		},
		{
			"timestamps": {
				"from": "00:22:02,000",
				"to": "00:22:04,000"
			},
			"offsets": {
				"from": 1322000,
				"to": 1324000
			},
			"text": " and a couple of other ones."
		},
		{
			"timestamps": {
				"from": "00:22:04,000",
				"to": "00:22:09,000"
			},
			"offsets": {
				"from": 1324000,
				"to": 1329000
			},
			"text": " Also on the left and right you can find links to the repositories"
		},
		{
			"timestamps": {
				"from": "00:22:09,000",
				"to": "00:22:11,000"
			},
			"offsets": {
				"from": 1329000,
				"to": 1331000
			},
			"text": " for Pycus and Magi."
		},
		{
			"timestamps": {
				"from": "00:22:11,000",
				"to": "00:22:15,000"
			},
			"offsets": {
				"from": 1331000,
				"to": 1335000
			},
			"text": " So if you're interested in trying them out please do."
		},
		{
			"timestamps": {
				"from": "00:22:15,000",
				"to": "00:22:20,000"
			},
			"offsets": {
				"from": 1335000,
				"to": 1340000
			},
			"text": " And there's also a Twitter link."
		},
		{
			"timestamps": {
				"from": "00:22:20,000",
				"to": "00:22:23,000"
			},
			"offsets": {
				"from": 1340000,
				"to": 1343000
			},
			"text": " So if you want to follow us on Twitter that would be fantastic."
		},
		{
			"timestamps": {
				"from": "00:22:23,000",
				"to": "00:22:32,000"
			},
			"offsets": {
				"from": 1343000,
				"to": 1352000
			},
			"text": " [Applause]"
		},
		{
			"timestamps": {
				"from": "00:22:32,000",
				"to": "00:22:34,000"
			},
			"offsets": {
				"from": 1352000,
				"to": 1354000
			},
			"text": " Hi thanks for your talk."
		},
		{
			"timestamps": {
				"from": "00:22:34,000",
				"to": "00:22:36,000"
			},
			"offsets": {
				"from": 1354000,
				"to": 1356000
			},
			"text": " Just a question."
		},
		{
			"timestamps": {
				"from": "00:22:36,000",
				"to": "00:22:39,000"
			},
			"offsets": {
				"from": 1356000,
				"to": 1359000
			},
			"text": " When you're talking about these Cairo contracts."
		},
		{
			"timestamps": {
				"from": "00:22:39,000",
				"to": "00:22:45,000"
			},
			"offsets": {
				"from": 1359000,
				"to": 1365000
			},
			"text": " And could you say if I didn't have access to the source code and"
		},
		{
			"timestamps": {
				"from": "00:22:45,000",
				"to": "00:22:50,000"
			},
			"offsets": {
				"from": 1365000,
				"to": 1370000
			},
			"text": " I just had this circuit that's like how easy is it in practice to"
		},
		{
			"timestamps": {
				"from": "00:22:50,000",
				"to": "00:22:56,000"
			},
			"offsets": {
				"from": 1370000,
				"to": 1376000
			},
			"text": " exploit these kind of arithmetic errors or constraints?"
		},
		{
			"timestamps": {
				"from": "00:22:56,000",
				"to": "00:22:59,000"
			},
			"offsets": {
				"from": 1376000,
				"to": 1379000
			},
			"text": " So if you're an attacker and you don't have access to the source"
		},
		{
			"timestamps": {
				"from": "00:22:59,000",
				"to": "00:23:04,000"
			},
			"offsets": {
				"from": 1379000,
				"to": 1384000
			},
			"text": " code how easy is it to figure this out?"
		},
		{
			"timestamps": {
				"from": "00:23:04,000",
				"to": "00:23:08,000"
			},
			"offsets": {
				"from": 1384000,
				"to": 1388000
			},
			"text": " Yeah that's a good question."
		},
		{
			"timestamps": {
				"from": "00:23:08,000",
				"to": "00:23:13,000"
			},
			"offsets": {
				"from": 1388000,
				"to": 1393000
			},
			"text": " You know attackers are very good at looking at low level code"
		},
		{
			"timestamps": {
				"from": "00:23:13,000",
				"to": "00:23:15,000"
			},
			"offsets": {
				"from": 1393000,
				"to": 1395000
			},
			"text": " and figuring out how to exploit it."
		},
		{
			"timestamps": {
				"from": "00:23:15,000",
				"to": "00:23:21,000"
			},
			"offsets": {
				"from": 1395000,
				"to": 1401000
			},
			"text": " So I would say that if you were trying to get security through"
		},
		{
			"timestamps": {
				"from": "00:23:21,000",
				"to": "00:23:24,000"
			},
			"offsets": {
				"from": 1401000,
				"to": 1404000
			},
			"text": " obscurity that's really not going to work for you here because"
		},
		{
			"timestamps": {
				"from": "00:23:24,000",
				"to": "00:23:26,000"
			},
			"offsets": {
				"from": 1404000,
				"to": 1406000
			},
			"text": " generally your code is going to be public somehow."
		},
		{
			"timestamps": {
				"from": "00:23:26,000",
				"to": "00:23:31,000"
			},
			"offsets": {
				"from": 1406000,
				"to": 1411000
			},
			"text": " And so if someone is able to gain access to even the low level"
		},
		{
			"timestamps": {
				"from": "00:23:31,000",
				"to": "00:23:34,000"
			},
			"offsets": {
				"from": 1411000,
				"to": 1414000
			},
			"text": " implementation of your code then they could possibly figure out"
		},
		{
			"timestamps": {
				"from": "00:23:34,000",
				"to": "00:23:35,000"
			},
			"offsets": {
				"from": 1414000,
				"to": 1415000
			},
			"text": " how to exploit it."
		},
		{
			"timestamps": {
				"from": "00:23:35,000",
				"to": "00:23:39,000"
			},
			"offsets": {
				"from": 1415000,
				"to": 1419000
			},
			"text": " And on top of that we've seen cases where even if someone doesn't"
		},
		{
			"timestamps": {
				"from": "00:23:39,000",
				"to": "00:23:41,000"
			},
			"offsets": {
				"from": 1419000,
				"to": 1421000
			},
			"text": " have access to your code but they're able to query it they can"
		},
		{
			"timestamps": {
				"from": "00:23:41,000",
				"to": "00:23:44,000"
			},
			"offsets": {
				"from": 1421000,
				"to": 1424000
			},
			"text": " also find potential exploits."
		},
		{
			"timestamps": {
				"from": "00:23:44,000",
				"to": "00:23:49,000"
			},
			"offsets": {
				"from": 1424000,
				"to": 1429000
			},
			"text": " I want to know what kind of bugs or issues cannot be found by those"
		},
		{
			"timestamps": {
				"from": "00:23:49,000",
				"to": "00:23:50,000"
			},
			"offsets": {
				"from": 1429000,
				"to": 1430000
			},
			"text": " two tools."
		},
		{
			"timestamps": {
				"from": "00:23:50,000",
				"to": "00:23:53,000"
			},
			"offsets": {
				"from": 1430000,
				"to": 1433000
			},
			"text": " So what kind of bugs cannot be found by these two tools?"
		},
		{
			"timestamps": {
				"from": "00:23:53,000",
				"to": "00:23:59,000"
			},
			"offsets": {
				"from": 1433000,
				"to": 1439000
			},
			"text": " Okay so for Pycus because it's not performing functional"
		},
		{
			"timestamps": {
				"from": "00:23:59,000",
				"to": "00:24:03,000"
			},
			"offsets": {
				"from": 1439000,
				"to": 1443000
			},
			"text": " correctness checking it can only find under constrained bugs and so"
		},
		{
			"timestamps": {
				"from": "00:24:03,000",
				"to": "00:24:07,000"
			},
			"offsets": {
				"from": 1443000,
				"to": 1447000
			},
			"text": " that means that it won't be able to find like if your program is"
		},
		{
			"timestamps": {
				"from": "00:24:07,000",
				"to": "00:24:08,000"
			},
			"offsets": {
				"from": 1447000,
				"to": 1448000
			},
			"text": " written incorrectly."
		},
		{
			"timestamps": {
				"from": "00:24:08,000",
				"to": "00:24:13,000"
			},
			"offsets": {
				"from": 1448000,
				"to": 1453000
			},
			"text": " For Medjai because it is verifying functional correctness it"
		},
		{
			"timestamps": {
				"from": "00:24:13,000",
				"to": "00:24:16,000"
			},
			"offsets": {
				"from": 1453000,
				"to": 1456000
			},
			"text": " relies on the quality of your specification."
		},
		{
			"timestamps": {
				"from": "00:24:16,000",
				"to": "00:24:20,000"
			},
			"offsets": {
				"from": 1456000,
				"to": 1460000
			},
			"text": " However if we assume that you have specified the behavior of your"
		},
		{
			"timestamps": {
				"from": "00:24:20,000",
				"to": "00:24:25,000"
			},
			"offsets": {
				"from": 1460000,
				"to": 1465000
			},
			"text": " program properly it should be able to find any potential bug in"
		},
		{
			"timestamps": {
				"from": "00:24:25,000",
				"to": "00:24:26,000"
			},
			"offsets": {
				"from": 1465000,
				"to": 1466000
			},
			"text": " your program."
		},
		{
			"timestamps": {
				"from": "00:24:26,000",
				"to": "00:24:30,000"
			},
			"offsets": {
				"from": 1466000,
				"to": 1470000
			},
			"text": " So for example one thing that we see is if you write a"
		},
		{
			"timestamps": {
				"from": "00:24:30,000",
				"to": "00:24:34,000"
			},
			"offsets": {
				"from": 1470000,
				"to": 1474000
			},
			"text": " specification that says let's say the die is transferred"
		},
		{
			"timestamps": {
				"from": "00:24:34,000",
				"to": "00:24:38,000"
			},
			"offsets": {
				"from": 1474000,
				"to": 1478000
			},
			"text": " correctly but then it turns out that due to an under constrained"
		},
		{
			"timestamps": {
				"from": "00:24:38,000",
				"to": "00:24:42,000"
			},
			"offsets": {
				"from": 1478000,
				"to": 1482000
			},
			"text": " bug or an under constrained bug or a uniqueness bug it doesn't"
		},
		{
			"timestamps": {
				"from": "00:24:42,000",
				"to": "00:24:45,000"
			},
			"offsets": {
				"from": 1482000,
				"to": 1485000
			},
			"text": " necessarily mean that it's transferred correctly."
		},
		{
			"timestamps": {
				"from": "00:24:45,000",
				"to": "00:24:48,000"
			},
			"offsets": {
				"from": 1485000,
				"to": 1488000
			},
			"text": " Medjai will point that out however it depends on the quality of"
		},
		{
			"timestamps": {
				"from": "00:24:48,000",
				"to": "00:24:55,000"
			},
			"offsets": {
				"from": 1488000,
				"to": 1495000
			},
			"text": " your specification and yeah it also won't find bugs in anything"
		},
		{
			"timestamps": {
				"from": "00:24:55,000",
				"to": "00:25:00,000"
			},
			"offsets": {
				"from": 1495000,
				"to": 1500000
			},
			"text": " other than your Cairo contract so if you perform interactions"
		},
		{
			"timestamps": {
				"from": "00:25:00,000",
				"to": "00:25:07,000"
			},
			"offsets": {
				"from": 1500000,
				"to": 1507000
			},
			"text": " let's say with other applications that Medjai doesn't have"
		},
		{
			"timestamps": {
				"from": "00:25:07,000",
				"to": "00:25:11,000"
			},
			"offsets": {
				"from": 1507000,
				"to": 1511000
			},
			"text": " access to their source code Medjai won't necessarily be able to"
		},
		{
			"timestamps": {
				"from": "00:25:11,000",
				"to": "00:25:14,000"
			},
			"offsets": {
				"from": 1511000,
				"to": 1514000
			},
			"text": " check and make sure that everything is correct."
		},
		{
			"timestamps": {
				"from": "00:25:14,000",
				"to": "00:25:16,000"
			},
			"offsets": {
				"from": 1514000,
				"to": 1516000
			},
			"text": " It has to make simplifying assumptions basically."
		},
		{
			"timestamps": {
				"from": "00:25:16,000",
				"to": "00:25:23,000"
			},
			"offsets": {
				"from": 1516000,
				"to": 1523000
			},
			"text": " [Music]"
		},
		{
			"timestamps": {
				"from": "00:25:23,000",
				"to": "00:25:30,000"
			},
			"offsets": {
				"from": 1523000,
				"to": 1530000
			},
			"text": " [Music]"
		},
		{
			"timestamps": {
				"from": "00:25:30,000",
				"to": "00:25:37,000"
			},
			"offsets": {
				"from": 1530000,
				"to": 1537000
			},
			"text": " [Music]"
		}
	]
}
